[
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Andrey Yegorov",
        "components": [
            "bookkeeper-client",
            "bookkeeper-server"
        ],
        "creationDate": "2017-08-09",
        "description": "Ran into this issue:\ndue to some misconfiguration of new node and rack assignments we've ended up with nodes being assigned to default rack. We are not using region-aware, only rack-aware policy.\nThis generates the following sequence of events:\n- default rack is /default-region/default-rack even though region-aware is not used.\n- other nodes mapped to racks like /rack1, /rack2 etc.\n- mixing /region/rack and /rack styles is not allowed, but exception on addition of such nodes is swallowed. All following nodes to add (if there were any) just skipped as result.",
        "fixedVersion": {
            "id": 12335749,
            "name": "4.6.0",
            "releaseDate": "2017-11-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1105",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Critical",
        "reporter": "Andrey Yegorov",
        "resolution": "Fixed",
        "resolutionDate": "2017-08-16",
        "status": "Resolved",
        "summary": "RackAwarePolicy: Failure to map node into rack may result in failure to add other nodes.",
        "updatedDate": "2017-08-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Samuel Just",
        "components": [
        ],
        "creationDate": "2017-07-27",
        "description": "The bug is that the test sets the full threshhold really close the actual usage (though just below), and if the disk is otherwise in use, the usage can fall below that threshhold during the test.  Instead, just set it to .001 since that's not what we're testing here anyway.\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1104",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Samuel Just",
        "resolution": "Fixed",
        "resolutionDate": "2017-07-28",
        "status": "Resolved",
        "summary": "BookieInitializationTest.testWithDiskFullAndAbilityToCreateNewIndexFile testcase is unreliable",
        "updatedDate": "2017-07-28"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Samuel Just",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-07-26",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1103",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Minor",
        "reporter": "Samuel Just",
        "resolution": "Fixed",
        "resolutionDate": "2017-07-28",
        "status": "Resolved",
        "summary": "LedgerMetadataCreateTest bug in ledger id generation causes intermittent hang",
        "updatedDate": "2017-07-29"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Samuel Just",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2017-07-22",
        "description": "org.apache.bookkeeper.client.BookKeeperDiskSpaceWeightedLedgerPlacementTest.testDiskSpaceWeightedBookieSelectionWithBookiesBeingAdded can intermittently fail depending on the timing of the client receiving the info back from the bookies.\n\nAdditionally, the synchronization in BookieInfoReader is more complicated than necessary and not entirely correct.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1102",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Minor",
        "reporter": "Samuel Just",
        "resolution": "Fixed",
        "resolutionDate": "2017-08-01",
        "status": "Resolved",
        "summary": "org.apache.bookkeeper.client.BookKeeperDiskSpaceWeightedLedgerPlacementTest.testDiskSpaceWeightedBookieSelectionWithBookiesBeingAdded is unreliable",
        "updatedDate": "2017-08-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jia Zhai",
        "components": [
            "Documentation"
        ],
        "creationDate": "2017-07-19",
        "description": "the 'Documentation', 'Get Involved' and 'Project Info' drop down menus\non https://bookkeeper.apache.org site are not working.\n\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1101",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2017-07-19",
        "status": "Resolved",
        "summary": "BookKeeper website menus not working under https",
        "updatedDate": "2017-07-19"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Samuel Just",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2017-06-14",
        "description": "getLedgerToReplicate leaves watches each time it traverses the\ntree until it finds a suitable replication target.  Since we don't have\na way of canceling watches, these watches tend to get abandoned,\nparticularly on interior nodes, which aren't changed much.  Thus,\nover time, some nodes would build up a very large number of watches.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1098",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Samuel Just",
        "resolution": "Fixed",
        "resolutionDate": "2017-06-28",
        "status": "Resolved",
        "summary": "ZkUnderreplicationManager can build up an unbounded number of watchers",
        "updatedDate": "2017-06-28"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-05-26",
        "description": "\n{code}\n[enrico.olivelli@DNA101PC193 bookkeeper-server-4.5.0-SNAPSHOT]$ bin/bookkeeper shell lastmark\nJMX enabled by default\nException in thread \"main\" java.lang.NullPointerException\n\tat org.apache.bookkeeper.bookie.BookieShell.printLastLogMark(BookieShell.java:2304)\n\tat org.apache.bookkeeper.bookie.BookieShell$LastMarkCmd.runCmd(BookieShell.java:1064)\n\tat org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:175)\n\tat org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:1915)\n\tat org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:1992)\n{code}",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1079",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Critical",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-26",
        "status": "Resolved",
        "summary": "shell lastMark throws NPE",
        "updatedDate": "2017-05-27"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-05-25",
        "description": "Use the journal directory and ledger paths specified in the configuration file passed in to local bookie. Before this change local bookie was always creating directories in the temp folder\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1077",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-26",
        "status": "Resolved",
        "summary": "BookKeeper: Local Bookie Journal and ledger paths",
        "updatedDate": "2017-05-26"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Leigh Stewart",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2017-05-25",
        "description": "Looking at the most prevalent client-side memory allocations, I noticed that we allocate 4KB every time we open a ledger. This is caused by allocating a 4KB buffer (in TextFormat.toStringBuilder) to account for the maximum possible Protobufs message, which is unnecessary in our case: we know the exact size of the metadata ( << 500 B) and don't need to allocate more.\n    TextFormat.merge(Readable, Message.Builder) is the current method we use. This changes to use TextFormat.merge(CharSequence, Message.Builder), which avoids the extra 4K allocation conversion + an extra StringBuilder.\n\nIt is the contribution from Alex Yarmula\n\n{quote}\ncommit 9d9d7dd26235a9beda4421b7bed750fea1789076\nAuthor: Alex Yarmula <ak@twitter.com>\nDate:   Wed Sep 23 05:57:30 2015 -0700\n\n    BK LedgerMetadata: more memory-efficient parsing of configs\n\n    Looking at the most prevalent client-side memory allocations, I noticed that we allocate 4KB every time we open a ledger. This is caused by allocating a 4KB buffer (in TextFormat.toStringBuilder) to account for the maximum possible Protobufs message, which is unnecessary in our case: we know the exact size of the metadata ( << 500 B) and don't need to allocate more.\n    TextFormat.merge(Readable, Message.Builder) is the current method we use. This changes to use TextFormat.merge(CharSequence, Message.Builder), which avoids the extra 4K allocation conversion + an extra StringBuilder.\n    RB_ID=745700\n{quote}\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1075",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-25",
        "status": "Resolved",
        "summary": "BK LedgerMetadata: more memory-efficient parsing of configs",
        "updatedDate": "2017-05-25"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Leigh Stewart",
        "components": [
            "bookkeeper-stats"
        ],
        "creationDate": "2017-05-25",
        "description": "JMX Bean was the old fashion used for exporting metrics. It was introduced before stats-provider introduced. Now stats-provider is there. Let's remove JMX Bean.\n\nIt is the change ported from Twitter branch.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1074",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-06-01",
        "status": "Resolved",
        "summary": "Remove JMX Bean ",
        "updatedDate": "2017-06-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Leigh Stewart",
        "components": [
            "bookkeeper-stats"
        ],
        "creationDate": "2017-05-25",
        "description": "Merge changes from twitter's branch:\n\n- add finagle stats provider\n- provide the ability to remove gauge and scopes\n- update jetty versions for twitter-sciences stats provider",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1073",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-06-01",
        "status": "Resolved",
        "summary": "Several stats provider related changes.",
        "updatedDate": "2017-06-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-05-25",
        "description": "The tests will fail when the disks are almost full. Because it will trigger force compaction.\n\nSet the threshold to 0.99 for tests to make it more reliable.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1072",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-25",
        "status": "Resolved",
        "summary": "CompactionTest is flaky when disks are almost full",
        "updatedDate": "2017-05-25"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-05-18",
        "description": "this is the killer commit:\ne44c7388399e5589cf44e38c58bb84c74da544af BOOKKEEPER-1069: If client uses V2 proto, set the connection to always decode V2 messages\n\nthis commit was working:\n0f81461d2d1dc5cf9db4de9a46599d7d64e3dac6 BOOKKEEPER-1048: Use ByteBuf in LedgerStorage interface\n\n{code}\n2017-05-18 04:50:39,691 - WARN  - [bookie-io-4:Slf4JLogger@151] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handl\ne the exception.\nio.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1\n        at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)\n        at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)\n        at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)\n        at io.netty.channel.DefaultChannelPipeline.onUnhandledInboundMessage(DefaultChannelPipeline.java:1169)\n        at io.netty.channel.DefaultChannelPipeline$TailContext.channelRead(DefaultChannelPipeline.java:1221)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n        at org.apache.bookkeeper.proto.BookieRequestHandler.channelRead(BookieRequestHandler.java:77)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n        at org.apache.bookkeeper.proto.AuthHandler$ServerSideHandler.channelRead(AuthHandler.java:90)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n        at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\n        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:1017)\n        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:394)\n        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:299)\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\n\n{code}",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1071",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Blocker",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2017-06-01",
        "status": "Resolved",
        "summary": "BookieRecoveryTest is failing due to a Netty4 IllegalReferenceCountException",
        "updatedDate": "2017-06-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2017-05-10",
        "description": "In some cases, the BookieWatcher can get the ZK event thread stuck. This happens when a ZK blocking request is issued from a ZK callback thread. \n\nWe should decouple the blocking requests in a separate executor to avoid deadlocking ZK client.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1061",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-15",
        "status": "Resolved",
        "summary": "BookieWatcher should not do ZK blocking operations from ZK async callback thread",
        "updatedDate": "2017-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2017-05-10",
        "description": "Replication auditor should skip ledgers that were deleted since the auditing was started.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1058",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-15",
        "status": "Resolved",
        "summary": "Ignore already deleted ledger on replication audit",
        "updatedDate": "2017-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2017-05-04",
        "description": "The log warning is not printing the error code returned by ZooKeeper",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1047",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-15",
        "status": "Resolved",
        "summary": "Add missing error code in ZK setData return path",
        "updatedDate": "2017-05-15"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2017-04-25",
        "description": "SyncThread.checkpoint(Checkpoint checkpoint) (which is called periodically by SyncThread's executor for every flushInterval) ultimately calls EntryLogger.flushRotatedLogs.  \n\nIn EntryLogger.flushRotatedLogs, first we set 'logChannelsToFlush' to null and then we try to flush and close individual file. Now, if IOException happens while trying to flush/close the logchannel, then exception is thrown as it is and it get propagates back upto SyncThread.checkpoint. Here we catch that IOException, log it and return without calling the checkpointComplete. But by now we lost reference of 'logChannelsToFlush' (rolled logs which are yet to be closed), because it is set to null before we try to flush/close individually rolledlogs. The next execution of 'checkpoint' (after flushinterval) wouldn't be knowing about the rolledlogs it failed to flush/close the previous time and it would flush the newly rolledlogs. So the failure of flush/close of the previous rolledlogs goes unnoticed completely. \n\nin EntryLogger.java\n        void flushRotatedLogs() throws IOException {\n        List<BufferedLogChannel> channels = null;\n        long flushedLogId = INVALID_LID;\n        synchronized (this) {\n            channels = logChannelsToFlush;\n            logChannelsToFlush = null;               <--------- here we set 'logChannelsToFlush' to null before it tries to flush/close rolledlogs \n        }\n        if (null == channels) {\n            return;\n        }\n        for (BufferedLogChannel channel : channels) {\n            channel.flush(true);                      <------------IOEXception can happen here or in the following closeFileChannel call             \n            // since this channel is only used for writing, after flushing the channel,\n            // we had to close the underlying file channel. Otherwise, we might end up\n            // leaking fds which cause the disk spaces could not be reclaimed.\n            closeFileChannel(channel);\n            if (channel.getLogId() > flushedLogId) {\n                flushedLogId = channel.getLogId();\n            }\n            LOG.info(\"Synced entry logger {} to disk.\", channel.getLogId());\n        }\n        // move the leastUnflushedLogId ptr\n        leastUnflushedLogId = flushedLogId + 1;\n    }\n\nin SyncThread.java\n    public void checkpoint(Checkpoint checkpoint) {\n        try {\n            checkpoint = ledgerStorage.checkpoint(checkpoint);\n        } catch (NoWritableLedgerDirException e) {\n            LOG.error(\"No writeable ledger directories\", e);\n            dirsListener.allDisksFull();\n            return;\n        } catch (IOException e) {\n            LOG.error(\"Exception flushing ledgers\", e); <-----that IOExc gets propagated to this method and here it is caught and not dealt appropriately    \n            return;\n        }\n\n        try {\n            checkpointSource.checkpointComplete(checkpoint, true);\n        } catch (IOException e) {\n            LOG.error(\"Exception marking checkpoint as complete\", e);\n            dirsListener.allDisksFull();\n        }\n    }",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1044",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2017-07-25",
        "status": "Resolved",
        "summary": "Entrylogger is not readding rolled logs back to the logChannelsToFlush list when exception happens while trying to flush rolled logs",
        "updatedDate": "2017-07-26"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Samuel Just",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2017-04-10",
        "description": "This has the effect of permanently adding 1 listener per call into AbstractZkLedgerManager.listenerSet",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1031",
        "labels": [
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Major",
        "reporter": "Samuel Just",
        "resolution": "Fixed",
        "resolutionDate": "2017-04-11",
        "status": "Resolved",
        "summary": "ReplicationWorker.rereplicate fails to call close() on ReadOnlyLedgerHandle",
        "updatedDate": "2017-04-12"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "build"
        ],
        "creationDate": "2017-04-03",
        "description": "Current script doesn't handle the new reviews API. \n\nWe need to improve the merge script to handle the new review API.\n\nhttps://developer.github.com/v3/pulls/reviews/\n\nWe can do similar thing like what DistributedLog is doing.\n\nhttps://github.com/apache/incubator-distributedlog/blob/master/scripts/dev/dl-merge-pr.py",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1021",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-26",
        "status": "Resolved",
        "summary": "Improve the merge script to handle github reviews api",
        "updatedDate": "2017-05-26"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
        ],
        "creationDate": "2017-04-01",
        "description": "Tests in error: \n  BookKeeperTest.testReadHandleWithExplicitLAC:404 » TestTimedOut test timed out...\n  BookKeeperTest.testReadHandleWithExplicitLAC:404 » TestTimedOut test timed out...",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1020",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Blocker",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2017-04-03",
        "status": "Resolved",
        "summary": "Fix Explicit LAC tests on master",
        "updatedDate": "2017-04-04"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Govind Menon",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-03-27",
        "description": "Oriignally done by Matteo Merli",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1018",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Govind Menon",
        "resolution": "Fixed",
        "resolutionDate": "2017-04-03",
        "status": "Resolved",
        "summary": "Allow client to select older V2 protocol (no protobuf)",
        "updatedDate": "2017-04-15"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2017-03-23",
        "description": "The multiple journal dirs change and explict-lac change introduced a few findbug errors.\n\n{code}\n[INFO] BugInstance size is 8\n[INFO] Error size is 0\n[INFO] Total bugs: 8\n[INFO] org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList defines compareTo(Object) and uses Object.equals() [org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList] At CheckpointSourceList.java:[line 53] EQ_COMPARETO_USE_OBJECT_EQUALS\n[INFO] Dead store to ledgerId in org.apache.bookkeeper.bookie.FileInfo.setExplicitLac(ByteBuffer) [org.apache.bookkeeper.bookie.FileInfo] At FileInfo.java:[line 140] DLS_DEAD_LOCAL_STORE\n[INFO] Inconsistent synchronization of org.apache.bookkeeper.bookie.FileInfo.explicitLac; locked 85% of time [org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo, org.apache.bookkeeper.bookie.FileInfo] Unsynchronized access at FileInfo.java:[line 118]Unsynchronized access at FileInfo.java:[line 145]Synchronized access at FileInfo.java:[line 121]Synchronized access at FileInfo.java:[line 122]Synchronized access at FileInfo.java:[line 123]Synchronized access at FileInfo.java:[line 124]Synchronized access at FileInfo.java:[line 125]Synchronized access at FileInfo.java:[line 134]Synchronized access at FileInfo.java:[line 137]Synchronized access at FileInfo.java:[line 138]Synchronized access at FileInfo.java:[line 140]Synchronized access at FileInfo.java:[line 135]Synchronized access at FileInfo.java:[line 141]Synchronized access at FileInfo.java:[line 143] IS2_INCONSISTENT_SYNC\n[INFO] Inconsistent synchronization of org.apache.bookkeeper.client.LedgerHandle.length; locked 90% of time [org.apache.bookkeeper.client.ReadOnlyLedgerHandle$MetadataUpdater, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.LedgerRecoveryOp, org.apache.bookkeeper.client.LedgerHandle$2] Unsynchronized access at ReadOnlyLedgerHandle.java:[line 59]Synchronized access at LedgerHandle.java:[line 259]Synchronized access at LedgerHandle.java:[line 777]Synchronized access at LedgerHandle.java:[line 777]Synchronized access at LedgerHandle.java:[line 1360]Synchronized access at LedgerHandle.java:[line 249]Synchronized access at LedgerHandle.java:[line 249]Synchronized access at LedgerHandle.java:[line 250]Synchronized access at LedgerHandle.java:[line 976]Synchronized access at LedgerRecoveryOp.java:[line 151]Synchronized access at LedgerHandle.java:[line 379] IS2_INCONSISTENT_SYNC\n[INFO] Redundant nullcheck of journalDirNames, which is known to be non-null in org.apache.bookkeeper.conf.ServerConfiguration.getJournalDirs() [org.apache.bookkeeper.conf.ServerConfiguration] Redundant null check at ServerConfiguration.java:[line 631] RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\n[INFO] Argument of type String[] formatted in useless way in org.apache.bookkeeper.proto.BookieServer.main(String[]) [org.apache.bookkeeper.proto.BookieServer] At BookieServer.java:[line 420] VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY\n[INFO] Dead store to entrySize in org.apache.bookkeeper.proto.PerChannelBookieClient.writeLac(long, byte[], long, ChannelBuffer, BookkeeperInternalCallbacks$WriteLacCallback, Object) [org.apache.bookkeeper.proto.PerChannelBookieClient] At PerChannelBookieClient.java:[line 390] DLS_DEAD_LOCAL_STORE\n[INFO] Futile attempt to change max pool size of ScheduledThreadPoolExecutor in new org.apache.bookkeeper.util.OrderedSafeExecutor(String, int, ThreadFactory, StatsLogger, boolean, long) [org.apache.bookkeeper.util.OrderedSafeExecutor] At OrderedSafeExecutor.java:[line 186] DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR\n[INFO]\n\n{code}",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1013",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-03-23",
        "status": "Resolved",
        "summary": "Fix findbugs errors on latest master",
        "updatedDate": "2017-03-24"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Robert Joseph Evans",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2017-02-08",
        "description": "The client constructor\n\n{{BookKeeper(ClientConfiguration conf, ZooKeeper zk)}}\n\nin 4.4 and above will create a new NioClientSocketChannelFactory but does not set the ownership of that factory to true so threads are leaked.\n\nThis showed up as a failure in BookieRecoveryTest on MacOS where it has a hard coded limit of about 2000 threads in a single process, and this test was going beyond that.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-999",
        "labels": [
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Major",
        "reporter": "Robert Joseph Evans",
        "resolution": "Fixed",
        "resolutionDate": "2017-03-22",
        "status": "Resolved",
        "summary": "BookKeeper client can leak threads",
        "updatedDate": "2017-03-23"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "build"
        ],
        "creationDate": "2016-12-20",
        "description": "Let's enable travis build for bookkeeper project.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-989",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-06-01",
        "status": "Resolved",
        "summary": "Enable travis CI for bookkeeper git",
        "updatedDate": "2017-06-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-12-18",
        "description": "The recent commit failed the apache-rat:check, due to two new files missing license headers.\n\n{code}\ncommit 4bb57ef0b1b72eb1118963efc3ab9f0e9bec0e1c\nAuthor: Charan Reddy Guttapalem <cguttapalem@salesforce.com>\nDate:   Fri Dec 16 17:42:18 2016 -0800\n\n    BOOKKEEPER-967: New testsuite for RackPlacement\n{code}",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-988",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-12-20",
        "status": "Resolved",
        "summary": "Missing license headers",
        "updatedDate": "2016-12-21"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
            "build"
        ],
        "creationDate": "2016-12-16",
        "description": "Step to reproduce:\n- clone BookKeeper repository from GitHub\n- checkout master (or at least commit ecbb053e6e873859507e247cae727f4bc8b9f7fa)\n- mvn clean install -DskipTests -X\n\nThe fix is to upgrade the shade plugin to the latest version (2.4.3)\n\nthis is the error\n{code}\n[INFO] Excluding log4j:log4j:jar:1.2.15 from the shaded jar.\n[INFO] Minimizing jar org.apache.bookkeeper:bookkeeper-server:jar:4.5.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] bookkeeper ......................................... SUCCESS [  0.428 s]\n[INFO] compability dependencies ........................... SUCCESS [  0.016 s]\n[INFO] bookkeeper-server-compat400 ........................ SUCCESS [  2.772 s]\n[INFO] bookkeeper-server-compat410 ........................ SUCCESS [  1.159 s]\n[INFO] bookkeeper-server-compat420 ........................ SUCCESS [  1.370 s]\n[INFO] Stats API for bookkeeper ........................... SUCCESS [  0.422 s]\n[INFO] bookkeeper-server .................................. FAILURE [  4.002 s]\n[INFO] bookkeeper-benchmark ............................... SKIPPED\n[INFO] Stats provider for twitter-stats package ........... SKIPPED\n[INFO] Stats provider for twitter-ostrich package ......... SKIPPED\n[INFO] Stats provider for codahale metrics ................ SKIPPED\n[INFO] bookkeeper-stats-providers ......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 10.328 s\n[INFO] Finished at: 2016-12-16T17:06:08+01:00\n[INFO] Final Memory: 46M/998M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-shade-plugin:2.1:shade (default) on project bookkeeper-server: Error creating shaded jar: 46848 -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-shade-plugin:2.1:shade (default) on project bookkeeper-server: Error creating shaded jar: 46848\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)\n\tat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:199)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: org.apache.maven.plugin.MojoExecutionException: Error creating shaded jar: 46848\n\tat org.apache.maven.plugins.shade.mojo.ShadeMojo.execute(ShadeMojo.java:528)\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n\t... 20 more\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 46848\n\tat org.objectweb.asm.ClassReader.readClass(Unknown Source)\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\n\tat org.vafer.jdependency.Clazzpath.addClazzpathUnit(Clazzpath.java:94)\n\tat org.apache.maven.plugins.shade.filter.MinijarFilter.<init>(MinijarFilter.java:77)\n\tat org.apache.maven.plugins.shade.mojo.ShadeMojo.getFilters(ShadeMojo.java:767)\n\tat org.apache.maven.plugins.shade.mojo.ShadeMojo.execute(ShadeMojo.java:445)\n\t... 22 more\n\n{code}",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-987",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Blocker",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2016-12-17",
        "status": "Resolved",
        "summary": "BookKeeper build is broken due to the shade plugin for commit ecbb053e6e",
        "updatedDate": "2016-12-17"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-12-13",
        "description": "Consider the following scenario\n - currently bookie is in writemode but it is close to the diskusagethreshold and also entrymemtable is close to skipListSizeLimit\n - it received a addentry call, and now the size of the entrymemtable is greater than skipListSizeLimit\n - so onSizeLimitReached of SortedLedgerStorage will be called and now lets assume that memtable flush has failed because of diskusagethreshold \n - because of previous step, bookie would turn to readonly\n - now lets assume after certain rounds of compaction bookie reclaimed sufficient storage and went back to writemode\n - now bookie would be receiving addentry calls\n - because of outstanding snapshot from previous memtable flush failure, it will never retry to flush memtable \n - now the memory start keep going up and up and the process memory gets bloated",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-986",
        "labels": [
        ],
        "priority": "Critical",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-12-21",
        "status": "Resolved",
        "summary": "Handle Memtable flush failure",
        "updatedDate": "2016-12-21"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-12-10",
        "description": "This test is failed.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-984",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-12-17",
        "status": "Resolved",
        "summary": " BookieClientTest.testWriteGaps tested",
        "updatedDate": "2016-12-17"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2016-11-29",
        "description": "- IndexOutOfBoundException when not provide the dest bookie\n- The tool ignored the dest bookie when provide the dest bookie",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-980",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2017-07-18",
        "status": "Resolved",
        "summary": "BookKeeper Tools doesn't process the argument correctly",
        "updatedDate": "2017-07-18"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
            "bookkeeper-client",
            "bookkeeper-server"
        ],
        "creationDate": "2016-10-20",
        "description": "With 4.4.0 we introduced the ability to implement custom authentication plugins.\n\nThe new interfaces ClientAuthProvider and BookieAuthProvider depend on ExtensionRegistry, which is a shaded dependency.\n\nAs a consequence it is not possibile to implement any custom auth provider in code outside the project, because shaded/relocated dependencies cannot be used.\n\nWe need to break the actual interface and introduce a new way to implement such plugins in a portable way",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-959",
        "labels": [
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Blocker",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2017-01-31",
        "status": "Resolved",
        "summary": "ClientAuthProvider and BookieAuthProvider Public API used Protobuf Shaded classes",
        "updatedDate": "2017-01-31"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-10-19",
        "description": "in ZeroBuffer\nhere, if the length is > zeroBytes.length (64K), then it is returning zero ByteBuffer but its position is set to limit and hence its remaining will be 0, which is not expected, but if it is < 64k then its position is set to 0 and the remaining will be length.\n\nLooking at the call hierearchy, it seems there are no callers for this function, but since this is utility class it needs to be corrected.\n\n    public static ByteBuffer readOnlyBuffer(int length) {\n        ByteBuffer buffer;\n        if (length <= zeroBytes.length) {\n            buffer = ByteBuffer.wrap(zeroBytes, 0, length);\n        }\n        else {\n            buffer = ByteBuffer.allocate(length);\n            put(buffer);\n        }\n        return buffer.asReadOnlyBuffer();\n    }",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-958",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-11-09",
        "status": "Resolved",
        "summary": "ZeroBuffer readOnlyBuffer returns ByteBuffer with 0 remaining bytes for length > 64k",
        "updatedDate": "2016-11-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-10-19",
        "description": "1)  In LedgerHandleAdv in doAsyncAddEntry method, addToLength(length) call is not synchronized\n\nIn LedgerHandleAdv in doAsyncAddEntry method, call to addToLength(length) is not synchronized.\n\naddEntry method is supposed to be thread safe, so when addEntry method of LedgerHandleAdv is called concurrently from multiple threads, addToLength will be messed up because its call is not synchrnoized.\n\nin LedgerHandle it is synchronized over 'this'.\n\n2) In LedgerHandleAdv, in asyncAddEntry it is incorrect to add 'op' to 'pendingAddOps' before calling doAsyncAddEntry\n\n In LedgerHandleAdv, in asyncAddEntry, it is incorrect to add 'op' to 'pendingAddOps' before calling doAsyncAddEntry.\n\nConsider the following example,\n\nLets say \"asyncAddEntry(final long entryId, final byte[] data, final int offset, final int length, final AddCallback cb, final Object ctx)\" is called with incorrect arguments, and following condition is failed \"(offset < 0 || length < 0 || (offset + length) > data.length)\". Then as expected we would get ArrayIndexOutOfBoundsException, but now if we try to call asyncAddEntry with correct arguments for that entry, then it will fail with \"DuplicateEntryIdException\", since the op is added already in the previous call, which shouldn't have happened.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-957",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-11-09",
        "status": "Resolved",
        "summary": "issues in LedgerHandleAdv ",
        "updatedDate": "2016-11-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-10-19",
        "description": "Issue Description:-\nHierarchicalLedgerManager is supposed to work for ledgerids upto length of 10 (its layout is 2-4-4). But because of order issue in HierarchicalLedgerRangeIterator it doesn't work correctly if we create Ledgers of ledgerid length 9 and 10.\n\nRootcause:- in HierarchicalLedgerRangeIterator, in 'preload' method after getting l1Nodes by calling \"zk.getChildren(ledgerRootPath, null)\",  they need to be sorted, just like l2nodes in 'nextL1Node' method\n\nHow it manifests:-\nIf we try to create Ledgers using LedgerCreateAdv api with ledgerids of lengths 9 and 10, write entries and read entries, it will fail with following exception messages\n\n2015-11-30 13:57:31,209 - WARN  - [GarbageCollectorThread:ScanAndCompareGarbageCollector@103] - Exception when iterating over the metadata {}\njava.lang.IllegalArgumentException: inconsistent range\n    at java.util.concurrent.ConcurrentSkipListMap$SubMap.<init>(ConcurrentSkipListMap.java:2506)\n    at java.util.concurrent.ConcurrentSkipListMap.subMap(ConcurrentSkipListMap.java:1984)\n    at java.util.concurrent.ConcurrentSkipListMap.subMap(ConcurrentSkipListMap.java:93)\n    at org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(ScanAndCompareGarbageCollector.java:86)\n    at org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers(GarbageCollectorThread.java:419)\n    at org.apache.bookkeeper.bookie.GarbageCollectorThread.run(GarbageCollectorThread.java:377)\n\norg.apache.bookkeeper.client.BKException$BKNotEnoughBookiesException\n    at org.apache.bookkeeper.client.BKException.create(BKException.java:58)\n    at org.apache.bookkeeper.client.LedgerHandleAdv.addEntry(LedgerHandleAdv.java:101)\n    at org.apache.bookkeeper.client.LedgerHandleAdv.addEntry(LedgerHandleAdv.java:70)\n    at org.apache.bookkeeper.client.BookieWriteLedgerTest.testLedgerCreateAdvWithLedgerId(BookieWriteLedgerTest.java:212)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)\n    at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.lang.Thread.run(Thread.java:745)",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-956",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-11-09",
        "status": "Resolved",
        "summary": "HierarchicalLedgerManager doesn't work for ledgerid of length 9 and 10 because of order issue in HierarchicalLedgerRangeIterator",
        "updatedDate": "2016-11-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-10-19",
        "description": "in BookKeeperAdmin listLedgers method currentRange variable is not getting updated to next iterator when it has run out of elements",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-955",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-11-29",
        "status": "Resolved",
        "summary": "in BookKeeperAdmin listLedgers method currentRange variable is not getting updated to next iterator when it has run out of elements",
        "updatedDate": "2016-11-30"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Yiming Zang",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-10-14",
        "description": "TestRegionAwareEnsemblePlacementPolicy#testNewEnsembleWithThreeRegions is failing because RegionAwareEnsemblePlacementPolicy is not working as expected.\n\nThe current allocation policy is not evenly across the regions. The write quorum size is also not calculated correctly.\n\nWe need  to fix the placement policy and then fix the the test case.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-952",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Yiming Zang",
        "resolution": "Fixed",
        "resolutionDate": "2016-10-20",
        "status": "Resolved",
        "summary": "Fix RegionAwarePlacementPolicy",
        "updatedDate": "2016-10-21"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
        ],
        "creationDate": "2016-07-12",
        "description": "after bumping to java 8, the ci jobs fail with findbugs warnings. we'd need to fix all the findbugs warnings.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-940",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-07-14",
        "status": "Resolved",
        "summary": "Fix findbugs warnings after bumping to java 8",
        "updatedDate": "2016-07-14"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2016-07-11",
        "description": "The script doesn't work if there is no JIRA associated with the pull request.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-939",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-07-11",
        "status": "Resolved",
        "summary": "Fix typo in bk-merge-pr.py",
        "updatedDate": "2016-07-12"
    },
    {
        "affectedVersions": [
            {
                "id": 12335340,
                "name": "4.5.0",
                "releaseDate": "2017-08-10"
            }
        ],
        "assignee": "Andrey Yegorov",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2016-07-08",
        "description": "Currently digestType verification in LedgerOpenOp seems to be treated as part of security logic. Since it is checked after password and error explicitly states that digestType mismatched, all that evil hacker has to do is to change digest type to another one. There are only two of them after all.\n\nhere is the scenario significantly affected by current behavior:\n\n1. user rolls out clients with digestType set to MAC and creates lots of ledgers.\n2. user notices that MAC is slower than CRC32 and decides to change digestType.\n3. more ledgers created with CRC32.\n4. user tries to read old and new ledgers\n-> now old ledgers cannot be read because of the digest type mismatch.\n\nI'll send pull request for review.\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-938",
        "labels": [
        ],
        "openingVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "priority": "Minor",
        "reporter": "Andrey Yegorov",
        "resolution": "Fixed",
        "resolutionDate": "2016-08-01",
        "status": "Resolved",
        "summary": "LedgerOpenOp should use digestType from metadata",
        "updatedDate": "2016-08-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Enrico Olivelli",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2016-06-17",
        "description": "ClientConfiguration is always adding System.getProperties()\n\n{code}\n protected AbstractConfiguration() {\n        super();\n        // add configuration for system properties\n        addConfiguration(new SystemConfiguration());\n    }\n{code}\n\nThis is useful is some cases but sometimes it is very harmful because the user could modify the client behaviour inadvertently, for instance:: throttle, readTimeout....\n\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-933",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2016-07-31",
        "status": "Resolved",
        "summary": "ClientConfiguration always inherits System properties",
        "updatedDate": "2016-07-31"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "JV Jujjuri",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2016-05-15",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-927",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "JV Jujjuri",
        "resolution": "Fixed",
        "resolutionDate": "2017-05-24",
        "status": "Resolved",
        "summary": "Extend BOOKKEEPER-886 to LedgerHandleAdv too (BOOKKEEPER-886: Allow to disable ledgers operation throttling)",
        "updatedDate": "2017-05-24"
    },
    {
        "affectedVersions": [
            {
                "id": 12328755,
                "name": "4.3.1",
                "releaseDate": "2015-05-24"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-04-30",
        "description": "I have identified a couple of issues in Bookie compaction code. \n\nh4. Compacted entries are not properly synced when index is updated\n\nWhen compacting, we read \"active\" entries from an entry log and we re-append to current entry log. After compacting a number of entries, by default 100K, or at the very end, we need to update the index pointing to the new entry log and offset.\n\nBefore updating the index, we need to wait for this entries to be flushed and fsynced, otherwise a bookie crash might leave the index updated, pointing to an invalid offset.\n\nThe current code that is supposed to wait until flushed is:\n\n{code:java}\n// GarbageCollectorThread.java:178\nEntryLocation lastOffset = offsets.get(offsets.size()-1);\nlong lastOffsetLogId = EntryLogger.logIdForOffset(lastOffset.location);\nwhile (lastOffsetLogId < entryLogger.getLeastUnflushedLogId() && running) {\n    synchronized (flushLock) {\n        flushLock.wait(1000);\n    }\n\n    lastOffset = offsets.get(offsets.size()-1);\n    lastOffsetLogId = EntryLogger.logIdForOffset(lastOffset.location);\n}\n\n// update the index \n{code}\n\nThe condition {{lastOffsetLogId < entryLogger.getLeastUnflushedLogId()}} is wrong, because if the last compacted entry was written in an earlier entry log than the least unflushed log, it means that the entries are already flushed and thus we don't need to wait.\n\nIn the normal case what happens is that {{lastOffsetLogId} is actually the current entryLog and it's equal to {{entryLogger.getLeastUnflushedLogId()}}, so we don't wait. But, in this case the entries appended to the current entrylog are not flushed nor synced, hence the problem. \n\nh4. Exception during index flush\n\nHaving an exception when updating the index, combined with the above issue, makes the bookie GC to stop indefinitely. \nWhat happens is that the offset list is not cleared, and at the next bookie GC iteration it will find the old compacted entries in that list, for which now the entryLogId is less than the current log id, and that makes the while loop to never exit.\n\nAnother problem is that, any IOException during the index flush, will make the GC thread to bail out and it will not remove even the entry logs that were compacted and flushed. Next time, these entry logs will be compacted again.\n\nh4. Proposed solution\nI think the best solution is to trigger the {{entryLogger.flush()}} form the bookie GC thread before updating the indexes. That would simplify the code and I don't see any disadvantages in doing that. \nAnother improvement would be to delete compacted entry logs individually, as soon as the compacted data is flush, without waiting the end of the whole compaction process. \n\nThe advantages are : \n * If compaction stop halfway, at least we don't have to re-compact what we just compacted\n * Compaction won't require significant space overhead. Today a major compaction can end up reappending a large amount of data and then deleting all the entry logs at the very end, requiring twice the size of the active data set to be stored on disk at some point in time.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-926",
        "labels": [
        ],
        "openingVersion": {
            "id": 12328755,
            "name": "4.3.1",
            "releaseDate": "2015-05-24"
        },
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-05-04",
        "status": "Closed",
        "summary": "Compacted entries are not properly synced before updating index",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-04-27",
        "description": "After we have fixed unit tests in master, we are seeing FindBugs warnings: \n\n{noformat}\n[INFO] --- findbugs-maven-plugin:2.5.2:check (default-cli) @ bookkeeper-server ---\n[INFO] BugInstance size is 6\n[INFO] Error size is 0\n[INFO] Total bugs: 6\n[INFO] Found reliance on default encoding in org.apache.bookkeeper.bookie.BookieShell$ReadLedgerEntriesCmd.runCmd(CommandLine): new String(byte[]) [\"org.apache.bookkeeper.bookie.BookieShell$ReadLedgerEntriesCmd\"] At BookieShell.java:[lines 403-474]\n[INFO] Exception is caught when Exception is not thrown in org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(GarbageCollector$GarbageCleaner) [\"org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector\"] At ScanAndCompareGarbageCollector.java:[lines 64-227]\n[INFO] org.apache.bookkeeper.client.BookieWatcher.<static initializer>() invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead [\"org.apache.bookkeeper.client.BookieWatcher\"] At BookieWatcher.java:[lines 60-308]\n[INFO] org.apache.bookkeeper.meta.ZkLedgerUnderreplicationManager.LOCK_DATA should be package protected [\"org.apache.bookkeeper.meta.ZkLedgerUnderreplicationManager\"] At ZkLedgerUnderreplicationManager.java:[lines 76-664]\n[INFO] Synchronization performed on java.util.concurrent.ConcurrentLinkedQueue in org.apache.bookkeeper.proto.AuthHandler$ClientSideHandler.writeRequested(ChannelHandlerContext, MessageEvent) [\"org.apache.bookkeeper.proto.AuthHandler$ClientSideHandler\"] At AuthHandler.java:[lines 210-302]\n[INFO] Synchronization performed on java.util.concurrent.ConcurrentLinkedQueue in org.apache.bookkeeper.proto.AuthHandler$ClientSideHandler$AuthHandshakeCompleteCallback.operationComplete(int, Void) [\"org.apache.bookkeeper.proto.AuthHandler$ClientSideHandler$AuthHandshakeCompleteCallback\"] At AuthHandler.java:[lines 333-354]\n[INFO] ------------------------------------------------------------------------\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-925",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-30",
        "status": "Closed",
        "summary": "Fix FindBugs discovered issues in master",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
        ],
        "creationDate": "2016-04-22",
        "description": "LedgerHandle sync interface heavily depends on SyncCounter to convert async interfaces\ninto sync interfaces.\n\nUsaylly\n\nSyncCounter.inc()\nasyncCall()\nSyncCOunter.block(0)\n\nThe block code is.\n\n   synchronized void block(int limit) throws InterruptedException {\n        while (i > limit) {\n            int prev = i;\n            wait();\n            if (i == prev) {\n                break;\n            }\n        }\n    }\n\nSince 'i' is going to be same as 'prev' on spurious wakeup, and wait() can return on spurious wakeups. ",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-924",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Critical",
        "reporter": "JV Jujjuri",
        "resolution": "Fixed",
        "resolutionDate": "2016-10-13",
        "status": "Resolved",
        "summary": "addEntry() is susceptible to spurious wakeups",
        "updatedDate": "2016-10-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Arun M. Krishnakumar",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-04-11",
        "description": "There was a typo in the fix for Bookkeeper-910 and this bug has the fix since the former is already merged.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-921",
        "labels": [
            "easyfix"
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Major",
        "reporter": "Arun M. Krishnakumar",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-27",
        "status": "Closed",
        "summary": "Typo in LocalBookkeeper: Use InetAddress.getHostAddress instead of InetAddress",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-04-07",
        "description": "AuditorLedgerCheckerTest.testReadOnlyBookieExclusionFromURLedgersCheck intermittently failing\n\nThis test too, I've seen it failing in different occasions.\n\nhttps://builds.apache.org/job/bookkeeper-master-git-pullrequest/59/testReport/junit/org.apache.bookkeeper.replication/AuditorLedgerCheckerTest/testReadOnlyBookieExclusionFromURLedgersCheck_2_/\n\n{noformat}\nError Message\n\nlatch should not have completed\nStacktrace\n\njava.lang.AssertionError: latch should not have completed\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.assertTrue(Assert.java:41)\n\tat org.junit.Assert.assertFalse(Assert.java:64)\n\tat org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.testReadOnlyBookieExclusionFromURLedgersCheck(AuditorLedgerCheckerTest.java:279)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.lang.Thread.run(Thread.java:745)\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-919",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-27",
        "status": "Closed",
        "summary": "Auditor is sometimes marking as failed a bookie switching from available to read-only mode",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-04-07",
        "description": "I've noticed this while inspecting the output in jenkins:\n\n{noformat}\nRunning org.apache.bookkeeper.client.BookKeeperCloseTest\nTests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 12.074 sec\nRunning org.apache.bookkeeper.client.LocalBookKeeperTest\nRunning org.apache.bookkeeper.meta.GcLedgersTest\n{noformat}\n\nIt sounds like {{LocalBookKeeperTest}} is failing silently. Is it hanging and timing out?\n\nhttps://builds.apache.org/job/bookkeeper-master-git-pullrequest/57/console",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-917",
        "labels": [
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Critical",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-10",
        "status": "Closed",
        "summary": "LocalBookKeeperTest seems to be silently failing",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Andrey Yegorov",
        "components": [
        ],
        "creationDate": "2016-04-06",
        "description": "I've seen it failing a few times and it seems different that BOOKKEEPER-774.\n\nhttps://builds.apache.org/job/bookkeeper-master-git-pullrequest/57/testReport/junit/org.apache.bookkeeper.test/ReadOnlyBookieTest/testBookieShouldTurnWritableFromReadOnly/\n\n{noformat}\nError Message\n\nShould fail to create a ledger since there isn't enough bookies alive.\nStacktrace\n\njava.lang.AssertionError: Should fail to create a ledger since there isn't enough bookies alive.\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly(ReadOnlyBookieTest.java:137)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.lang.Thread.run(Thread.java:745)\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-914",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-07",
        "status": "Closed",
        "summary": "ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly is intermettently failing",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-04-05",
        "description": "This test is intermittently failing. It could be related to a timing issue, given that it fails more frequently in Jenkins compared to running the test on the laptop.\n\n{noformat}\nFailed tests:   testCompat410(org.apache.bookkeeper.test.TestBackwardCompat): Shouldn't be able to write\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-913",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-10",
        "status": "Closed",
        "summary": "Fix flakiness in TestBackwardCompat",
        "updatedDate": "2017-01-27"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2016-04-02",
        "description": "Currently we have the following test failures in master branch:\nResults :\n\nFailed tests:   testRWZKSessionLost[0](org.apache.bookkeeper.replication.TestReplicationWorker): Replication worker should have shut down\n  testRWZKSessionLost[1](org.apache.bookkeeper.replication.TestReplicationWorker): Replication worker should have shut down\n  testRWZKSessionLost[2](org.apache.bookkeeper.replication.TestReplicationWorker): Replication worker should have shut down\n\nTests in error: \n  testRWShutdownOnLocalBookieReadonlyTransition[0](org.apache.bookkeeper.replication.TestReplicationWorker): test timed out after 20000 milliseconds\n  testRWShutdownOnLocalBookieReadonlyTransition[1](org.apache.bookkeeper.replication.TestReplicationWorker): test timed out after 20000 milliseconds\n  testRWShutdownOnLocalBookieReadonlyTransition[2](org.apache.bookkeeper.replication.TestReplicationWorker): test timed out after 20000 milliseconds\n\nTests run: 654, Failures: 3, Errors: 3, Skipped: 0\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-911",
        "labels": [
            "tests"
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Major",
        "reporter": "Arun M. Krishnakumar",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-27",
        "status": "Closed",
        "summary": "Fix TestReplicationWorker test failures",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Arun M. Krishnakumar",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-04-01",
        "description": "In LocalBookkeeper, the Zookeeper server is started at 127.0.0.1 and the client tries to derive the localhost address using getLocalHost API. This has a few issues:\n1. There is a possibility of using the ipv6 address for localhost and hence the client will try connecting to ::1, 2181 rather than 127.0.0.1:2181 (this happens commonly on OSX)\n2. The getLocalHost API could sometimes return non-loopback addresses as well.\n\nSince the 'localbookie' mode is used with the zookeeper in the same machine, we should use loopback addresses for all invocations. The patch does just that.\n\n \n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-910",
        "labels": [
            "easyfix"
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "Arun M. Krishnakumar",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-11",
        "status": "Closed",
        "summary": "In LocalBookkeeper, Zookeeper server and client use different host addresses",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Arun M. Krishnakumar",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-03-31",
        "description": "ZooKeeperServer should use the correct value for tickTime in LocalBookie. Currently the code uses the port-number 2181, and since it's near to the DEFAULT_TICK_TIME it works.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-909",
        "labels": [
            "easyfix"
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "Arun M. Krishnakumar",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-31",
        "status": "Closed",
        "summary": "ZooKeeper of LocalBookkeeper should use the correct tickTime",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "JV Jujjuri",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2016-03-29",
        "description": "--- a/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java\n+++ b/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java\n@@ -100,6 +102,8 @@ public abstract class BKException extends Exception {\n             return new BKDuplicateEntryIdException();\n         case Code.TimeoutException:\n             return new BKTimeoutException();\n+        case Code.LedgerExistException:\n+            return new BKLedgerExistException();\n         default:\n             return new BKUnexpectedConditionException();\n         }\n",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-908",
        "labels": [
            "patch"
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "JV Jujjuri",
        "resolution": "Fixed",
        "resolutionDate": "2016-07-11",
        "status": "Resolved",
        "summary": "Case to handle BKLedgerExistException",
        "updatedDate": "2016-07-11"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
        ],
        "creationDate": "2016-03-16",
        "description": "In ReadLedgerEntriesCmd for printing the contents of the Entry, HexDumpFormat is used by default here, but whereas in ReadJournalCmd/ReadLogCmd StringEntryFormatter is used and it is configurable. We should add HexDumpEntryFormatter just like StringEntryFormatter and use the configured formatter for printing the entry.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-907",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2017-01-30",
        "status": "Resolved",
        "summary": "for ReadLedgerEntriesCmd, EntryFormatter should be configurable and HexDumpEntryFormatter should be one of them",
        "updatedDate": "2017-01-31"
    },
    {
        "affectedVersions": [
            {
                "id": 12325566,
                "name": "4.4.0",
                "releaseDate": "2016-05-16"
            }
        ],
        "assignee": "Enrico Olivelli",
        "components": [
            "build"
        ],
        "creationDate": "2016-03-14",
        "description": "The test checks for message \"Address already in use\", which is \"Indirizzo già in uso\"  in Italian.\nMaybe it is enough to catch BindException and remove the assertion\n\n{code}\nAssert.assertTrue(\"BKServer allowed duplicate startups!\",\n                    ce.getCause().getMessage().contains(\"Address already in use\"));\n{code}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-904",
        "labels": [
        ],
        "openingVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "priority": "Trivial",
        "reporter": "Enrico Olivelli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-06",
        "status": "Closed",
        "summary": "test BookieInitializationTest.testDuplicateBookieServerStartup fails on non-english machines",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Charan Reddy Guttapalem",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-03-09",
        "description": "MetaFormat BookieShell Command: On executing 'metaformat' BookieShell command it is observed that it does everything as expected but it doesn't deletes UnderReplicatedLedgers list from the ZooKeeper.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-903",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Charan Reddy Guttapalem",
        "resolution": "Fixed",
        "resolutionDate": "2016-11-09",
        "status": "Resolved",
        "summary": "MetaFormat BookieShell Command is not deleting UnderReplicatedLedgers list from the ZooKeeper",
        "updatedDate": "2016-11-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-03-08",
        "description": "There are 2 tests consistently failing in EntryLogTest\n\n{noformat} \ntestRecoverFromLedgersMapOnV0EntryLog(org.apache.bookkeeper.bookie.EntryLogTest)\ntestRecoverFromLedgersMap(org.apache.bookkeeper.bookie.EntryLogTest)\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-902",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-14",
        "status": "Closed",
        "summary": "Test failures in EntryLogTest",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Siddharth Boobna",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2016-02-29",
        "description": "ReplicationWorker throws BkWriteOnReadOnlyBookieException here: https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java#L255\nand does not release the under replicated lock.\n\nSolution:\nRelease the under replicated lock before throwing BkWriteOnReadOnlyBookieException and make the replication worker wait till the bookie becomes writable again.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-900",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Major",
        "reporter": "Siddharth Boobna",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-08",
        "status": "Closed",
        "summary": "read only bookie runs replicator and does not release the under replicated lock after failing",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Siddharth Boobna",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-02-28",
        "description": "Once a bookie goes above the diskUsageThreshold and becomes readOnly, it will never go back to readWrite even if the disk usage drops significantly.\nWhen the LedgerDirsMonitor gets a NoWritableLedgerDirException, it will put the bookie in read only mode, but will also stop monitoring and never goes back to read-write mode when the disk usage drops below threshold.\n\nSolution:\nThe LedgerDirsMonitor thread should not break out of the while loop when it gets NoWritableLedgerDirException, and should continue monitoring the directories.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-899",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Major",
        "reporter": "Siddharth Boobna",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-08",
        "status": "Closed",
        "summary": "Bookie should return to read-write mode once the disk usage drops before the threshold",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Siddharth Boobna",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2016-02-28",
        "description": "The auditor doesn't pick up a bookie shut down from read only mode. The watcher on child nodes of \"/ledgers/available\" node on zk doesn't get triggered if there is any change in the children of any of those child nodes (\"/ledgers/available/readonly\").\n\nSolution:\nThe auditor needs to set another child watcher on read only bookie node on zk.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-898",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Major",
        "reporter": "Siddharth Boobna",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-08",
        "status": "Closed",
        "summary": "Underreplication doesn't get triggered when a read only bookie is shut down",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2016-02-23",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-897",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-02-23",
        "status": "Closed",
        "summary": "Fix findbugs warnings and missing apache license header",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Siddharth Boobna",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2016-02-08",
        "description": "{noformat}\n06:13:32.041 [BookieJournal-3181] ERROR org.apache.bookkeeper.bookie.Journal - I/O exception in Journal thread!\njava.nio.channels.ClosedChannelException: null\n        at sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:110) ~[na:1.8.0_60]\n        at sun.nio.ch.FileChannelImpl.position(FileChannelImpl.java:253) ~[na:1.8.0_60]\n        at org.apache.bookkeeper.bookie.Journal.run(Journal.java:964) ~[bookkeeper-server-4.3.1.33.jar:4.3.1]\n06:13:32.041 [BookieJournal-3181] INFO  org.apache.bookkeeper.bookie.Journal - Journal exited loop!\n06:13:32.041 [Bookie-3181] ERROR org.apache.bookkeeper.bookie.Bookie  - Journal manager quits unexpectedly.\n06:13:32.042 [Bookie-3181] INFO  org.apache.bookkeeper.bookie.Bookie  - Triggering shutdown of Bookie-3181 with exitCode 5\n06:13:32.042 [BookieShutdownTrigger] INFO  org.apache.bookkeeper.bookie.Bookie  - Shutting down Bookie-3181 with exitCode 5\n06:13:32.044 [main] INFO  o.a.bookkeeper.proto.BookieServer    - Stop stats provider\n06:13:32.045 [bookie-reg-0] INFO  org.apache.zookeeper.ZooKeeper       - Session: 0x14ff63dc02cbd02 closed\n06:13:32.045 [bookie-reg-0-EventThread] INFO  org.apache.zookeeper.ClientCnxn      - EventThread shut down\n06:13:32.045 [BookieShutdownTrigger] INFO  org.apache.bookkeeper.bookie.Journal - Shutting down Journal\n06:13:32.046 [Thread-2] INFO  o.a.bookkeeper.proto.BookieServer    - Shutting down BookieServer\n06:13:32.046 [Thread-2] INFO  o.a.b.proto.BookieNettyServer        - Shutting down BookieNettyServer\n06:13:32.046 [ForceWriteThread] ERROR org.apache.bookkeeper.bookie.Journal - ForceWrite thread interrupted\njava.lang.InterruptedException: null\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014) ~[na:1.8.0_60]\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2048) ~[na:1.8.0_60]\n        at org.apache.bookkeeper.util.UnboundArrayBlockingQueue.take(UnboundArrayBlockingQueue.java:312) ~[bookkeeper-server-4.3.1.33.jar:4.3.1]\n        at org.apache.bookkeeper.bookie.Journal$ForceWriteThread.run(Journal.java:448) ~[bookkeeper-server-4.3.1.33.jar:4.3.1]\n...\n06:13:32.184 [bookie-io-0] WARN  i.n.channel.DefaultChannelPipeline   - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\njava.nio.channels.ClosedChannelException: null\n{noformat}\n\nWhen the bookie shuts down due to some exception, it exits with exitCode 0. \nWe try to get the exitCode when calling System.exit() here:\nhttps://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java#L400\n\nBut the exitCode is set by the shutdown hook which is triggered by System.exit(). Thus, we will always exit with code 0.\n\nSolution:\nWe explicitly call bookie shutdown to set the exit code.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-893",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "Siddharth Boobna",
        "resolution": "Fixed",
        "resolutionDate": "2016-02-09",
        "status": "Closed",
        "summary": "bookie exited with status 0 on journal I/O exception",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-02-05",
        "description": "When reading multiple entries with {code}LedgerHandle.asyncReadEntries(){code}, in case there is a read error, the callback is currently being invoked for each of the requested entries. \n\nSince a single \"success\" callback is expected, we should also have a single \"failure\" callback invocation.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-891",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-02-09",
        "status": "Closed",
        "summary": "Read entries failure should trigger callback only once",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12333529,
                "name": "4.3.2",
                "releaseDate": "2015-11-17"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2016-02-03",
        "description": "The listener set is modified while iterating through it.\n\n{noformat}\n00:20:00.283 [main-EventThread] INFO  o.a.b.meta.AbstractZkLedgerManager   - Unregistered ledger metadata listener ReadOnlyLedgerHandle(lid = 10454, id = 839729832) on ledger 10454.\n00:20:00.283 [main-EventThread] ERROR org.apache.zookeeper.ClientCnxn      - Error while calling watcher \njava.util.ConcurrentModificationException: null\n        at java.util.HashMap$HashIterator.nextNode(HashMap.java:1429) ~[na:1.8.0_60]\n        at java.util.HashMap$KeyIterator.next(HashMap.java:1453) ~[na:1.8.0_60]\n        at org.apache.bookkeeper.meta.AbstractZkLedgerManager.process(AbstractZkLedgerManager.java:207) ~[bookkeeper-server-4.3.1.36.jar:4.3.1]\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522) [zookeeper-3.4.6.jar:3.4.6-1569965]\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965]\n{noformat}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-890",
        "labels": [
        ],
        "openingVersion": {
            "id": 12333529,
            "name": "4.3.2",
            "releaseDate": "2015-11-17"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-02-09",
        "status": "Closed",
        "summary": "Concurrent modification exception when removing listener in Bookkeeper ZK ledger manager",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Flavio Paiva Junqueira",
        "components": [
            "Documentation"
        ],
        "creationDate": "2016-01-12",
        "issueType": "Bug",
        "key": "BOOKKEEPER-884",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2016-01-12",
        "status": "Resolved",
        "summary": "4.3.2 link points to 4.3.1 documentation",
        "updatedDate": "2016-01-12"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2015-11-25",
        "description": "bookkeeper-benchmark tests usually timeout",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-883",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2016-02-09",
        "status": "Closed",
        "summary": "Test timeout in bookkeeper-benchmark",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ted Yu",
        "components": [
        ],
        "creationDate": "2015-09-21",
        "description": "{code}\n    public void format(AbstractConfiguration conf, ZooKeeper zk)\n            throws InterruptedException, KeeperException, IOException {\n        HierarchicalLedgerManager ledgerManager = (HierarchicalLedgerManager) newLedgerManager();\n{code}\nledgerManager is not closed upon exit from the method.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-872",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ted Yu",
        "resolution": "Fixed",
        "resolutionDate": "2015-10-10",
        "status": "Resolved",
        "summary": "Resource leak with unclosed LedgerManager in HierarchicalLedgerManagerFactory#format()",
        "updatedDate": "2015-10-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ted Yu",
        "components": [
        ],
        "creationDate": "2015-08-06",
        "description": "There're more than one occurrence.\nHere is an example in ListLedgersCmd#runCmd():\n{code}\n                LedgerManagerFactory mFactory = LedgerManagerFactory.newLedgerManagerFactory(bkConf, zk);\n                LedgerManager m = mFactory.newLedgerManager();\n{code}\nm is not closed upon leaving the method.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-863",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ted Yu",
        "resolution": "Fixed",
        "resolutionDate": "2015-08-12",
        "status": "Closed",
        "summary": "Potential resource leak with unclosed LedgerManager in BookieShell",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2015-06-21",
        "description": "To reduce the load on the ASF mirrors, projects are required to delete old releases [1]\n\nPlease can you remove all non-current releases?\ni.e. 4.2.4, 4.3.0\nThanks!\n\n[1] http://www.apache.org/dev/release.html#when-to-archive",
        "issueType": "Bug",
        "key": "BOOKKEEPER-859",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sebb",
        "resolution": "Fixed",
        "resolutionDate": "2016-05-16",
        "status": "Resolved",
        "summary": "Please delete old releases from mirroring system",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Youngjoon Kim",
        "components": [
            "Documentation"
        ],
        "creationDate": "2015-05-30",
        "description": "There are some broken links and trivial typos in bookkeeper documents.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-858",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Youngjoon Kim",
        "resolution": "Fixed",
        "resolutionDate": "2015-06-02",
        "status": "Closed",
        "summary": "Fix broken links and typos in bookkeeper documents",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2015-05-19",
        "description": "{code}\ntestLedgerCacheFlushFailureOnDiskFull(org.apache.bookkeeper.bookie.LedgerCacheTest)  Time elapsed: 0.032 sec  <<< ERROR!\njava.lang.NullPointerException\n        at org.apache.bookkeeper.bookie.InterleavedLedgerStorage.onRotateEntryLog(InterleavedLedgerStorage.java:350)\n        at org.apache.bookkeeper.bookie.SortedLedgerStorage.onRotateEntryLog(SortedLedgerStorage.java:38)\n        at org.apache.bookkeeper.bookie.EntryLogger.createNewLog(EntryLogger.java:381)\n        at org.apache.bookkeeper.bookie.EntryLogger.addEntry(EntryLogger.java:637)\n        at org.apache.bookkeeper.bookie.InterleavedLedgerStorage.processEntry(InterleavedLedgerStorage.java:334)\n        at org.apache.bookkeeper.bookie.SortedLedgerStorage.process(SortedLedgerStorage.java:149)\n        at org.apache.bookkeeper.bookie.EntryMemTable.flushSnapshot(EntryMemTable.java:236)\n        at org.apache.bookkeeper.bookie.EntryMemTable.flush(EntryMemTable.java:214)\n        at org.apache.bookkeeper.bookie.SortedLedgerStorage.flush(SortedLedgerStorage.java:154)\n        at org.apache.bookkeeper.bookie.LedgerCacheTest.testLedgerCacheFlushFailureOnDiskFull(LedgerCacheTest.java:291)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n        at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\n{code}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-854",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2015-05-20",
        "status": "Closed",
        "summary": "NPE on InterleavedLedgerStorage.onRotateEntryLog",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2015-04-10",
        "description": "Maps with ledger descriptors and master-keys are not cleaned after a ledger gets deleted.",
        "fixedVersion": {
            "id": 12335340,
            "name": "4.5.0",
            "releaseDate": "2017-08-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-852",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2017-03-28",
        "status": "Resolved",
        "summary": "Release LedgerDescriptor and master-key objects when not used anymore",
        "updatedDate": "2017-03-29"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2015-04-10",
        "description": "LastAddConfirmed in LedgerHandle is updated when an entry is persisted successfully. \n\nWhen sending a new entry, the most recent lastAddConfirmed is sent along. The reason is to start with a reasonable (confirmed) entryId when doing ledger recovery, by reading all entries from lastAddConfirmed until a NoEntryException is reached. \n\nIf lastAddConfirmed updates are not visible to the thread that is writing new entries, new entries will carrie an older lastAddConfirmed value, and recovering the ledger will requiring reading one-by-one many entries.\nWhen writing several thousand of entries per sec, the lastAddConfirmed can lag behind a lot from the real last entry.\n\nWe should use volatile, to ensure writing thread sees the updated version.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-848",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2015-04-21",
        "status": "Closed",
        "summary": "Use volatile for lastAddConfirmed",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jia Zhai",
        "components": [
        ],
        "creationDate": "2015-03-28",
        "description": "ArrayIndexOutOfBoundsException in LedgerFragmentReplicator::updateEnsembleInfo, because update ensemble info might happen after re-read ledger metadata, so the ensemble might already change. if ensemble is already changed, skip replacing the bookie doesn't exist.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-847",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2015-04-21",
        "status": "Resolved",
        "summary": "ArrayIndexOutOfBoundsException in LedgerFragmentReplicator::updateEnsembleInfo",
        "updatedDate": "2015-04-21"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2015-03-09",
        "description": "the dead lock happens on entry log rolling and compaction.\n\n    entry log rolling will lock entry logger then lock flushLock.\n    compaction waiting for flush, will lock flushLock and then entry logger.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-840",
        "labels": [
        ],
        "priority": "Critical",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2015-03-18",
        "status": "Closed",
        "summary": "Deadlock on flushLock on compaction",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
        ],
        "creationDate": "2015-02-24",
        "description": "This is failing consistently for me. I'm using a ubuntu vm with Oracle jdk 8. Attaching a log file that I got from running it on the master branch.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-839",
        "labels": [
            "test"
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2015-03-12",
        "status": "Closed",
        "summary": "AuditorPeriodicCheckTest timeout",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jia Zhai",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2015-02-21",
        "description": "According to Ivan’s email, I did a check of the build history. Seems recently failing is with this stack:\njava.io.IOException: Unable to delete directory /tmp/bkTest3561939033223584760.dir/current/0.\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1337)\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1910)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1910)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.cleanupTempDirs(BookKeeperClusterTestCase.java:186)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.tearDown(BookKeeperClusterTestCase.java:114)\n\nThis may be caused by an error in ForceWriteThread::run(), which leaked “logFile.close()” when interrupt comes.\n\n{code}\nprivate class ForceWriteThread {\n     public void run() {\n            LOG.info(\"ForceWrite Thread started\");\n            boolean shouldForceWrite = true;\n            int numReqInLastForceWrite = 0;\n            while(running) {\n                ForceWriteRequest req = null;\n                try {\n                           …\n                } catch (IOException ioe) {\n                    LOG.error(\"I/O exception in ForceWrite thread\", ioe);\n                    running = false;\n                } catch (InterruptedException e) {\n                    LOG.error(\"ForceWrite thread interrupted\", e);\n                    if (null != req) {\n                        req.closeFileIfNecessary();        < ==== 2, when interrupt, “shouldClose” not set properly, so file not close\n                    }\n                    running = false;\n                }\n            }\n            // Regardless of what caused us to exit, we should notify the\n            // the parent thread as it should either exit or be in the process\n            // of exiting else we will have write requests hang\n            threadToNotifyOnEx.interrupt();\n        }\n        // shutdown sync thread\n        void shutdown() throws InterruptedException {\n            running = false;\n            this.interrupt();               < ====  1, call interrupt\n            this.join();\n        }\n}\n\n        public void closeFileIfNecessary() {\n            // Close if shouldClose is set\n            if (shouldClose) {         < ==== 3, “shouldClose” is false here.\n                // We should guard against exceptions so its\n                // safe to call in catch blocks\n                try {\n                    logFile.close();\n                    // Call close only once\n                    shouldClose = false;\n                }\n                catch (IOException ioe) {\n                    LOG.error(\"I/O exception while closing file\", ioe);\n                }\n            }\n        }\n{code}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-838",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2015-02-23",
        "status": "Closed",
        "summary": "ForceWriteThread::run() leaks “logFile.close()” when interrupt comes",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2015-01-16",
        "description": "As the title says, update the copyright in the notice files to add 2015. I don't think we need to do 4.2 branch as I doubt there'll be more releases on it.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-835",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-05-19",
        "status": "Closed",
        "summary": "Update copyright for 2015 on all active branches",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jia Zhai",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2015-01-13",
        "description": "In test class TestDiskChecker, test case will fail if tmp dir's usableSpace / totalSpace > 0.95, because threshold will be a negative number.\n{code}\n     public void testCheckDiskFull() throws IOException {\n        File file = File.createTempFile(\"DiskCheck\", \"test\");\n        long usableSpace = file.getUsableSpace();\n        long totalSpace = file.getTotalSpace();\n        float threshold =\n                (1f - ((float) usableSpace / (float) totalSpace)) - 0.05f;        \n < === if \"usableSpace / totalSpace\" is 0.99, then threshold is -0.04, this is invalid.\n        diskChecker.setDiskSpaceThreshold(threshold, threshold);\n        diskChecker.checkDiskFull(file);\n    }\n{code}\n\nin my running of test:\n  1 -------------------------------------------------------------------------------\n  2 Test set: org.apache.bookkeeper.util.TestDiskChecker\n  3 -------------------------------------------------------------------------------\n  4 Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.557 sec <<< FAILURE!\n  5 testCheckDiskFull(org.apache.bookkeeper.util.TestDiskChecker)  Time elapsed: 0.066 sec  <<< ERROR!\n  6 java.lang.Exception: Unexpected exception, expected<org.apache.bookkeeper.util.DiskChecker$DiskOutOfSpaceException> but was<java.lang.IllegalArgumentException>\n  7     at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)\n  8     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n  9     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n 10     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n 11     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n 12     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n 13     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n 14     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n 15     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n 16     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n 17     at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n 18     at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n 19     at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n 20     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n 21     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n 22     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n 23     at java.lang.reflect.Method.invoke(Method.java:606)\n 24     at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n 25     at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n 26     at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)\n 27     at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:78)\n 28     at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)\n 29 Caused by: java.lang.IllegalArgumentException: Disk space threashold -0.04741608 is not valid. Should be > 0 and < 1              < ======\n 30     at org.apache.bookkeeper.util.DiskChecker.validateThreshold(DiskChecker.java:163)\n 31     at org.apache.bookkeeper.util.DiskChecker.setDiskSpaceThreshold(DiskChecker.java:157)\n 32     at org.apache.bookkeeper.util.TestDiskChecker.testCheckDiskFull(TestDiskChecker.java:51)\n 33     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n 34     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n 35     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n 36     at java.lang.reflect.Method.invoke(Method.java:606)\n 37     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n 38     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n 39     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n 40     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n 41     at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:21)\n 42     ... 21 more\n\nprint out vars in test to verify these values: \n2015-01-13 12:42:58,448 - INFO  - [main:TestDiskCheckerTest@78] - usableSpace:2062532608, totalSpace:2073448448, threshold: -0.04473542",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-834",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2015-03-18",
        "status": "Closed",
        "summary": "test case error in test class TestDiskChecker",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-12-23",
        "description": "currently the index entry position is combined with log id and entry offset inside a log. so it means that log id and entry log file size shouldn't be larger than Integer.MAX_VALUE. otherwise, it would cause trouble.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-833",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2015-04-21",
        "status": "Closed",
        "summary": "EntryLogId and EntryLogLimit should not be larger than Integer.MAX_VALUE",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-12-17",
        "description": "There are some links still pointing to zookeeper.apache.org/bookkeeper. ",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-831",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-03-12",
        "status": "Closed",
        "summary": "Outdated links in tutorial",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-12-17",
        "description": "We should make important stuff, like the api docs and basic client and admin guides available from the front page.\n\nIt really annoys me when I'm using a project and i have to dig deep to get to the api docs in particular.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-829",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-08-23",
        "status": "Resolved",
        "summary": "Make important documentation available from front page",
        "updatedDate": "2015-08-23"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-12-16",
        "description": "Pre TLP, whenever we updated the docs/ directory of trunk, the website docs for trunk would be \"automatically\" updated. Updates to the docs still needed to be built with the old build_trigger mechanism, and the site published through CMS.\n\nThe docs were pulled in using a svn:external link. This is no longer possible, as _master_'s docs/ directory is in git. \n\nWe need a new way to sync master docs on the website with what is in git.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-828",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-03-18",
        "status": "Closed",
        "summary": "Script for updating docs on website from master branch",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jia Zhai",
        "components": [
        ],
        "creationDate": "2014-12-10",
        "description": "BOOKKEEPER-814 cleaned up temp files from the bookkeeper tests. This jira is to do the same for hedwig tests (it creates a couple of zookeeper directories).",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-823",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-07-07",
        "status": "Closed",
        "summary": "Clean up temp files created by hedwig tests",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Jia Zhai",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-12-08",
        "description": "At the startup of bookie,   the bookie constructor would call setLastLogId() as this trace:\n\tBookie() -> InterleavedLedgerStorage() -> EntryLogger() -> Initialize() - >createNewLog() -> allocateNewLog() -> setLastLogId().  \n\nIf \"bw.write() and bw.flush()\" in setLastLogId() failed, an IOException would throw and not catch, and cause Bookie constructor fail. \n\t{code}\n\t    private void setLastLogId(File dir, long logId) throws IOException {\n\t        FileOutputStream fos;\n\t        fos = new FileOutputStream(new File(dir, \"lastId\"));\n\t        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos, UTF_8));\n\t        try {     // < ==== original: if write fail in this try, IOException thrown but not catch, and cause bookie startup fail.\n\t            bw.write(Long.toHexString(logId) + \"\\n\");\n\t            bw.flush();\n\t        } finally {\n\t            try {\n\t                bw.close();\n\t            } catch (IOException e) {\n\t                LOG.error(\"Could not close lastId file in {}\", dir.getPath());\n\t            }\n\t        }\n\t    }\n\t{code}\n\nBut failing setLastLogId() could be tolerated, and will not cause any problem in next time Bookie startup.  \nNext time, when calling EntryLogger constructor again, in getLastLogId(), if read ledgerDir.lastId fail, it will walk through all log files to get LastLogID; If reading an old ledgerDir.lastId, which caused by last failure of setLastLogId(), and it happened to be the largest logId, then allocateNewLog() will find the file already exist, and will allocate newlogfile with bigger ID.\n{code}\n       BufferedLogChannel allocateNewLog() throws IOException {\n            List<File> list = ledgerDirsManager.getWritableLedgerDirs();\n            Collections.shuffle(list);\n            // It would better not to overwrite existing entry log files\n            File newLogFile = null;\n            do {\n                String logFileName = Long.toHexString(++preallocatedLogId) + \".log\";\n                for (File dir : list) {\n                    newLogFile = new File(dir, logFileName);\n                    currentDir = dir;\n                    if (newLogFile.exists()) {  < === this will handle last set fail issue, in which LastId update fail, and get a wrong preallocatedLogId.\n                        LOG.warn(\"Found existed entry log \" + newLogFile\n                               + \" when trying to create it as a new log.\");\n                        newLogFile = null;\n                        break;\n                    }\n                }\n            } while (newLogFile == null);\n\n            FileChannel channel = new RandomAccessFile(newLogFile, \"rw\").getChannel();\n            BufferedLogChannel logChannel = new BufferedLogChannel(channel,\n                    conf.getWriteBufferBytes(), conf.getReadBufferBytes(), preallocatedLogId);\n            logChannel.write((ByteBuffer) LOGFILE_HEADER.clear());\n\n            for (File f : list) {\n                setLastLogId(f, preallocatedLogId);\n            }\n            LOG.info(\"Preallocated entry logger {}.\", preallocatedLogId);\n            return logChannel;\n        }\n{code}\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-821",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2015-05-20",
        "status": "Closed",
        "summary": "Failing to write lastId to ledger directories should not fail startup of bookies",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            },
            {
                "id": 12325569,
                "name": "4.2.3",
                "releaseDate": "2014-06-27"
            }
        ],
        "assignee": "Charles X",
        "components": [
        ],
        "creationDate": "2014-12-04",
        "description": "we observed in our use case that when a ledger file is evicted before flushing. the fence state isn't persisted to disk, which would cause fencing doesn't work correctly.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-815",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Critical",
        "reporter": "Charles X",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-05",
        "status": "Closed",
        "summary": "Ledger fence state is lost when the ledger file is evicted",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Jia Zhai",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-12-04",
        "description": "Currently some of bookkeeper test cases are using temp files for unit tests. Those temp files aren't cleaned up after unit tests finished. \nIf running several times of these test cases, /tmp directory will soon be full.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-814",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Jia Zhai",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-10",
        "status": "Closed",
        "summary": "clean up temp files that generated by test cases.",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Charles X",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-12-04",
        "description": "we configured our bookie to use indexDirectory, which is supposed to store the index files on it. but when we use BookieShell tool to inspect a ledger's entries, it ends up failing to read any ledger. it seems that the BookieShell doesn't handle indexDirectory correctly.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-813",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Charles X",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-06",
        "status": "Closed",
        "summary": "BookieShell doesn't find index directory ",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Charles X",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2014-12-04",
        "description": "These two operations uses startTime as the latency for metric, which is wrong. \n\n{code}\n    void openComplete(int rc, LedgerHandle lh) {\n        if (BKException.Code.OK != rc) {\n            openOpLogger.registerFailedEvent(startTime);\n        } else {\n            openOpLogger.registerSuccessfulEvent(startTime);\n        }\n        cb.openComplete(rc, lh, ctx);\n    }\n{code}",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-809",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Charles X",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-06",
        "status": "Closed",
        "summary": "Wrong metric on LedgerDeleteOp and LedgerOpenOp",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Youngjoon Kim",
        "components": [
        ],
        "creationDate": "2014-11-25",
        "description": "How to reproduce this bug\n1) Set configurations in conf/bk_server.conf to use twitter-ostrich-provider.\n{noformat}\nstatsProviderClass=org.apache.bookkeeper.stats.twitter.ostrich.OstrichProvider\nstatsExport=true\n{noformat}\n\n2) Copy twitter-ostrich-provider-4.3.0.jar and required library jars to lib directory.\n{noformat}\n(library jars)\nostrich_2.9.2-9.1.3.jar\nscala-json_2.9.2-3.0.1.jar\nscala-library-2.9.2.jar\nutil-app_2.9.2-6.3.7.jar\nutil-core_2.9.2-6.3.7.jar\nutil-eval_2.9.2-6.3.7.jar\nutil-jvm_2.9.2-6.3.7.jar\nutil-logging_2.9.2-6.3.7.jar\n{noformat}\n\n3) Start a bookie server. Then, the server doesn't start and server log shows NullPointException.\n{noformat}\n2014-11-25 17:30:27,796 - ERROR [main:BookieServer@396] - Exception running bookie server :\njava.lang.NullPointerException\n    at com.twitter.ostrich.stats.StatsListener.<init>(StatsListener.scala:90)\n    at com.twitter.ostrich.stats.LatchedStatsListener.<init>(StatsListener.scala:144)\n    at com.twitter.ostrich.stats.StatsListener$$anonfun$apply$4.apply(StatsListener.scala:68)\n    at com.twitter.ostrich.stats.StatsListener$$anonfun$apply$4.apply(StatsListener.scala:68)\n    at com.twitter.ostrich.stats.StatsListener$$anonfun$getOrRegister$1.apply(StatsListener.scala:40)\n    at com.twitter.ostrich.stats.StatsListener$$anonfun$getOrRegister$1.apply(StatsListener.scala:39)\n    at scala.Option.getOrElse(Option.scala:108)\n    at com.twitter.ostrich.stats.StatsListener$.getOrRegister(StatsListener.scala:39)\n    at com.twitter.ostrich.stats.StatsListener$.apply(StatsListener.scala:67)\n    at com.twitter.ostrich.admin.AdminServiceFactory$$anonfun$configureStatsListeners$1.apply(AdminServiceFactory.scala:81)\n    at com.twitter.ostrich.admin.AdminServiceFactory$$anonfun$configureStatsListeners$1.apply(AdminServiceFactory.scala:81)\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n    at scala.collection.immutable.List.foreach(List.scala:76)\n    at com.twitter.ostrich.admin.AdminServiceFactory.configureStatsListeners(AdminServiceFactory.scala:81)\n    at com.twitter.ostrich.admin.AdminServiceFactory.apply(AdminServiceFactory.scala:61)\n    at org.apache.bookkeeper.stats.twitter.ostrich.OstrichProvider.start(OstrichProvider.java:57)\n    at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:375)\n{noformat}\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-805",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Youngjoon Kim",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-06",
        "status": "Closed",
        "summary": "NullPointException in bookie server when using twitter-ostrich-provider",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2014-11-24",
        "description": "If a client program does some operations using a ledger handle opened by openLedgerNoRecovery(), the program is not terminated after the handle and bookkeeper object is closed.\n\nHere is a sample code. \n{code}\nimport java.util.Enumeration;\n\nimport org.apache.bookkeeper.client.BookKeeper;\nimport org.apache.bookkeeper.client.LedgerEntry;\nimport org.apache.bookkeeper.client.LedgerHandle;\n\npublic class BkClient {\n  public static void main(String[] args) {\n    try {\n      BookKeeper bk = new BookKeeper(\"localhost:2181\");\n\n      // 9 is a ledger id of an existing ledger\n      LedgerHandle lh = bk.openLedgerNoRecovery(9, BookKeeper.DigestType.CRC32, \"passwd\".getBytes());\n\n      Enumeration<LedgerEntry> entries = lh.readEntries(0, 0);\n\n      lh.close();\n      bk.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n}\n{code}\n\nThread dump of this program shows that non-daemon thread \"ZkLedgerManagerScheduler-0\"  is alive, after bk.close() is called. \n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-804",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Youngjoon Kim",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-06",
        "status": "Closed",
        "summary": "Client program is not terminated when using openLedgerNoRecovery",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-21",
        "description": "We need a guide to show people how to create a replicated log out of ledgers, as ledgers on their own aren't enough.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-803",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-12",
        "status": "Closed",
        "summary": "Guide for making a replicated log out of ledgers",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-21",
        "description": "We need a precise description of the bookkeeper protocol and the guarantees therein.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-802",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2015-09-07",
        "status": "Closed",
        "summary": "Bookkeeper protocol documentation",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-21",
        "description": "Taking the tutorial from https://github.com/ivankelly/bookkeeper-tutorial and adding it to the bookkeeper docs.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-801",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-12",
        "status": "Closed",
        "summary": "Bookkeeper client tutorial",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-21",
        "description": "On issue i could writing the tutorial is that when you open a ledger in non-recovery mode, it's not possible to check if the ledger you opened has been closed or is still been written too. This complicates things when you get to the end of the ledger, as you don't know whether to try for more entries in the same ledger, or to look at the next ledger is the list.\n\nThis jira is to expose this information (it's in the metadata). This method only makes sense for reading. For writing a ledger, you really should know if you closed the ledger or not, and if you don't then you shouldn't be touching it again.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-800",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-05",
        "status": "Closed",
        "summary": "Expose whether a ledger is closed or not",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-21",
        "description": "The algorithm now be used to check if all quorums are being covered when sending a read lac or fencing message is broken when writeQuorum >= ackQuorum.\n\nThe purpose of the algorithm is to tell us when we have heard a response from enough nodes, that an ack quorum could not possibly have been formed without at least one of the nodes that we have heard responses from.\n\nThe current algorithm works when writeQuorum == ackQuorum, as we consider all quorums covered if the first |ackQuorum| nodes in the writeQuorum are covered. However, this doesn't work in the case that it's the middle node in the quorum that we have heard.\n\nTake the example, e:4, w:3, a:2, and we've heard from node 0, and node 2. In this case, it is possible for the write quorum, 1,2,3 to get an ack quorum if 1 and 3 response. \n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-799",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-09",
        "status": "Closed",
        "summary": "Distribution schedule coverage sets don't take gaps in response lists into account when writequorum > ackquorum",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-11-19",
        "description": "The current website looks super old. This jira is to remedy the style. Changes to content will come later.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-798",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-02",
        "status": "Resolved",
        "summary": "Make website look more modern",
        "updatedDate": "2014-12-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Matthieu Morel",
        "components": [
            "bookkeeper-stats"
        ],
        "creationDate": "2014-11-19",
        "description": "The implementation of CodahaleOpStatsLogger#toOpStatsData() passes incorrect parameters to codahale's Snapshot#getValue method, resulting in the following runtime exception:\n\njava.lang.IllegalArgumentException: 10.0 is not in [0..1]\n\tat com.codahale.metrics.Snapshot.getValue(Snapshot.java:52)\n\tat org.apache.bookkeeper.stats.CodahaleOpStatsLogger.toOpStatsData(CodahaleOpStatsLogger.java:64)\n...\n\nIn order to pass quantiles as [0..1] values, as expected by codahale metrics library, we must divide parameters by 100 before passing them.\n\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-797",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Minor",
        "reporter": "Matthieu Morel",
        "resolution": "Fixed",
        "resolutionDate": "2014-11-19",
        "status": "Closed",
        "summary": "IllegalArgumentException when calling CodahaleOpStatsLogger#toOpStatsData()",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2014-10-27",
        "description": "If a ledger is fenced while the write is still writing to it, some of the writes will fail to ever complete.\n\nI've attached the log of this happening along with a test case that will trigger the behaviour.\n\nWhat appears to be happening is that when the fence occurs, the first write after the fence gets an unrecoverable error, so tries to close the ledger. Closing the ledger sets the closed flag on the ledger metadata, and tries to write it, which fails as the metadata in zookeeper was modified by the fencing operation, so the close op fails, resets the closed status for a moment, a write operation gets through, which then fails with a fencing error, so we try to close the ledger, but the other close operation has since closed the ledger in our metadata, so nothing happens, and the write hangs forever.\n\nThere's a number of issues here, but foremost, the ledger metadata that the handle is using should only ever represent what is actually in zookeeper. Having various parts of the code flipping bits just explodes the state space. The LedgerMetadata object itself should be immutable, and should only be modified, as a local variable, using a builder, before writing to zookeeper. Only when the zookeeper operation succeeds should we update the reference which LedgerHandle has access to.\n\nThere's also a problem in how we handle pendingaddops when we close. Really it shouldn't be possible for a write op to get through after a closure, but we should be defensive here and error out anything that has gotten through, adding a big old log message to alert us that this cases that shouldn't happen, is happening.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-795",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-12-09",
        "status": "Closed",
        "summary": "Race condition causes writes to hang if ledger is fenced",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2014-10-17",
        "description": "As the summary says, if you set the status to anything but ok, it will be ignored by PerChannelBookieClient. If you try to handle it, a whole load of tests fail due to different mapping for read and write requests.\n\nI'm running this while rebasing our auth stuff, which i'll push up when it's been validated. I means the auth stuff needs to be aware of all message types, as I can't just send a EUA error in the packet level status.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-794",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-05",
        "status": "Closed",
        "summary": "BookkeeperProtocol.Response.status is completely ignored",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-10-13",
        "description": "Oracle ended support for java 6 last march. We should follow their lead. As an added bonus we can start to use async io apis with 7.",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-793",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-10-15",
        "status": "Closed",
        "summary": "Move to java 7",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-stats"
        ],
        "creationDate": "2014-09-20",
        "description": "{quote}\n[INFO] BugInstance size is 1\n[INFO] Error size is 0\n[INFO] Total bugs: 1\n[INFO] Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics; locked 83% of time [\"org.apache.bookkeeper.stats.CodahaleMetricsProvider\"] At CodahaleMetricsProvider.java:[lines 49-145]\n{quote}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-786",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-22",
        "status": "Resolved",
        "summary": "Fix Findbugs Error In Codahale Stats Provider",
        "updatedDate": "2014-09-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-09-17",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-785",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-18",
        "status": "Resolved",
        "summary": "Fix javadoc warnings in trunk",
        "updatedDate": "2014-09-18"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-09-12",
        "description": "*Stacktrace*\n{code}\njava.lang.AssertionError: Should have client closed exception expected:<0> but was:<-19>\n\tat org.junit.Assert.fail(Assert.java:91)\n\tat org.junit.Assert.failNotEquals(Assert.java:645)\n\tat org.junit.Assert.assertEquals(Assert.java:126)\n\tat org.junit.Assert.assertEquals(Assert.java:470)\n\tat org.apache.bookkeeper.client.BookKeeperCloseTest.testLedgerCheck(BookKeeperCloseTest.java:501)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\n{code}\n\nLink: https://builds.apache.org/job/bookkeeper-trunk-precommit-build/722/testReport/junit/org.apache.bookkeeper.client/BookKeeperCloseTest/testLedgerCheck/",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-784",
        "labels": [
            "test"
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-18",
        "status": "Resolved",
        "summary": "BookKeeperCloseTest#testLedgerCheck is failing intermittently",
        "updatedDate": "2014-09-18"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-09-12",
        "description": "{code}\norg.jboss.netty.channel.ChannelException: Failed to create a selector.\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.openSelector(AbstractNioSelector.java:343)\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.<init>(AbstractNioSelector.java:100)\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.<init>(AbstractNioWorker.java:52)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.<init>(NioWorker.java:45)\n\tat org.jboss.netty.channel.socket.nio.NioWorkerPool.createWorker(NioWorkerPool.java:45)\n\tat org.jboss.netty.channel.socket.nio.NioWorkerPool.createWorker(NioWorkerPool.java:28)\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool.newWorker(AbstractNioWorkerPool.java:143)\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool.init(AbstractNioWorkerPool.java:81)\n\tat org.jboss.netty.channel.socket.nio.NioWorkerPool.<init>(NioWorkerPool.java:39)\n\tat org.jboss.netty.channel.socket.nio.NioWorkerPool.<init>(NioWorkerPool.java:33)\n\tat org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.<init>(NioClientSocketChannelFactory.java:151)\n\tat org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.<init>(NioClientSocketChannelFactory.java:116)\n\tat org.apache.bookkeeper.client.BookKeeper.<init>(BookKeeper.java:204)\n\tat org.apache.bookkeeper.client.BookKeeperTestClient.<init>(BookKeeperTestClient.java:50)\n\tat org.apache.bookkeeper.test.MultipleThreadReadTest.createClients(MultipleThreadReadTest.java:73)\n\tat org.apache.bookkeeper.test.MultipleThreadReadTest.multiLedgerMultiThreadRead(MultipleThreadReadTest.java:282)\n\tat org.apache.bookkeeper.test.MultipleThreadReadTest.test1Ledger50ThreadsRead(MultipleThreadReadTest.java:326)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\nCaused by: java.io.IOException: Too many open files\n\tat sun.nio.ch.EPollArrayWrapper.epollCreate(Native Method)\n\tat sun.nio.ch.EPollArrayWrapper.<init>(EPollArrayWrapper.java:69)\n\tat sun.nio.ch.EPollSelectorImpl.<init>(EPollSelectorImpl.java:52)\n\tat sun.nio.ch.EPollSelectorProvider.openSelector(EPollSelectorProvider.java:18)\n\tat java.nio.channels.Selector.open(Selector.java:209)\n\tat org.jboss.netty.channel.socket.nio.SelectorUtil.open(SelectorUtil.java:63)\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.openSelector(AbstractNioSelector.java:341)\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-783",
        "labels": [
            "test"
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-17",
        "status": "Resolved",
        "summary": "Avoid running out of fds in MutlipleThreadReadTest",
        "updatedDate": "2014-09-17"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-08-28",
        "description": "[INFO] --- findbugs-maven-plugin:2.5.2:check (default-cli) @ bookkeeper-server ---\n[INFO] BugInstance size is 1\n[INFO] Error size is 0\n[INFO] Total bugs: 1\n[INFO] Dead store to conn in org.apache.bookkeeper.proto.WriteEntryProcessorV3$1.writeComplete(int, long, long, BookieSocketAddress, Object) [\"org.apache.bookkeeper.proto.WriteEntryProcessorV3$1\"] At WriteEntryProcessorV3.java:[lines 68-98]",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-780",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-04",
        "status": "Resolved",
        "summary": "Findbug issue in trunk",
        "updatedDate": "2014-09-04"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-08-28",
        "description": "Allow access to metrics through jmx.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-779",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-06",
        "status": "Resolved",
        "summary": "jmx reporter for codahale metrics provider",
        "updatedDate": "2014-09-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2014-08-28",
        "description": "Logs attached.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-778",
        "labels": [
            "tests"
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-09",
        "status": "Resolved",
        "summary": "Flake in TestTryReadLastConfirmed",
        "updatedDate": "2014-09-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-08-28",
        "description": "This test fails every so often. Logs attached.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-777",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-09-06",
        "status": "Resolved",
        "summary": "Flake in LedgerCloseTest",
        "updatedDate": "2014-09-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-07-26",
        "description": "it failed at https://builds.apache.org/job/bookkeeper-trunk/716 .\n\nIt seems that an addEntry hit a ClosedChannelException on file io after the bookie turned to writable from readonly.\n\n{code}\n2014-07-26 07:03:14,584 - ERROR - [BookieWriteThread-15006-0:WriteEntryProcessorV3@103] - Error writing entry:0 to ledger:4\njava.nio.channels.ClosedChannelException\n\tat sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:88)\n\tat sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:184)\n\tat org.apache.bookkeeper.bookie.BufferedChannel.flushInternal(BufferedChannel.java:126)\n\tat org.apache.bookkeeper.bookie.BufferedChannel.flush(BufferedChannel.java:111)\n\tat org.apache.bookkeeper.bookie.EntryLogger.createNewLog(EntryLogger.java:371)\n\tat org.apache.bookkeeper.bookie.EntryLogger.addEntry(EntryLogger.java:623)\n\tat org.apache.bookkeeper.bookie.InterleavedLedgerStorage.processEntry(InterleavedLedgerStorage.java:296)\n\tat org.apache.bookkeeper.bookie.InterleavedLedgerStorage.processEntry(InterleavedLedgerStorage.java:283)\n\tat org.apache.bookkeeper.bookie.InterleavedLedgerStorage.addEntry(InterleavedLedgerStorage.java:196)\n\tat org.apache.bookkeeper.bookie.LedgerDescriptorImpl.addEntry(LedgerDescriptorImpl.java:80)\n\tat org.apache.bookkeeper.bookie.Bookie.addEntryInternal(Bookie.java:1046)\n\tat org.apache.bookkeeper.bookie.Bookie.addEntry(Bookie.java:1085)\n\tat org.apache.bookkeeper.proto.WriteEntryProcessorV3.getAddResponse(WriteEntryProcessorV3.java:99)\n\tat org.apache.bookkeeper.proto.WriteEntryProcessorV3.run(WriteEntryProcessorV3.java:132)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n\tat java.lang.Thread.run(Thread.java:662)\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-774",
        "labels": [
            "test"
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-08-14",
        "status": "Resolved",
        "summary": "Flaky test org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly",
        "updatedDate": "2014-08-14"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Robin Dhamankar",
        "components": [
        ],
        "creationDate": "2014-06-19",
        "description": "As the license issue, isn't forcing the issue right now, I'd like to change this to a general discussion of the future of hedwig. Almost all the comments about the c++ client apply to hedwig as a whole. Hedwig has only had 5 real changes in the last year, only one in 2014. For all intensive purposes, it is inactive, unmaintained and unsupported. AFAIK, noone is using it in production in anything close to the form of the apache codebase.\n\nHowever, by having it in the codebase, at the same level of bookkeeper-server, we are indicating to users that it is in fact supported software and considered as important as bookkeeper-server. So, I would like to propose that, after the 4.3.0 release, we remove hedwig from the codebase. Obviously, it will still be available in the git/svn history, and in all releases <= 4.3.0.\n\n-The hedwig c++ client has not had any real code change since november 2012. It is not built as part of the main build. It is not tested as part of the main build. It is effectively unmaintained.-\n\n-In addition to this, it contains m4 files whose license status is unclear.-\n\n-I propose we simple remove it from trunk and branch-4.2. The license issue is currently blocking the release of 4.2.3. [~jiannan], [~farrellee], you were the last people to submit anything for the client. Are you using in production? Any objection to its removal from the main code tree?-",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-769",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-16",
        "status": "Closed",
        "summary": "Remove hedwig from source tree",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12324601,
                "name": "4.2.2",
                "releaseDate": "2013-10-10"
            }
        ],
        "assignee": "jialin",
        "components": [
            "bookkeeper-benchmark"
        ],
        "creationDate": "2014-06-17",
        "description": "fix typo 'seconds' to 'milliseconds' in benchmark output",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-768",
        "labels": [
        ],
        "openingVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "priority": "Trivial",
        "reporter": "jialin",
        "resolution": "Fixed",
        "resolutionDate": "2014-07-15",
        "status": "Resolved",
        "summary": "fix typo 'seconds' to milliseconds in benchmark output",
        "updatedDate": "2014-07-15"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-06-04",
        "description": "It's not uncommon to have something like the following in /etc/hosts:\n{quote}\n127.0.1.1 <myhostname>\n{quote}\n\nThis breaks the bookkeeper tests because getAllowLoopback() defaults to false. We should set allow loopback to true to allow tests to run out of the box on linux machines.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-767",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-06-06",
        "status": "Resolved",
        "summary": "Allow loopback in tests",
        "updatedDate": "2014-06-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-06-03",
        "description": "Copyright should include this year.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-766",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-06-05",
        "status": "Resolved",
        "summary": "Update notice.txt files to include 2014",
        "updatedDate": "2014-06-05"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-06-03",
        "description": "The current behaviour requires JAVA_HOME to be set, which isn't set by default on all machines. So machines on which bookkeeper ran fine, no longer work.\n\nSolution is to fallback to java in path is JAVA_HOME not set.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-765",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-06-10",
        "status": "Resolved",
        "summary": "bookkeeper script should fall back to java in path if JAVA_HOME is not set",
        "updatedDate": "2014-06-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-05-29",
        "description": "Search for [ERROR] in https://builds.apache.org/job/bookkeeper-trunk-precommit-build/641/consoleText\n\nThe problem is that maven isn't able to resolve the sibling modules if they are not installed in a repo it has access to.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-763",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-30",
        "status": "Resolved",
        "summary": "findbugs fails to run on jenkins",
        "updatedDate": "2014-05-30"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Joseph Redfern",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-05-08",
        "description": "Pretty minor bug, but: https://github.com/apache/bookkeeper/blob/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java#L1182\n\nspecifies that there are 84600 seconds in a day, when there are in fact 86400. The default should be changed to to the correct value. ",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-755",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Joseph Redfern",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-14",
        "status": "Resolved",
        "summary": "Incorrect number of seconds specified in a day",
        "updatedDate": "2014-05-15"
    },
    {
        "affectedVersions": [
            {
                "id": 12324601,
                "name": "4.2.2",
                "releaseDate": "2013-10-10"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2014-05-07",
        "description": "Not all places in NIOServerFactory acquire locks in order, which cause deadlock on shutdown. ",
        "fixedVersion": {
            "id": 12325569,
            "name": "4.2.3",
            "releaseDate": "2014-06-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-752",
        "labels": [
        ],
        "openingVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-27",
        "status": "Resolved",
        "summary": "Deadlock on NIOServer shutdown",
        "updatedDate": "2014-05-27"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2014-05-07",
        "description": "we are running bookkeeper callbacks under ledger handle lock, which would possibly introduce deadlock if application call bookkeeper functions in those callbacks.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-751",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-30",
        "status": "Resolved",
        "summary": "Ensure all the bookkeeper callbacks not run under ledger handle lock",
        "updatedDate": "2014-05-30"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-04-29",
        "description": "See https://builds.apache.org/job/bookkeeper-trunk-precommit-build/617/testReport/junit/org.apache.bookkeeper.replication/BookieAutoRecoveryTest/testEmptyLedgerLosesQuorumEventually/",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-750",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-23",
        "status": "Resolved",
        "summary": "Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually",
        "updatedDate": "2014-06-03"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-04-04",
        "description": "names are self explanatory. \n1. list all the ledgers in the cluster\n2. print the metadata for a ledger\n3. list underreplicated ledgers\n4. show the address of the auditor\n5. simple test: create ledger, write to ledger, close ledger",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-746",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-06-03",
        "status": "Resolved",
        "summary": "5 new shell commands. List ledgers, list metadata, list underreplicated, show auditor and simpletest",
        "updatedDate": "2014-06-03"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2014-04-04",
        "description": "The bug occurred because there was no check if rereplication was enabled or not when the auditor came online. When the auditor comes online it does a check of which bookies are up and marks the ledgers on missing bookies as underreplicated. In the false report case, the auditor was running after each bookie was bounced due to the way leader election for the auditor works. And since one bookie was down since you're bouncing the server, all ledgers on that bookie will get marked as underreplicated.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-745",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-06-02",
        "status": "Resolved",
        "summary": "Fix for false reports of ledger unreplication during rolling restarts.",
        "updatedDate": "2014-06-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2014-04-04",
        "description": "Previous the bookie check only runs when a bookie fails. If for some reason this doesn't pick up a failure, the failure will go undetected until the next time a bookie fails, in which case quorum could have been lost. This fix makes the bookie check run periodically, by default once a day.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-744",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-05-06",
        "status": "Resolved",
        "summary": "Run the auditor bookie check periodically",
        "updatedDate": "2014-05-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2014-04-04",
        "description": "The documentation says the configuration value for \"auditorPeriodicCheckInterval\" should be in seconds, but in fact the scheduler schedules it using milliseconds. This mean its running far too often.\n    \n",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-743",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-04-24",
        "status": "Resolved",
        "summary": "Periodic ledger check running too often as doc doesn't match implementation.",
        "updatedDate": "2014-04-24"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2014-04-04",
        "description": "If a ledger is open and empty, when a bookie in the ensemble crashes no recovery will take place (because there's nothing to recover). This open empty unrepaired ledger can persist for a long time. If it loses another bookie, it can lose quorum. At this point it's impossible for the bookie to know that its an empty ledger, and the admin gets notified of missing data.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-742",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-04-24",
        "status": "Resolved",
        "summary": "Fix for empty ledgers losing quorum.",
        "updatedDate": "2014-04-24"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2014-03-07",
        "description": "It seems the test case is failiing due to the following exception at join and is skipping auditorElector.shutdown.\n\n{code}\n2014-03-06 13:27:18,603 - WARN  - [AutoRecoveryDeathWatcher-15007:AutoRecoveryMain@127] - Interrupted shutting down auto recovery\njava.lang.InterruptedException\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Thread.join(Thread.java:1186)\n\tat java.lang.Thread.join(Thread.java:1239)\n\tat org.apache.bookkeeper.replication.AutoRecoveryMain.shutdown(AutoRecoveryMain.java:122)\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-740",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-10",
        "status": "Resolved",
        "summary": "AutoRecoveryMainTest#testAutoRecoverySessionLoss is failing",
        "updatedDate": "2014-03-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2014-03-04",
        "description": "A lot of our tests extend BookKeeperClusterTestCase which extends TestCase, which is the junit 3 way of doing tests. Annotations is the junit4 way to doing tests. If you're using a junit3 harness, annotations are ignored. Therefore, most of our timeout annotations are ignored. I propose we move everything to the junit4 style.\n\nhttp://stackoverflow.com/questions/1151237/junit-expected-tag-not-working-as-expected",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-739",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-07-23",
        "status": "Resolved",
        "summary": "Test timeouts mostly ignored",
        "updatedDate": "2014-07-24"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
        ],
        "creationDate": "2014-02-06",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-731",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-10",
        "status": "Resolved",
        "summary": "Missing BOOKIE_PID_DIR and BOOKIE_STOP_TIMEOUT in env variables list",
        "updatedDate": "2014-02-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-02-06",
        "description": "Shade plugin doesn't generate pom file with apache license header.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-730",
        "labels": [
            "build"
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-07",
        "status": "Resolved",
        "summary": "Shade pom file missing apache license header",
        "updatedDate": "2014-03-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-02-04",
        "description": "I've seen the deathwatcher reset the exit code to 0, even after it was set correct. We should make setting the exitcode a one way operation. ",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-729",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-06",
        "status": "Resolved",
        "summary": "Bookie shouldn't exit with 0, if exiting from deathwatcher and thread death was caused by OOM",
        "updatedDate": "2014-02-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-02-04",
        "description": "Should be public",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-728",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-06",
        "status": "Resolved",
        "summary": "Bookkeeper#Builder is not public, so can't be used outside of client package",
        "updatedDate": "2014-02-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-02-04",
        "description": "Summary says it all. Thread factories are backwards.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-727",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-05",
        "status": "Resolved",
        "summary": "Names of bookie write/read threads are backwards",
        "updatedDate": "2014-02-05"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2014-02-04",
        "description": "Currently we log the channel. But the channel doesn't contain the address if the connection failed.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-726",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-10",
        "status": "Resolved",
        "summary": "PerChannelBookieClient should print address that it failed to connect to when it fails to correct",
        "updatedDate": "2014-03-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-02-04",
        "description": "Currently exits with 0, which is bad, won't be restarted if daemontools is watching",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-725",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-06",
        "status": "Resolved",
        "summary": "AutoRecoveryMain should exit with error code if deathwatcher finds dead thread",
        "updatedDate": "2014-06-03"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2014-02-02",
        "description": "Shading library in BOOKKEEPER-708 introduces an unlicensed pom file for bookkeeper-server module. we should address this, otherwise we could not publish the new jar per apache release procedure.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-724",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-06",
        "status": "Resolved",
        "summary": "Shade introduces RAT error",
        "updatedDate": "2014-02-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2014-01-21",
        "description": "CheckpointSource.MIN#compareTo returns 1 which means that \"this\" is greater than the passed argument (see java.util.Comparable javadoc). It should return -1. \n\nThis hasn't been a problem, because MIN isn't currently used anywhere.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-720",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2014-01-22",
        "status": "Resolved",
        "summary": "CheckpointSource.MIN#compareTo does exactly the opposite of what it should",
        "updatedDate": "2014-01-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-stats"
        ],
        "creationDate": "2014-01-21",
        "description": " Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics; locked 50% of time [\"org.apache.bookkeeper.stats.CodahaleMetricsProvider\"] At CodahaleMetricsProvider.java:[lines 48-125]",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-719",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-01-21",
        "status": "Resolved",
        "summary": "Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics",
        "updatedDate": "2014-01-21"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-12-31",
        "description": "Logging channel exceptions in PerChannelBookieClient to identify channel connect issue.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-714",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-10",
        "status": "Resolved",
        "summary": "Logging channel exceptions in PerChannelBookieClient",
        "updatedDate": "2014-03-10"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
        ],
        "creationDate": "2013-12-05",
        "description": "Currently bookkeeper script is running using the default 'java' from the PATH.\n\nBut it should check JAVA_HOME and use JAVA_HOME/bin/java",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-712",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-12-05",
        "status": "Resolved",
        "summary": "bookkeeper script should use 'java' from JAVA_HOME",
        "updatedDate": "2013-12-05"
    },
    {
        "affectedVersions": [
            {
                "id": 12324601,
                "name": "4.2.2",
                "releaseDate": "2013-10-10"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
        ],
        "creationDate": "2013-12-03",
        "description": "bookkeeper-daemon.sh will not remove the pid file one successfull stop.\n\nThis may result in startup failure, if the same PID is used by some other process at that time.\n\n",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-711",
        "labels": [
        ],
        "openingVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-12-05",
        "status": "Resolved",
        "summary": "bookkeeper-daemon.sh will not remove the pid file on successful stop",
        "updatedDate": "2013-12-05"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-11-23",
        "description": "LedgerHandle opened by openLedgerNoRecovery should watch ensemble change. otherwise, readLastConfirmed & readEntries will stuck if there are ensemble changes in the ledger.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-710",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-04-11",
        "status": "Resolved",
        "summary": "OpenLedgerNoRecovery should watch ensemble change.",
        "updatedDate": "2014-04-11"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-11-23",
        "description": "SlowBookieTest#testSlowBookie fails intermittently when verifying the result of addEntry. \n\n{code}\njunit.framework.AssertionFailedError: expected:<0> but was:<-559038737>\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.failNotEquals(Assert.java:283)\n\tat junit.framework.Assert.assertEquals(Assert.java:64)\n\tat junit.framework.Assert.assertEquals(Assert.java:195)\n\tat junit.framework.Assert.assertEquals(Assert.java:201)\n\tat org.apache.bookkeeper.client.SlowBookieTest.testSlowBookie(SlowBookieTest.java:82)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-709",
        "labels": [
            "tests"
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-01-03",
        "status": "Resolved",
        "summary": "SlowBookieTest#testSlowBookie fails intermittently",
        "updatedDate": "2014-01-03"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-11-10",
        "description": "as offline discussion, we need to shade protobuf library for BKJM as hadoop uses protobuf 2.5.\n\nthis is planned on version 4.2.3 and 4.3.0.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-708",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-02",
        "status": "Resolved",
        "summary": "Shade protobuf library to avoid incompatible versions",
        "updatedDate": "2014-03-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-10-30",
        "description": "After completing compaction, GarbageCollectorThread will do flush any outstanding offsets. When there is no offset present, its throwing following exception and exiting.\n\n{code}\n2013-10-30 11:37:20,944 - ERROR - [GarbageCollectorThread:NIOServerCnxnFactory$1@49] - Thread Thread[GarbageCollectorThread,5,main] died\njava.lang.ArrayIndexOutOfBoundsException: -1\n\tat java.util.ArrayList.get(ArrayList.java:324)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread$CompactionScannerFactory.waitEntrylogFlushed(GarbageCollectorThread.java:151)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread$CompactionScannerFactory.flush(GarbageCollectorThread.java:175)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread.doCompactEntryLogs(GarbageCollectorThread.java:400)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread.run(GarbageCollectorThread.java:309)\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-700",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-30",
        "status": "Resolved",
        "summary": "GarbageCollectorThread exsiting with ArrayIndexOutOfBoundsException",
        "updatedDate": "2013-11-01"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-10-29",
        "description": "'timeoutExecutor' is leaking for every bookie client, it should be closed during bookie client closure. I've seen in tests, scheduler is running and periodically executing the TimeoutTask even after bk client closure.\n\nAlso, timeoutExecutor is missing thread name. IMHO, no need to raise another issue, just including the small change with this JIRA.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-698",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-30",
        "status": "Resolved",
        "summary": "Bookie client closure is not considering timeoutExecutor",
        "updatedDate": "2013-10-30"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2013-10-16",
        "description": "Some entry logs appear to be truncated (possible at a momemnt when the bookie\nwas shut down) and the compaction is never getting rid of them:\n\n{code}\n00:00:06.448 [GarbageCollectorThread] INFO o.a.b.bookie.GarbageCollectorThread - Extracting entry log meta from entryLogId: 1497\n00:00:07.140 [GarbageCollectorThread] WARN  o.a.b.bookie.GarbageCollectorThread - Premature exception when processing 1497 recovery will take care of the problem\njava.io.IOException: Short read for ledger entry from entryLog 1497@718702792(31356!=32840)\n        at org.apache.bookkeeper.bookie.EntryLogger.scanEntryLog(EntryLogger.java:514) ~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at org.apache.bookkeeper.bookie.GarbageCollectorThread.extractMetaFromEntryLog(GarbageCollectorThread.java:572) [bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at org.apache.bookkeeper.bookie.GarbageCollectorThread.extractMetaFromEntryLogs(GarbageCollectorThread.java:549) [bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at org.apache.bookkeeper.bookie.GarbageCollectorThread.run(GarbageCollectorThread.java:268) [bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n{code}\n\nThese entry logs are not being removed: \n{code}\n$ ll -h *.log\n-rw-r--r-- 1 yahoo users 686M Jul 17 10:45 5d9.log\n-rw-r--r-- 1 yahoo users 634M Jul 27 19:31 b2d.log\n-rw-r--r-- 1 yahoo users 1.5G Jul 28 15:22 b35.log\n-rw-r--r-- 1 yahoo users 2.0G Aug  4 04:57 dbd.log\n-rw-r--r-- 1 yahoo users 2.0G Aug  4 04:58 dbe.log\n.....\n{code}\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-695",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2015-09-25",
        "status": "Closed",
        "summary": "Some entry logs are not removed from the bookie storage",
        "updatedDate": "2016-02-18"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2013-10-04",
        "description": "Tests run: 12, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 49.385 sec <<< FAILURE!\ntestCloseDuringOp[1](org.apache.bookkeeper.client.BookKeeperTest)  Time elapsed: 14.74 sec  <<< FAILURE!\njunit.framework.AssertionFailedError: Close never completed\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.assertTrue(Assert.java:20)\n        at org.apache.bookkeeper.client.BookKeeperTest.testCloseDuringOp(BookKeeperTest.java:217)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n        at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)",
        "issueType": "Bug",
        "key": "BOOKKEEPER-689",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-07",
        "status": "Resolved",
        "summary": "BookKeeperTest failure",
        "updatedDate": "2014-03-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-10-04",
        "description": "NPE exception in PerChannelBookieClient:\n\n{code}\n2013-10-04 11:56:34,526 - INFO  - [NIOServerFactory-15099:NIOServerFactory$Cnxn@246] - Peer closed connection. rc=-1 java.nio.channels.SocketChannel[connected local=/10.18.170.130:15099 remote=/10.18.170.130:53945]\n2013-10-04 11:56:34,526 - INFO  - [Thread-93:PerChannelBookieClient@493] - Disconnected from bookie channel [id: 0x006287d3, /10.18.170.130:53945 :> /10.18.170.130:15099]\n2013-10-04 11:56:34,526 - INFO  - [New I/O client worker #90-3:PerChannelBookieClient$1@137] - Successfully connected to bookie: [id: 0x01964fe8, /10.18.170.130:53951 => /10.18.170.130:15100]\n2013-10-04 11:56:34,542 - INFO  - [NIOServerFactory-15100:NIOServerFactory$Cnxn@246] - Peer closed connection. rc=-1 java.nio.channels.SocketChannel[connected local=/10.18.170.130:15100 remote=/10.18.170.130:53951]\n2013-10-04 11:56:34,542 - INFO  - [Thread-93:PerChannelBookieClient@493] - Disconnected from bookie channel [id: 0x01964fe8, /10.18.170.130:53951 :> /10.18.170.130:15100]\n2013-10-04 11:56:34,542 - WARN  - [New I/O client worker #90-3:PerChannelBookieClient@274] - Add entry operation failed\njava.lang.NullPointerException\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.addEntry(PerChannelBookieClient.java:258)\n\tat org.apache.bookkeeper.proto.BookieClient$2.operationComplete(BookieClient.java:138)\n\tat org.apache.bookkeeper.proto.BookieClient$2.operationComplete(BookieClient.java:1)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient$1.operationComplete(PerChannelBookieClient.java:173)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:381)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListeners(DefaultChannelFuture.java:372)\n\tat org.jboss.netty.channel.DefaultChannelFuture.setSuccess(DefaultChannelFuture.java:316)\n\tat org.jboss.netty.channel.socket.nio.NioWorker$RegisterTask.run(NioWorker.java:767)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.processRegisterTaskQueue(NioWorker.java:256)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:198)\n\tat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n\tat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:44)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n4 Oct, 2013 11:56:34 AM org.jboss.netty.channel.DefaultChannelFuture\nWARNING: An exception was thrown by ChannelFutureListener.\n{code}\n\nHere the operation which is performed is\nstep-1 addEntry asynchronously\nstep-2 Immediately after adding the entry, close the bookie client",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-688",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-04",
        "status": "Resolved",
        "summary": "NPE exception in PerChannelBookieClient",
        "updatedDate": "2014-03-04"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-09-29",
        "description": "When bookie startup, entry logger is randomly picking one of the configured ledger directory and creates a new log to write. Now journal will be replaying the entries and add to the entry logger.\n\nUnfortunately, if the randomly selected ledger directory is full, then it will immediately fail the bookie startup. Here Bookie is not efficiently filtering the writable ledger directories and utilizing all the available ledger directories.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-686",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-02",
        "status": "Resolved",
        "summary": "Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal",
        "updatedDate": "2013-10-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-09-13",
        "description": "I discovered a race in the algorithm when I was forward porting to trunk.\n\n1) Thread1: flushed.set(false)\n2) Thread2: onRotateEntryLog() // flushed.set(true)\n3) Thread1: entryLogger addEntry L123-E456\n4) Thread1: offsets > max, waits for flushed, flushed is true(as set in 2), L123-E456 updated in ledger cache\n5) T2: L123 flushed out of ledger cache\n6) Crash\n\nThis will possible lose 1 entry. I've only reasoned this, not observed it, but it can happen.\n\nThe fix is pretty easy. EntryLoggerListener should notify with the point offset in the entry log it has synced as far as. \n      \n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-685",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-02",
        "status": "Resolved",
        "summary": "Race in compaction algorithm from BOOKKEEPER-664",
        "updatedDate": "2013-10-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-09-13",
        "description": "Some tests, GcLedgerTests for example, create a lot of ledgers (30k) which causes a lot of zk writes. This causes a lot of zk logging, which can fill the log buffer and cause an oom when you're running with very little memory.\n\nFix is trivial. zk should be set to only log at error level in log4j.properties.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-684",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-09-19",
        "status": "Resolved",
        "summary": "ZK logging is oververbose, can cause oom in tests",
        "updatedDate": "2013-09-19"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jiannan Wang",
        "components": [
        ],
        "creationDate": "2013-09-12",
        "description": "Test failure when checking the release candidate.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-683",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2013-09-27",
        "status": "Resolved",
        "summary": "TestSubAfterCloseSub fails on 4.2",
        "updatedDate": "2013-09-27"
    },
    {
        "affectedVersions": [
        ],
        "components": [
        ],
        "creationDate": "2009-04-01",
        "description": "currently ledger keys are stored in memory; however, we need to restrict access even after reboots so it needs to be in nonvolatile storage. the most obvious solution would be to store the ledger keys with the ledger fragments on the bookie.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-680",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Benjamin Reed",
        "resolution": "Fixed",
        "resolutionDate": "2017-10-09",
        "status": "Resolved",
        "summary": "Bookkeeper bookies need to store ledger keys with ledger fragments",
        "updatedDate": "2017-10-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-09-04",
        "description": "Currently, if NIOServerFactory throws something like OutOfMemoryError, bookie process will exit with 0. This is bad, as monitoring tools will take it to mean a normal shutdown and not restart.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-679",
        "labels": [
        ],
        "priority": "Critical",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-09-09",
        "status": "Resolved",
        "summary": "Bookie should exit with non-zero if NIOServer crashes with Error",
        "updatedDate": "2013-09-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-09-01",
        "description": "BookieFailureTest testcase hangs randomly in my environment(Windows 7), when I checked the threaddump, its waiting at NIO's releaseExternalResources. Please have a look at the following threaddump.\n\n{code}\n\"Thread-6\" prio=6 tid=0x0000000007676800 nid=0x19ac waiting on condition [0x000000000b1ae000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c3278068> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)\n\tat java.util.concurrent.ThreadPoolExecutor.awaitTermination(ThreadPoolExecutor.java:1261)\n\tat org.jboss.netty.util.internal.ExecutorUtil.terminate(ExecutorUtil.java:107)\n\tat org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.releaseExternalResources(NioServerSocketChannelFactory.java:146)\n\tat org.apache.bookkeeper.proto.BookieNettyServer.shutdown(BookieNettyServer.java:149)\n\tat org.apache.bookkeeper.proto.BookieServer.shutdown(BookieServer.java:138)\n\t- locked <0x00000000c3277ca8> (a org.apache.bookkeeper.proto.BookieServer)\n\tat org.apache.bookkeeper.test.BookieFailureTest.auxTestReadWriteAsyncSingleClient(BookieFailureTest.java:177)\n\tat org.apache.bookkeeper.test.BookieFailureTest.testAsyncBK3(BookieFailureTest.java:114)\n{code}\n\nAlso, full threaddump is attached to this JIRA.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-678",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-11-22",
        "status": "Resolved",
        "summary": "BookieServer shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources",
        "updatedDate": "2013-11-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Aniruddha",
        "components": [
        ],
        "creationDate": "2013-08-23",
        "description": "currently, recovery read needs to wait until add finished. it would take a long time for ledger recovery if there are lots of entries needs to recover. read next and add current could be sent in parallel.\n\nthis ticket is for merging change: https://github.com/twitter/bookkeeper/commit/e7ff599869a35c24ebd255a20fa6c70c32b559f5",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-676",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-14",
        "status": "Resolved",
        "summary": "Make add asynchrounous in ledger recovery",
        "updatedDate": "2013-10-14"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2013-08-21",
        "description": "Ledger length can be inconsistent if a ledger is closed by a writing client that encounters an error. For example, in a cluster with 3 bookies, and an ledger with a q3e3 configuration, if a bookie dies, the client will close the ledger when it fails to write an entry. However, it has already added the length of the failed entry to the local ledger length, and this is what is stored to zk.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-673",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-14",
        "status": "Resolved",
        "summary": "Ledger length can be inaccurate in failure case",
        "updatedDate": "2014-05-30"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-08-13",
        "description": "Consider the following.\n\n# Client calls connect() [state=CONNECTING]\n# Client calls disconnect() before connect finishes [state=DISCONNECTED]\n# Client calls connect() [state=CONNECTING]\n# Connect completes, client writes request [state=CONNECTED]\n# channelDisconnected() from previous disconnect() called\n\nThe #channelDisconnected() call will then error out the write request. This is due to the fact that the outstanding request map belongs to the PerChannelBookieClient, rather than to the channel, even though they should belong to the socket on which they were sent out on.\n\nThe solution would be to move the completions into the ChannelHandlerContext. At the same time, we can get rid of the separate read and add lists. This information can be in the keys. Perhaps this fix can be done as part of the transaction id changes.\n",
        "issueType": "Bug",
        "key": "BOOKKEEPER-671",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2017-10-09",
        "status": "Resolved",
        "summary": "PerChannelBookieClient#channelDisconnected can error out other channel's requests",
        "updatedDate": "2017-10-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-08-08",
        "description": "There is a race condition between when a ledger is delete and an eviction from\nLedgerCache occur.\n\nThe resulting exception is:\n\n{code}\n14:06:24.754 [SyncThread] ERROR org.apache.bookkeeper.bookie.Bookie  -\nException in SyncThread\njava.lang.NullPointerException: null\n        at\norg.apache.bookkeeper.bookie.LedgerCacheImpl.evictFileInfoIfNecessary(LedgerCacheImpl.java:809)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at\norg.apache.bookkeeper.bookie.LedgerCacheImpl.getFileInfo(LedgerCacheImpl.java:267)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at\norg.apache.bookkeeper.bookie.LedgerCacheImpl.flushLedger(LedgerCacheImpl.java:425)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at\norg.apache.bookkeeper.bookie.LedgerCacheImpl.flushLedger(LedgerCacheImpl.java:382)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at\norg.apache.bookkeeper.bookie.InterleavedLedgerStorage.flush(InterleavedLedgerStorage.java:167)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n        at org.apache.bookkeeper.bookie.Bookie$SyncThread.run(Bookie.java:330)\n~[bookkeeper-server-4.2.1.15.jar:4.2.2-SNAPSHOT]\n14:06:24.755 [SyncThread] INFO  org.apache.bookkeeper.bookie.Bookie  -\nTriggering shutdown of Bookie-3181 with exitCode 5\n14:06:24.768 [BookieShutdownTrigger] INFO  org.apache.bookkeeper.bookie.Bookie \n- Shutting down Bookie-3181 with exitCode 5\n14:06:24.769 [BookieJournal-3181] WARN  org.apache.bookkeeper.bookie.Journal -\nJournal exits when shutting down\n{code}\n\nThe problem is that the openLedger list is a normal LinkedList and sometimes is\nmodified while synchronizing on fileInfoCache, other times on openLedgers, and\nin other places it is accessed without synchronizing.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-669",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2013-09-09",
        "status": "Resolved",
        "summary": "Race condition in ledger deletion and eviction from cache",
        "updatedDate": "2013-09-09"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-08-06",
        "description": "1. Ledger was created with ensemble 2 and quorum as 2 and entries were written.\n2. While reading entries, 2 BKs out of 3 in cluster were killed and restarted.\n3. Client was hung at read call waiting for sync counter notification.\n\nAs though I was not able to reproduce this in some tries, but\nBy looking at the logs and code, following seems to be problem\n\n1. BookieWatcher got the notification first for changes in available bookies.\n2. PerChannelBookieClient#disconnect() called from BookieWatcher for failed bookies. This has set the 'this.channel=null;'\n3. PerChannelBookieClient#channelDisconnected() call came now, and it proceeded silently without notifying errors to read ops.\n\nSo client is hung waiting for result.\n\n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-668",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-20",
        "status": "Resolved",
        "summary": "Race between PerChannelBookieClient#channelDisconnected() and disconnect() calls can make clients hang while add/reading entries in case of multiple bookie failures",
        "updatedDate": "2013-08-20"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2013-08-06",
        "description": "Scenario:\n------------\n1. Start cluster of enough bookies, say 4, with autorecovery\n2. Create ledger and write some entries.\n3. Restart one of the bookies\n4. again, write some more entries\n5. wait for some time.. till autorecovery completes replication of first segment\n6. Now restart one of the bookie of latest ensemble\n7. continue to write.\n\nHere second ensemble change will fail, throwing BadMetadataVersion\n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-667",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Blocker",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-13",
        "status": "Resolved",
        "summary": "Client write will fail with BadMetadataVersion in case of multiple Bookie failures with AutoRecovery enabled",
        "updatedDate": "2013-08-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-07-29",
        "description": "Compaction writes to the journal to avoid data loss (see BOOKKEEPER-530). BOOKKEEPER-530 correctly identified that this may affect latency on the journal but we have observed this since in production. It is possible to avoid the journal completely, as twitter do in their github branch. Basically, we need to write to the entrylogger first, flush the entry log and then add to the index.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-664",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-22",
        "status": "Resolved",
        "summary": "Compaction increases latency on journal writes",
        "updatedDate": "2013-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2013-07-26",
        "description": "The HierarchicalLedgerManager is missing some ledger ranges when iterating over 2nd level ranges. \nAlso, within these ranges, the last ledger (*9999) it's not included in the iteration.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-663",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-29",
        "status": "Resolved",
        "summary": "HierarchicalLedgerManager iterator is missing some ranges and the last ledger in the range",
        "updatedDate": "2013-07-29"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2013-07-24",
        "description": "When a client drops a connection, the server throws an exception. It should only log at info level and close the socket.\n\n{code}\n    if (k.isReadable()) {\n        int rc = sock.read(incomingBuffer);\n        if (rc < 0) {\n            throw new IOException(\"Read error\");\n        }\n        if (incomingBuffer.remaining() == 0) {\n{code}\n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-660",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-20",
        "status": "Resolved",
        "summary": "Logs too noisy on NIOServerFactory when client drops a connection",
        "updatedDate": "2013-08-20"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-07-21",
        "description": "User can perform below operations with the closed bookkeeper client, which was instantiated with external zkclient.\n- open a closed ledger \n- create a new ledger \n\nAlso, ledgerhandle operations like fencing/add/write are infinitely hanging.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-654",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2014-02-21",
        "status": "Resolved",
        "summary": "Bookkeeper client operations are allowed even after its closure, bk#close()",
        "updatedDate": "2014-02-21"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-07-20",
        "description": "In LedgerCacheImpl.java logger class name is given as 'LedgerDescriptor.class'\n{code}\npublic class LedgerCacheImpl implements LedgerCache {\n    private final static Logger LOG = LoggerFactory.getLogger(LedgerDescriptor.class);\n{code}",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-652",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-20",
        "status": "Resolved",
        "summary": "Logger class name is wrong in LedgerCacheImpl.java",
        "updatedDate": "2013-07-20"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-07-16",
        "description": "If multiple threads are calling createFullPathOptimistic() there will be race conditions on creating the intermediate nodes. If the intermediate nodes have been created since we last check, we can just ignore the exception and continue creating the child nodes.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-649",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-22",
        "status": "Resolved",
        "summary": "Race condition in sync ZKUtils.createFullPathOptimistic()",
        "updatedDate": "2013-08-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
        ],
        "creationDate": "2013-07-08",
        "description": "Following is the exception:\n{code}\n--------- Lid=3, Eid=99, ByteOffset=5992, EntrySize=56 ---------\nType:           DATA\nLastConfirmed:  98\n\n--------- Lid=3, Eid=-8192, ByteOffset=6052, EntrySize=16 ---------\nException in thread \"main\" java.nio.BufferUnderflowException\n\tat java.nio.Buffer.nextGetIndex(Buffer.java:480)\n\tat java.nio.HeapByteBuffer.getLong(HeapByteBuffer.java:387)\n\tat org.apache.bookkeeper.bookie.BookieShell.formatEntry(BookieShell.java:899)\n\tat org.apache.bookkeeper.bookie.BookieShell.access$1(BookieShell.java:882)\n\tat org.apache.bookkeeper.bookie.BookieShell$2.process(BookieShell.java:857)\n\tat org.apache.bookkeeper.bookie.Journal.scanJournal(Journal.java:395)\n\tat org.apache.bookkeeper.bookie.BookieShell.scanJournal(BookieShell.java:738)\n\tat org.apache.bookkeeper.bookie.BookieShell.scanJournal(BookieShell.java:849)\n\tat org.apache.bookkeeper.bookie.BookieShell$ReadJournalCmd.runCmd(BookieShell.java:440)\n\tat org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:111)\n\tat org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:630)\n\tat org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:656)\n{code}\n\n\n+Cause:+ When reading entries from a fenced ledger, BookieShell#formatEntry meeting Bookie.METAENTRY_ID_FENCE_KEY as an entry, but it doesn't have any data.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-646",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-20",
        "status": "Resolved",
        "summary": "BookieShell readjournal command is throwing BufferUnderflowException",
        "updatedDate": "2013-07-20"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-07-05",
        "description": "When bookie registration fails due to zookeeper exception, its not exiting with ExitCode.ZK_REG_FAIL.\n\nBookie.java\n{code}\n       try {\n            registerBookie(conf);\n        } catch (IOException e) {\n            LOG.error(\"Couldn't register bookie with zookeeper, shutting down\", e);\n            shutdown(ExitCode.ZK_REG_FAIL);\n        }\n{code}",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-642",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-24",
        "status": "Resolved",
        "summary": "Bookie returns incorrect exitcode, ExitCode.ZK_REG_FAIL is getting overridden",
        "updatedDate": "2013-07-24"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-07-02",
        "description": "I've seen in our testcases, DeathWatcher threads are continue running even after bkServer#shutdown.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-641",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Minor",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-03",
        "status": "Resolved",
        "summary": "DeathWatcher thread is unnecessarily running even after bookie shutdown",
        "updatedDate": "2013-07-03"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-06-28",
        "description": "this issue is introduced in providing netty server for bookie.\n\nin BOOKKEEPER-294, we agreed on the start sequence of bookie:\n\n1) bind bookie port first (to avoid two processes running at the same host).\n2) start bookie (e.g initialize bookie storage and replaying journals)\n3) start nio server to accept incoming requests.\n\nbut after refactoring for netty server, step 1) is combined to be executed in step 3), so two processes could have chance to run at the same time replaying journals. this is pretty bad.\n\nwe need to change the code to stick on the sequence described above.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-638",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-10-11",
        "status": "Resolved",
        "summary": "Two bookies could start at the same time to access bookie data.",
        "updatedDate": "2013-10-11"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-06-26",
        "description": "With the following scenario latest transaction log can be deleted.\n\n1. more than {{journalMaxBackups}} txn logs are there in journal dir.\n2. BK machine was up for long time and the latest txn log id is some what huge number\n3. Now reboot the machine.\n4. after reboot BK restarted.\n5. Now, Immediately after startup, One entry is added, due to which Synthread rolled the lastMark in ledger dirs before the lastLogId updated by Journal thread. (this lastMark was having the old logId which was before reboot). \n6. Now after roll, old journal txn logs were gc'ed. *Now latest created the txn log was deleted.*\n7. After this Journal thread updated the lastLogMark, also some more rolls happened.\n8. Now BK restarted again. But BK was not able to start because it was not able to find the latest txn log file in journal directory.\n\n{noformat}java.io.IOException: Recovery log 264564 is missing\n        at org.apache.bookkeeper.bookie.Journal.replay(Journal.java:424)\n        at org.apache.bookkeeper.bookie.Bookie.readJournal(Bookie.java:547)\n        at org.apache.bookkeeper.bookie.Bookie.start(Bookie.java:603)\n        at org.apache.bookkeeper.proto.BookieServer.start(BookieServer.java:111){noformat}",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-636",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Blocker",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-04",
        "status": "Resolved",
        "summary": "Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created.",
        "updatedDate": "2013-07-04"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-06-26",
        "description": "Currently it doesn't and this makes it hard to track the errors down.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-635",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-20",
        "status": "Resolved",
        "summary": "jenkins build should highlight which lines of the patch cause raw analysis errors",
        "updatedDate": "2013-07-20"
    },
    {
        "affectedVersions": [
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-06-25",
        "description": "Got below exception while running one of the tests from TestReplicationWorker\n\n{noformat}2013-06-25 15:09:28,546 - ERROR - [main-EventThread:ClientCnxn$EventThread@623] - Caught unexpected throwable\njava.util.ConcurrentModificationException\n\tat java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:828)\n\tat com.google.common.collect.Iterators$8.computeNext(Iterators.java:735)\n\tat com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:143)\n\tat com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:138)\n\tat org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicy.onClusterChanged(RackawareEnsemblePlacementPolicy.java:380)\n\tat org.apache.bookkeeper.client.BookieWatcher.processResult(BookieWatcher.java:135)\n\tat org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:591)\n\tat org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497){noformat}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-633",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-26",
        "status": "Resolved",
        "summary": "ConcurrentModificationException in RackawareEnsemblePlacementPolicy when a bookie is removed from available list",
        "updatedDate": "2013-06-26"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-auto-recovery",
            "bookkeeper-server"
        ],
        "creationDate": "2013-06-20",
        "description": "Autorecovery Auditor should consider the readonly bookies as Available Bookies  while publishing the under-replicated ledgers.\n\nAlso AutoRecoveryDaemon should shutdown if the local bookie is readonly",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-632",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-21",
        "status": "Resolved",
        "summary": "AutoRecovery should consider read only bookies",
        "updatedDate": "2013-08-21"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
        ],
        "creationDate": "2013-06-14",
        "description": "BOOKIE_EXTRA_OPTS are added twice to JVM Opts.\n\nIt will not create problem for usual options like -Xmx, -Xms, etc.\n\nBut for Debug options (-Xdebug) we can specify only once. In this case it will create problems.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-626",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-15",
        "status": "Resolved",
        "summary": "BOOKIE_EXTRA_OPTS are added twice",
        "updatedDate": "2013-06-17"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-06-14",
        "description": "Observed OutOfMemoryError in NIOServerFactory, but it didnt bring down the bookie and it continued to run without serving. \n\nOn OOME in any thread, bookie should shutdown.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-625",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-24",
        "status": "Resolved",
        "summary": "On OutOfMemoryError in NIOServerFactory thread bookie should shutdown",
        "updatedDate": "2013-07-24"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2013-06-12",
        "description": "Reduce the amount of logs generated by the ReplicationWorker. \nMove the unnecessary logs to DEBUG.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-624",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Minor",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-20",
        "status": "Resolved",
        "summary": "Reduce logs generated by ReplicationWorker",
        "updatedDate": "2013-08-20"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            },
            {
                "id": 12323267,
                "name": "4.3.0",
                "releaseDate": "2014-02-02"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-06-12",
        "description": "With the almost same testcase mentioned in the BOOKKEEPER-584, Ledger metadata is getting added with extra segment during failure handling of bookies along with fencing. \n\nOnly difference in the testcase is .\n1. Before bookie failures some entries were already written\n2. And after bookies failed ( First bookie will throw LedgerFenced/Unauthorized exception, and second bookie is slow/dead bookie ), Number of entries written asynchrounously is n*ensembleSize+1\n\nNote that, Unauthorized/FencedException callback comes first, then other bookie failure callback comes.\n\nI will attach a TestCase along with patch for this shortly. Testcase is modified version of attached testcase in BOOKKEEPER-584\n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-623",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-26",
        "status": "Resolved",
        "summary": "LedgerChecker should avoid segments of closed ledger with higher start entryId than closed entry.",
        "updatedDate": "2013-06-26"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-06-07",
        "description": "See attached test failure. This was fixed in BOOKKEEPER-564, but we can't pull back that whole patch. The fix is self contained though.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-621",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-20",
        "status": "Resolved",
        "summary": "NPE in FileInfo.moveToNewLocation",
        "updatedDate": "2013-07-20"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-06-07",
        "description": "channel & state are not synchronized in PerChannelBookieClient#closeInternal. so it might cause state is set to CONNECTED but the netty channel is closed by mistake in closeInternal.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-620",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-28",
        "status": "Resolved",
        "summary": "PerChannelBookieClient race during channel disconnect",
        "updatedDate": "2013-08-06"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-06-06",
        "description": "If you download a distribution of bookkeeper-4.2.1 and try to start the bookie before initializing zookeeper, then the bookie will fail to start, but write the local cookie files with a null instance id. If you then initialize zookeeper with the \"bin/bookkeeper shell metaformat\", you will not be able to start the bookie as instance id of in zk will not match the null instance id in the bookie files.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-619",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-21",
        "status": "Resolved",
        "summary": "Bookie should not create local cookie files if zookeeper is uninitialized",
        "updatedDate": "2013-06-21"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-06-03",
        "description": "BOOKKEEPER-544 made hedwig generate a tests jar in hedwig-server/target. When hedwig-server/bin/hedwig tries to find the hedwig-server jar in target, it will find the test jar rather than the main jar.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-617",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-05",
        "status": "Resolved",
        "summary": "BOOKKEEPER-544 breaks hedwig-server/bin/hedwig script",
        "updatedDate": "2013-06-06"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-05-10",
        "description": "Currently we have a bunch of boolean variables to control the lifecycle of the SyncThread. We're effectively replicating what an Executor does, so we should just use an executor.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-610",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-20",
        "status": "Resolved",
        "summary": "Make SyncThread use an executor",
        "updatedDate": "2013-07-20"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-04-22",
        "description": "In current FIFODeliveryManager, once a message is filtered in ActiveSubscriberState#messageScanned(), it just call ActiveSubscriberState#sendingFinished() and wait client's acknowledgement. However, the message isn't being delivered to client side, and once the number of such filtered messages larger than the delivery window size, the user cannot receive messages anymore!",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-607",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Blocker",
        "reporter": "Jiannan Wang",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-22",
        "status": "Resolved",
        "summary": "Filtered Messages Require ACK from Client Causes User Being Throttled Incorrectly Forever",
        "updatedDate": "2013-07-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2013-04-08",
        "description": "If a ledger is flushing, and part way through,GC kicks in, it can delete the index file before we try and flush it.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-604",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-12",
        "status": "Resolved",
        "summary": "Ledger storage can log an exception if GC happens concurrently.",
        "updatedDate": "2013-08-12"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Jiannan Wang",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2013-04-08",
        "description": "The latest boost version 1.53 does not compatible with current hedwig-client cpp code for \"shared_dynamic_cast\" function is moved out of shared_ptr.hpp at this release. Boost 1.52 and before version is ok.\n\nFYI: https://bitbucket.org/osrf/gazebo/issue/581/boost-shared_-_cast-are-deprecated-removed",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-603",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Jiannan Wang",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-03",
        "status": "Resolved",
        "summary": "Support Boost 1.53 for Hedwig Cpp Client",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Aniruddha",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-04-05",
        "description": "currently we only have readTimeout in netty channel, it timeouts only when there is no activities in that channel, but it can't track timeouts of individual requests. if a channel continues having read entry activities, it might shadow a slow add entry response, which is bad impacting add latency.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-602",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-10",
        "status": "Resolved",
        "summary": "we should have request timeouts rather than channel timeout in PerChannelBookieClient",
        "updatedDate": "2014-03-10"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-04-05",
        "description": "we should update cache size only when first time adding message to a cache stub.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-601",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-13",
        "status": "Resolved",
        "summary": "readahead cache size isn't updated correctly ",
        "updatedDate": "2013-07-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2013-04-05",
        "description": "shouldClaim flag isn't cleared when resubscribing in multiplex java client. so it would continue claiming topic ownership in one hub, which is bad for load balancing.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-600",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-14",
        "status": "Resolved",
        "summary": "shouldClaim flag isn't cleared for hedwig multiplex java client",
        "updatedDate": "2013-07-14"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Jiannan Wang",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-04-05",
        "description": "When log level is DEBUG, a failure read will cause NPE in PerChannelBookieClient (rr.getData() is null):\n{code:java}\nvoid handleReadResponse(BookieProtocol.ReadResponse rr) {\n    if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Got response for read request {} entry length: {}\",\n                  rr, rr.getData().readableBytes());\n    }\n    ...\n}\n{code}",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-599",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Jiannan Wang",
        "resolution": "Fixed",
        "resolutionDate": "2013-04-07",
        "status": "Resolved",
        "summary": "NPE in PerChannelBookieClient",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Matthew Farrellee",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2013-04-04",
        "description": "0. cd hedwig-client/src/main/cpp\n1. autoreconf -fi\n2. ./configure\n3. make\n\n(3) fails with subscriberimpl.cpp:150:48: error: no match for 'operator==' in '(Hedwig::StatusCode)407u == *(const std::type_info*)(*(exception.std::exception::_vptr.exception + -8u))'\n\nThe static const RESUBSCRIBE_EXCEPTION is conflicting with an enum from hedwig-client/src/main/cpp/inc/hedwig/protocol.h (line 153 RESUBSCRIBE_EXCEPTION = 407).",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-598",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Matthew Farrellee",
        "resolution": "Fixed",
        "resolutionDate": "2013-04-07",
        "status": "Resolved",
        "summary": "Fails to compile - RESUBSCRIBE_EXCEPTION conflict",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-04-02",
        "description": "Logs are currently piped to a file. However, if a test is hanging, its useful to get the logs sent to stdout in as they happen, to see where the test is hanging. We should enable this with a mvn profile, instead of requiring the person to edit out the <redirectOutputToFile> flag.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-597",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-04-02",
        "status": "Resolved",
        "summary": "Add flag to output test logs to stdout",
        "updatedDate": "2013-04-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2013-03-28",
        "description": "details: https://issues.apache.org/jira/browse/BOOKKEEPER-590?focusedCommentId=13616397&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13616397",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-596",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-07-26",
        "status": "Resolved",
        "summary": "Ledgers are gc'ed by mistake in MSLedgerManagerFactory.",
        "updatedDate": "2013-07-26"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2013-03-26",
        "description": "Currently the AutoRecovery daemon will shut down on SyncDisconnected. This is the wrong behaviour. It should wait until it gets a expired signal before shutting down. If autoRecoveryDaemonEnabled=true, then the autorecovery deamon is running in the same process as the bookie, the bookie death watcher will take down the bookie at this point also, but as the bookie hasn't shutdown, exit code will be 0, which is confusing to any monitoring app.\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-594",
        "labels": [
        ],
        "priority": "Critical",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2016-03-16",
        "status": "Closed",
        "summary": "AutoRecovery shutting down on SyncDisconnected",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-03-20",
        "description": "there is a recursive call in fifo delivery manager.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-586",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-25",
        "status": "Resolved",
        "summary": "Remove recursive call in delivery manager",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-03-14",
        "description": "The auditor logs very noisily when it tries to check a ledger which has been deleted. Ledgers being deleted is very normal, so this shouldn't log noisily.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-585",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-17",
        "status": "Resolved",
        "summary": "Auditor logs noisily when a ledger has been deleted",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-03-12",
        "description": "this is an issue introduced when fixing BOOKKEEPER-337. the original #resolveConflicts logic was removed by just checking state and current ensemble, which tends to fixing multiple bookies changed in same ensemble.\n\nthe issue could be reproduce by a test case in following steps:\n\n1. Ledger L writing several entries to ensemble A, B, C.\n2. C succeed, B failed with slow responses and A failed with unrecoverable issue.\n3. L would fail all the pending add ops and close the ledger with lastEntryId = -1. (since no add operations succeed).\n4. The ownership of this Ledger is released and transferred to other machines (it is the normal use case for Hedwig).\n5. the new owner tried to open Ledger L and recover the ensemble, suppose A, B is back to normal at this case. so L is closed with lastEntryId is not -1.\n6. the old owner although closed the ledger, but doesn't blocking the responses for already failed pending add ops. so failures for B would kick in some ensemble changes and since the ledger metadata is already changed by new owner, so it needs to resolve the conflicts and update the ledger metadata with lastEntryId = -1 again. so we get different lastEntryId at different time, which cause inconsistency and data loss.\n\nfor details of this sequence, a test case could describe it more clearly.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-584",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Critical",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-04-26",
        "status": "Resolved",
        "summary": "Data loss when ledger metadata is overwritten",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-03-07",
        "description": "Read from a ReadOnlyBookie fails is the Bookie is restarted after writing a ledger.\n\ni.e. fileInfo for the ledger to be read is not present in the fileInfoCache",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-583",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-25",
        "status": "Resolved",
        "summary": "Read from a ReadOnlyBookie fails if index fileinfo is not in ledger cache",
        "updatedDate": "2013-06-06"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            },
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-03-05",
        "description": "currently read and write use same ledger metadata during ledger recovery, which is bad. since write will cause changing ensemble which modified ensembles map to introducing brand new bookies. those brand new bookies would mislead following recovery reads, cause recovery is proceeded in a wrong way.\n\nE.g.\n\n3 bookies, quorums size 2. A, B, C.\n\nread 0 from A, B.\nrecovery add 0: A, B becomes slow. D, E are brought into the ensemble to replace A, B.\nso following recovery read would be proceed in ensemble (D, E, C), then we would lost all the entries added in A and B.\n\nthis issue is similar as BOOKKEEPER-355.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-581",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Critical",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-25",
        "status": "Resolved",
        "summary": "Ledger recovery doesn't work correctly when recovery adds force changing ensembles.",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2013-02-27",
        "description": "currently, bookkeeper client still write ledger metadata to metadata storage even the metadata is already closed or undergoing closing. which would cause lots of bad version metadata update encountering unrecoverable errors in ledger handle. e.g. NotEnoughtBookiesException.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-580",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-08-23",
        "status": "Resolved",
        "summary": "improve close logic",
        "updatedDate": "2013-08-23"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2013-02-27",
        "description": "TestSubAfterCloseSub is put in wrong package.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-579",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-08",
        "status": "Resolved",
        "summary": "TestSubAfterCloseSub was put in a wrong package",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-02-27",
        "description": "By default the page limit parameter is set to -1, which means to assign 1/3 of Heap space to the LedgerCache. Each LedgerEntryPage is then allocating the memory outside the heap (ByteBuffer.allocateDirect()).\n\nThis makes BK to use more memory than the -XmxNN configured setting. Is there any particular reason for the LedgerEntryPage buffer to be allocated outside the java heap? Could that be changed?\n",
        "fixedVersion": {
            "id": 12325566,
            "name": "4.4.0",
            "releaseDate": "2016-05-16"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-578",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2016-04-05",
        "status": "Closed",
        "summary": "LedgerCacheImpl is reserving 1/3 of Heap size but allocates NonHeap memory",
        "updatedDate": "2016-05-16"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-02-26",
        "description": "This makes it susceptible to spurious wakeup issues, which seem to hit very regularly on my laptop.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-577",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-05-07",
        "status": "Resolved",
        "summary": "BookieFailureTest uses sync/wait()/notify() incorrectly",
        "updatedDate": "2013-06-10"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-02-13",
        "description": "There's a synchronization on InterleavedLedgerStorage#flush(), which kills performance when you're writing to many ledgers on a single bookie. Both #flush and #addEntry are synchronized, which blocks any adds being serviced while the sync thread is running.\n\nThe sync on #addEntry has always been there, but on #flush it has only existed since BOOKKEEPER-293. The addition was obviously a mistake.\n\nFix is simply to remove it.",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-569",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-16",
        "status": "Resolved",
        "summary": "Critical performance bug in InterleavedLedgerStorage",
        "updatedDate": "2013-02-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-02-11",
        "description": "{noformat}\n2013-02-11 14:06:28,904 - WARN  - [GarbageCollectorThread:ScanAndCompareGarbageCollector@103] - Exception when iterating over the metadata {}\njava.io.IOException: Error when check more elements\n\tat org.apache.bookkeeper.meta.HierarchicalLedgerManager$HierarchicalLedgerRangeIterator.hasNext(HierarchicalLedgerManager.java:423)\n\tat org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(ScanAndCompareGarbageCollector.java:75)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers(GarbageCollectorThread.java:302)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread.run(GarbageCollectorThread.java:271)\nCaused by: java.lang.NullPointerException\n\tat org.apache.bookkeeper.meta.HierarchicalLedgerManager$HierarchicalLedgerRangeIterator.hasNext(HierarchicalLedgerManager.java:419)\n\t... 3 more\n{noformat}\n\nIn the code below, l2NodesIter appears to be null.\n\n{code}\npublic boolean hasNext() throws IOException {\n   try {\n      if (l1NodesIter == null) {\n          l1NodesIter = zk.getChildren(ledgerRootPath, null).iterator();\n          hasMoreElement = nextL1Node();\n      } else if (!l2NodesIter.hasNext()) {\n          hasMoreElement = nextL1Node();\n      }\n   } catch (Exception e) {\n      throw new IOException(\"Error when check more elements\", e);\n   }\n   return hasMoreElement;\n}\n{code}",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-568",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-15",
        "status": "Resolved",
        "summary": "NPE during GC with HierarchicalLedgerManager",
        "updatedDate": "2013-02-15"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2013-02-09",
        "description": "ReadOnlyBookieTest hangs on shutdown. It occurs when I run bookie tests.",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-567",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-19",
        "status": "Resolved",
        "summary": "ReadOnlyBookieTest hangs on shutdown",
        "updatedDate": "2013-02-19"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-02-05",
        "description": "Findbugs reports a lot of error about a null pointer dereference for System.out\n\nhttp://sourceforge.net/p/findbugs/bugs/918/?page=0\n\nThe solution is to upgrade to a newer findbugs, but this is a bit stricter, so there's some fixes needed. This jira is for the upgrade and those fixes, and also to fix/exclude the errors introduced by BOOKKEEPER-312.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-561",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-08",
        "status": "Resolved",
        "summary": "Findbugs reports errors with openjdk",
        "updatedDate": "2013-02-08"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2013-01-28",
        "description": "Ivan reported this:\nI've seen failure in AuditorBookieTest on jenkins, and I think I've\n> > also seen it once locally.\n> >\n> > https://builds.apache.org/job/bookkeeper-trunk/lastCompletedBuild/testReport/\n\nCurrent, build does not have that failure and so, we can not see from logs as of now. I will check the test code closely and by that time if Jenkins also reports that will help in checking from the trace.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-559",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-05",
        "status": "Resolved",
        "summary": "Fix occasional failure in AuditorBookieTest",
        "updatedDate": "2013-06-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-01-24",
        "description": "JDK 7 changed the error format, and the version of the maven compiler plugin we use doesn't like it. The fix is to update the maven compiler plugin.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-557",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-03-25",
        "status": "Resolved",
        "summary": "Compiler error showing up badly with jdk 7",
        "updatedDate": "2013-03-25"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-01-24",
        "description": "This got carried over from zookeeper during a copy paste. In ZooKeeper it's used to specify whether a server is standalone or not. This isn't relevant for BookKeeper.",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-556",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-09",
        "status": "Resolved",
        "summary": "BookieServerMXBean#getServerState makes no sense",
        "updatedDate": "2013-06-06"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-01-20",
        "description": "a file info is get when moving ledger index, but it doesn't release after use. so the reference counting for file info stays more than zero, the file channel would never be closed even the file is evicted from ledger cache.",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-554",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-12",
        "status": "Resolved",
        "summary": "fd leaking when move ledger index file",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2013-01-16",
        "description": "Need documentation for below items\n{code}\n    //ReadOnly mode support on all disk full\n    protected final static String READ_ONLY_MODE_ENABLED = \"readOnlyModeEnabled\";\n    //Disk utilization\n    protected final static String DISK_USAGE_THRESHOLD = \"diskUsageThreshold\";\n    protected final static String DISK_CHECK_INTERVAL = \"diskCheckInterval\";\n{code}",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-549",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-19",
        "status": "Resolved",
        "summary": "Documentation missed for readOnlyMode support",
        "updatedDate": "2013-02-19"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-auto-recovery"
        ],
        "creationDate": "2013-01-16",
        "description": "regarding 'auditorPeriodicCheckInterval'",
        "fixedVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-548",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2013-02-19",
        "status": "Resolved",
        "summary": "Document about periodic ledger checker configuration",
        "updatedDate": "2013-02-19"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Mridul Muralidharan",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-01-11",
        "description": "Allow client testcases to start/stop hedwig server as part of their setup/teardown.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-544",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Mridul Muralidharan",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-06",
        "status": "Resolved",
        "summary": "Modify hedwig server tests to allow client testcases to start/stop them as part of their tests",
        "updatedDate": "2013-06-06"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Fangmin Lv",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-01-10",
        "description": "In ServerConfiguration#getZkHost we use conf.getString(ZK_HOST, \"localhost\") to get the zk host string which will only return the part before comma, need to change to getList.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-543",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Fangmin Lv",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-10",
        "status": "Closed",
        "summary": "Read zk host list in a wrong way in hedwig server",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-01-09",
        "description": "ClientNotSubscribedException & doesn't receive enough messages failure in TestThrottlingDelivery#testServerSideThrottle.\n\n{code}\n-------------------------------------------------------------------------------\nTest set: org.apache.hedwig.server.delivery.TestThrottlingDelivery\n-------------------------------------------------------------------------------\nTests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 18.544 sec <<< FAILURE!\ntestServerSideThrottle[1](org.apache.hedwig.server.delivery.TestThrottlingDelivery)  Time elapsed: 6.776 sec  <<< FAILURE!   junit.framework.AssertionFailedError: Should be expected messages with only 6 expected:<6> but was:<2>\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.failNotEquals(Assert.java:283)\n        at junit.framework.Assert.assertEquals(Assert.java:64)\n        at junit.framework.Assert.assertEquals(Assert.java:195)\n        at org.apache.hedwig.server.delivery.TestThrottlingDelivery.throttleX(TestThrottlingDelivery.java:151)\n        at org.apache.hedwig.server.delivery.TestThrottlingDelivery.testServerSideThrottle(TestThrottlingDelivery.java:216)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n        at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\n{code}\n\n{code}\n-------------------------------------------------------------------------------\nTest set: org.apache.hedwig.server.delivery.TestThrottlingDelivery\n-------------------------------------------------------------------------------\nTests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 18.294 sec <<< FAILURE!\ntestServerSideThrottle[1](org.apache.hedwig.server.delivery.TestThrottlingDelivery)  Time elapsed: 6.763 sec  <<< ERROR!\norg.apache.hedwig.exceptions.PubSubException$ClientNotSubscribedException: Client is not yet subscribed to Topic:            testServerSideThrottleWithHigherValue, SubscriberId: serverThrottleSub\n        at org.apache.hedwig.client.netty.impl.multiplex.MultiplexHChannelManager.startDelivery(MultiplexHChannelManager.    java:221)\n        at org.apache.hedwig.client.netty.impl.multiplex.MultiplexHChannelManager.startDelivery(MultiplexHChannelManager.    java:199)\n        at org.apache.hedwig.client.netty.HedwigSubscriber.startDelivery(HedwigSubscriber.java:358)\n        at org.apache.hedwig.server.delivery.TestThrottlingDelivery.throttleX(TestThrottlingDelivery.java:113)\n        at org.apache.hedwig.server.delivery.TestThrottlingDelivery.testServerSideThrottle(TestThrottlingDelivery.java:226)          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:601)\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n        at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-539",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-11",
        "status": "Closed",
        "summary": "ClientNotSubscribedException & doesn't receive enough messages in TestThrottlingDelivery#testServerSideThrottle",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-01-08",
        "description": "I've seen this with BookieAutoRecoveryTest. Basically, we interrupt and join the replicationworker thread, and then close the BookKeeper instance. This can have caused a bookkeeper operation that never finished. The executor runs it after #close has closed the BookieClient. The operation opens a connection and therefore we get a hang on releaseExternalResources(). \n\nSolution is pretty simple. We should shutdown all executors before closing the bookieClient. I'll attach a patch which does this.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-538",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-10",
        "status": "Closed",
        "summary": "Race condition in BookKeeper#close",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
        ],
        "creationDate": "2013-01-05",
        "description": "See https://builds.apache.org/job/bookkeeper-trunk2/35/",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-534",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-07",
        "status": "Closed",
        "summary": "Flakeyness in AuditorBookieTest",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2013-01-05",
        "description": "Example https://builds.apache.org/job/bookkeeper-trunk-precommit-build/204/\n\nIt looks like the maven surefire process exits, as if System.exit() is being called. This should be the case since BOOKKEEPER-522, which removes all calls to System.exit()",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-533",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-09",
        "status": "Closed",
        "summary": "TestSubAfterCloseSub fails strangely in tests",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-01-05",
        "description": "{code}\n    private class AcquireOp extends TopicOpQueuer.AsynchronousOp<Void> {\n        public AcquireOp(ByteString topic, Callback<Void> callback, Object ctx) {\n            queuer.super(topic, callback, ctx);\n        }   \n\n        @Override\n        public void run() {\n            if (top2sub2seq.containsKey(topic)) {\n                cb.operationFinished(ctx, null);\n            }   \n\n            readSubscriptions(topic, new Callback<Map<ByteString, InMemorySubscriptionState>>() {\n{code}\n\nit doesn't return after it found subscriptions and callback.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-532",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-07",
        "status": "Closed",
        "summary": "AbstractSubscriptionManager#AcquireOp read subscriptions every time even it already owned the topic",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2013-01-05",
        "description": "Ivan commented this issue in BOOKKEEPER-461, but seems that the last patch I attached doesn't address this comment.\n\nhttps://issues.apache.org/jira/browse/BOOKKEEPER-461?focusedCommentId=13503945&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13503945\n\nso when publish speed is larger than deliver/consume speed, it might overwhelm readAhead cache and putting lots of collectOldEntries operations in request queue, finally it OOM.\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-531",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-09",
        "status": "Closed",
        "summary": "Cache thread should wait until old entries are collected",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-12-29",
        "description": "{code}\n        try {\n            entryLogger.scanEntryLog(entryLogId, new CompactionScanner(entryLogMeta));\n            // after moving entries to new entry log, remove this old one\n            removeEntryLog(entryLogId);\n        } catch (IOException e) {\n            LOG.info(\"Premature exception when compacting \" + entryLogId, e); \n        } finally {\n            // clear compacting flag\n            compacting.set(false);\n        }\n{code}\n\ncurrently compaction code has a bit problem: as the code described above, old entry log is removed after new entries are added to new entry log, but new entry log might not be flushed. if failures happened after removal but before flush, data would be lost.\n\nwhen I implemented compaction feature in BOOKKEEPER-160, I remembered that I took care of letting entry go back to normal addEntry flow to reflect journal and index. But seems that the addEntry doesn't go thru journal, just move entries between entry log files w/o any flush guarantee.\n\nthere are two ideas for this solution:\n\nsimple one is to let compaction going to normal addEntry flow (adding entry to ledger storage and putting it in journal). the other one is GC thread either wait for ledger storage to flush in sync thread in one flush interval or force a ledger storage flush before removing entry log files.\n\nBTW, it was hard to design a test case by simulating bookie abnormally shut down itself after entry log files are removed.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-530",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-10",
        "status": "Closed",
        "summary": "data might be lost during compaction.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-12-21",
        "description": "The SyncThread get a NPE while the rest of the bookie is still running. This causes the journal gc to be stopped and the filesystem get full.\n\nTue Dec 18 17:01:18 2012: Exception in thread \"SyncThread\" java.lang.NullPointerException\nTue Dec 18 17:01:18 2012:       at org.apache.bookkeeper.bookie.LedgerCacheImpl.getLedgerEntryPage(LedgerCacheImpl.java:153)\nTue Dec 18 17:01:18 2012:       at org.apache.bookkeeper.bookie.LedgerCacheImpl.flushLedger(LedgerCacheImpl.java:421)\nTue Dec 18 17:01:18 2012:       at org.apache.bookkeeper.bookie.LedgerCacheImpl.flushLedger(LedgerCacheImpl.java:363)\nTue Dec 18 17:01:18 2012:       at org.apache.bookkeeper.bookie.InterleavedLedgerStorage.flush(InterleavedLedgerStorage.java:148)\nTue Dec 18 17:01:18 2012:       at org.apache.bookkeeper.bookie.Bookie$SyncThread.run(Bookie.java:221)",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-524",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Blocker",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-07",
        "status": "Closed",
        "summary": "Bookie journal filesystem gets full after SyncThread is terminated with exception",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-20",
        "description": "See\nhttps://builds.apache.org/job/bookkeeper-trunk2/2/console\n\nThis is probably because something is calling System.exit(). ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-522",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-24",
        "status": "Closed",
        "summary": "TestHedwigHub is failing silently on Jenkins",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-12-18",
        "description": "https://builds.apache.org/job/bookkeeper-trunk-precommit-build/142/",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-520",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-27",
        "status": "Closed",
        "summary": "BookieFailureTest hangs on precommit build",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-14",
        "description": "I've attached the logs.\n\nLooks to be something with the new channel manager. Also, the test itself is bad because its doing an assert from a callback.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-514",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-28",
        "status": "Closed",
        "summary": "TestDeadLock hanging sometimes",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-14",
        "description": "Running org.apache.hedwig.server.filter.TestMessageFilter\nTests run: 9, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 6.779 sec <<< FAILURE!\n\nResults :\n\nTests in error: \n  testChangeSubscriptionPreferences(org.apache.hedwig.server.filter.TestMessageFilter): Server responded with a status code of: TOPIC_BUSY\n  testChangeSubscriptionPreferencesForClientFilter(org.apache.hedwig.server.filter.TestMessageFilter): Server responded with a status code of: TOPIC_BUSY\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-513",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-14",
        "status": "Closed",
        "summary": "TestMessageFilter fails periodically",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-14",
        "description": "BookieZkExpireTest is too timing sensitive. It fails periodically due to simply having a 3 second wait for watchers to trigger. It's better to wait 1 second, and check if they have have run and if not wait again.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-512",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-15",
        "status": "Closed",
        "summary": "BookieZkExpireTest fails periodically",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-14",
        "description": "Bookie shell prints out a lot of stuff it for zookeeper and bookkeeper and the actually shell messages get lost. This JIRA makes zookeeper and bookkeeper only print ERROR level messages for BookieShell. Other commands stay as they are.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-511",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-15",
        "status": "Closed",
        "summary": "BookieShell is very noisy",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-12-14",
        "description": "latest trunk failed at TestBookKeeperPersistenceManager.\n\nsees that it caused by uncaught exception:\n{code}\njava.util.NoSuchElementException\n        at java.util.AbstractQueue.remove(AbstractQueue.java:90)\n        at org.apache.bookkeeper.client.PendingReadOp.nextElement(PendingReadOp.java:345)\n        at org.apache.bookkeeper.client.PendingReadOp.nextElement(PendingReadOp.java:53)\n        at org.apache.bookkeeper.client.LedgerRecoveryOp.readComplete(LedgerRecoveryOp.java:100)\n        at org.apache.bookkeeper.client.PendingReadOp.submitCallback(PendingReadOp.java:338)\n        at org.apache.bookkeeper.client.PendingReadOp.readEntryComplete(PendingReadOp.java:327)\n        at org.apache.bookkeeper.proto.PerChannelBookieClient.handleReadResponse(PerChannelBookieClient.java:627)\n        at org.apache.bookkeeper.proto.PerChannelBookieClient$7.safeRun(PerChannelBookieClient.java:529)\n        at org.apache.bookkeeper.util.SafeRunnable.run(SafeRunnable.java:31)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:680)\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-509",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-18",
        "status": "Closed",
        "summary": "TestBookKeeperPersistenceManager failed on latest trunk",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-12-14",
        "description": "1) closesub first\n2) sub late\n3) closesub succeed, but response is delayed to client.\n4) since closesub succeed in server side, so sub succeed and tried to deliver message.\n5) sub response is back\n6) client checked and found that there is already a subscriber there.\n7) client failed the subscribe request\n8) but the message would still be delivered to same channel. since the sub state is not be cleared. message is still be received.\n9) closesub response is back.\n10) it clear the subscribe state.\n11) message continue delivering but found there is no subscriber state.\nat step 11) the problem happened.\n\nthis race condition is introduced in multiplexed client (BOOKKEEPER-70).",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-507",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-03",
        "status": "Closed",
        "summary": "Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client).",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Flavio Paiva Junqueira",
        "components": [
        ],
        "creationDate": "2012-12-13",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-504",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-14",
        "status": "Closed",
        "summary": "Fix findbugs warning in PendingReadOp",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jiannan Wang",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-12-13",
        "description": "Running follow script in hedwig-server project\n{code:java}\nwhile mvn test -Dtest=TestThrottlingDelivery; do echo .; done\n{code}\nWe may get assertion failure:\n{code:java}\ntestServerSideThrottle[0](org.apache.hedwig.server.delivery.TestThrottlingDelivery)  Time elapsed: 14.922 sec  <<< FAILURE!\njunit.framework.AssertionFailedError: Timed out waiting for messages 31\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat org.apache.hedwig.server.delivery.TestThrottlingDelivery.throttleX(TestThrottlingDelivery.java:159)\n\tat org.apache.hedwig.server.delivery.TestThrottlingDelivery.testServerSideThrottle(TestThrottlingDelivery.java:206)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:601)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\n{code}\n\nThis is a race issue which may cause messages been throttled by mistake, the root cause is ActiveSubscriberState.messageConsumed() and ActiveSubscriberState.deliverNextMessage() may be executed in different threads by AbstractSubscriptionManager and FIFODeliveryManager.\n\nRead the log in attachement around Line 2420 if you want to get more information, here I replay the logs onto the code (Line XX denotes code listed below):\n# Messages 1-30 are to be delivered and the message window size in Hub server is 10.\n# Messages 1-10 are delivered to subscriber while message 11-30 is throttled by the window size limitation.\n# Subscriber calls consume 1-10 asynchronously.\n# CONSUME 1 is handled and FIFODeliveryManager continue to deliver message 11.\n# Subscriber receive message 11 and quickly ack CONSUME 11 to Hub.\n# Now there are two threads operate on a same ActiveSubscriberState:\n#* Thread in AbstractSubscriptionManager: call ActiveSubscriberState.messageConsumed() for message 2, 3, 11 (4-10 is still on the way since it's asynchronous consume). Let's assume this thread happen to run in Line (14) for message 11.\n#* Thread in FIFODeliveryManager:  Coincidently, it's in Line (36) now (with last delivered 11, last consumed 1 and variable isThrottled is still false).\n# If thread in AbstractSubscriptionManager executed before FIFODeliveryManager, then consume operator for 11 does nothing more.\n# CONSUME [4-10] will be just ignored by the if statement in Line (2) since lastSeqIdConsumedUtil is now 11.\n# Further messages like 12 have no chance to been delivered at this time.\n\n{code:java}\n(01) protected void messageConsumed(long newSeqIdConsumed) {\n(02)     if (newSeqIdConsumed <= lastSeqIdConsumedUtil) {\n(03)         return;\n(04)     }\n(05)     if (logger.isDebugEnabled()) {\n(06)         logger.debug(\"Subscriber ({}) moved consumed ptr from {} to {}.\",\n(07)                      va(this, lastSeqIdConsumedUtil, newSeqIdConsumed));\n(08)     }\n(09)     lastSeqIdConsumedUtil = newSeqIdConsumed;\n(10)     // after updated seq id check whether it still exceed msg limitation\n(11)     if (msgLimitExceeded()) {\n(12)         return;\n(13)     }\n(14)     if (isThrottled) {\n(15)         isThrottled = false;\n(16)         logger.info(\"Try to wake up subscriber ({}) to deliver messages again : last delivered {}, last consumed {}.\",\n(17)                     va(this, lastLocalSeqIdDelivered, lastSeqIdConsumedUtil));\n(18) \n(19)         enqueueWithoutFailure(new DeliveryManagerRequest() {\n(20)             @Override\n(21)             public void performRequest() {\n(22)                 // enqueue \n(23)                 clearRetryDelayForSubscriber(ActiveSubscriberState.this);            \n(24)             }\n(25)         });\n(26)     }\n(27) }\n(28) \n(29) public void deliverNextMessage() {\n(30)     if (!isConnected()) {\n(31)         return;\n(32)     }\n(33) \n(34)     // check whether we have delivered enough messages without receiving their consumes\n(35)     if (msgLimitExceeded()) {\n(36)         logger.info(\"Subscriber ({}) is throttled : last delivered {}, last consumed {}.\",\n(37)                     va(this, lastLocalSeqIdDelivered, lastSeqIdConsumedUtil));\n(38)         isThrottled = true;\n(39)         // do nothing, since the delivery process would be throttled.\n(40)         // After message consumed, it would be added back to retry queue.\n(41)         return;\n(42)     }\n(43) \n(44)     localSeqIdDeliveringNow = persistenceMgr.getSeqIdAfterSkipping(topic, lastLocalSeqIdDelivered, 1);\n(45) \n(46)     ScanRequest scanRequest = new ScanRequest(topic, localSeqIdDeliveringNow,\n(47)             /* callback= */this, /* ctx= */null);\n(48) \n(49)     persistenceMgr.scanSingleMessage(scanRequest);\n(50) }\n{code}\n\nBy the way, we should also take care of thread-safe issue in other methods for ActiveSubscriberState, which implements some other callback interface.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-503",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Jiannan Wang",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-12",
        "status": "Closed",
        "summary": "The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            },
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-12-11",
        "description": "Currently we just record fence state in memory. If the bookies are restarted, all fence states are gone. It would break the correctness that we guarantee about fencing.\n\nWe should record the fence state in the file info to make it persistent.\n\nA test case added to produce this issue.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-500",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-18",
        "status": "Closed",
        "summary": "Fencing doesn't work when restarting bookies.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Flavio Paiva Junqueira",
        "components": [
        ],
        "creationDate": "2012-12-10",
        "description": "Jenkins build is complaining among other things about this NPE.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-498",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-10",
        "status": "Closed",
        "summary": "BookieRecoveryTest.tearDown NPE",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-12-10",
        "description": "The callbacks use Object#wait/notify without checking a condition. If the callback completes very quickly, the notify will happen before wait is ever called. The best solution is to use a CountDownLatch. Im seeing this problem when applying patch for BOOKKEEPER-205, probably due to a change in timing on the test.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-497",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-12",
        "status": "Closed",
        "summary": "GcLedgersTest has a potential race",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-12-06",
        "description": "{code}\n\n    public void addToFilledDirs(File dir) {\n        if (!filledDirs.contains(dir)) {\n            LOG.warn(dir + \" is out of space.\"\n                    + \" Adding it to filled dirs list\");\n            // Update filled dirs list\n            List<File> updatedFilledDirs = new ArrayList<File>(filledDirs);\n            updatedFilledDirs.add(dir);\n            filledDirs = updatedFilledDirs;\n            // Update the writable ledgers list\n            List<File> newDirs = new ArrayList<File>(writableLedgerDirectories);\n            newDirs.removeAll(filledDirs);\n            writableLedgerDirectories = newDirs;\n            // Notify listeners about disk full\n            for (LedgerDirsListener listener : listeners) {\n                listener.diskFull(dir);\n            }   \n        }   \n    }\n\n{code}\n\nWhen a directory is putting into filledDirs, it might not be removed from writableLedgerDirectories. The directory still has chance to be picked up to move index file.\n\nwe need same synchronization and check to guarantee that we don't move to same directory.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-493",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-12",
        "status": "Closed",
        "summary": "moveLedgerIndexFile might have chance pickup same directory",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "... while testing BOOKKEEPER-477, but I think they are unrelated.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-485",
        "labels": [
        ],
        "priority": "Critical",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-01",
        "status": "Closed",
        "summary": "TestFencing hung",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "Catchup patch for some annoying issues I've notices with patch test scripts.\n\n# SCM cleanup happens after dir creation (effectively undoing it)\n# patch link is displayed wrong\n# posts empty message to jira if patch is not in patch available state",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-484",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-03",
        "status": "Closed",
        "summary": "Misc fixes for test scripts",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "Therefore, not all rat errors are detected.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-483",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "precommit tests only check toplevel rat file, not the one for submodules.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "Precommit is reporting findbugs warnings. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-482",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-01",
        "status": "Closed",
        "summary": "Precommit is reporting findbugs errors in trunk",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "Precommit is reporting javadoc warnings. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-481",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-30",
        "status": "Closed",
        "summary": "Fix javadoc warnings",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "Precommit is reporting javac warnings. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-480",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-30",
        "status": "Closed",
        "summary": "Fix javac warnings",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-27",
        "description": "On an absolutely clean branch, mvn apache-rat:check fails. There are two test sources without license. Fix this.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-479",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-27",
        "status": "Closed",
        "summary": "Fix apache-rat issues in tree",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-23",
        "description": "Right now we assert immediately, so the bookie thread has no chance to die. We should only assert after giving it a chance.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-477",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-27",
        "status": "Closed",
        "summary": "In ReadOnlyBookieTest, we should wait for the bookie to die before asserting on it",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-21",
        "description": "This test exists to detect the case where a bookie is taken down, and the same another bookie is selected to replace it, but the other bookie is already in the ensemble. BOOKKEEPER-106 fixed this, so it shouldn't happen. However we still need to check. We iterate 10 times, but this is a parametered test, so effectively we iterate 40 times. There's 3 possible bookies to select, two of which are already in the ensemble, so a single iteration, if selecting randomly has a 66% chance of selecting a bad bookie. We have to run four times anyhow because it's a parameterized test, giving us a 66*4 % chance of hitting the bug if we only have one iteration. \n\nTherefore, we should only iterate once. Also, we don't need to write much data. We only care about whats in zk for this test really.\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-475",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-04",
        "status": "Closed",
        "summary": "BookieRecoveryTest#testSyncBookieRecoveryToRandomBookiesCheckForDupes() iterates too much",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-21",
        "description": "This test was created to catch the BOOKKEEPER-5, which is where we hang due to orphaned netty connections. Netty connections are made when we first send an add entry to the bookie. \n\nThe creates 10000 ledgers, and writes 200 entries to across these (note, this is not 200 each, but 200 across all ledgers). Therefore, a maximum 200 connections could be created. So the test isn't doing what it think it is doing.\n\nThe test takes between 4 & 7 minutes (most of this time creating unused ledgers) on jenkins. It is then run 4 times as BookieReadWriteTest is a Parameterized test.\n\nThis adds up to 28 minutes to a build on jenkins. This test should take no longer than 30 seconds.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-474",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-08",
        "status": "Closed",
        "summary": "BookieReadWriteTest#testShutdown doesn't make sense",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "We should have jenkins test patches automatically before submission. This JIRA is to set that up.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-471",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-27",
        "status": "Closed",
        "summary": "Add scripts for preCommit testing",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "SubscribeReconnectCallback#operationFailed calls\nSubscribeReconnectCallback#retrySubscribeRequest calls\nchannelManager#submitOpAfterDelay calls\nSubscribeReconnectCallback#operationFailed (if closed is true).",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-470",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-04",
        "status": "Closed",
        "summary": "Possible infinite loop in simple.SubscribeReconnectCallback",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "TestLedgerManager has a System.out.println in it. Tests should only ever go through slf4j.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-469",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-10",
        "status": "Closed",
        "summary": "Remove System.out.println from TestLedgerManager",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "There's some debugging <echo> tags in the pom.xml script for generating the protobuf scripts. They should be removed.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-468",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-21",
        "status": "Closed",
        "summary": "Remove <echo> from protobuf generation in hedwig",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "We're getting a lot of failures in jenkins because we use hardcoded ports. If another build is using these ports (jenkins runs builds in parallel), we get a failure. The ZooKeeper port is particularly bad as a lot of apache projects use zookeeper, and therefore use it for testing.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-467",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-23",
        "status": "Closed",
        "summary": "Allocate ports for testing dynamically",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-19",
        "description": "This causes issues if the zookeeper port, is very high, as the minSessionTimeout is 2*tickTime by default. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-466",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-21",
        "status": "Closed",
        "summary": "ZooKeeper test utility sets the port number as the tickTime",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Yixue Zhu",
        "components": [
        ],
        "creationDate": "2012-11-14",
        "description": "In createNewLog(), only one directory is searched to check for duplicate log id.\nThen the id is used to overwrite lastLogId.\n\nIt looks like regression from BOOKKEEPER-345. \n\n     // It would better not to overwrite existing entry log files\n    File newLogFile = null;\n        do {\n            String logFileName = Long.toHexString(++logId) + \".log\";\n            File dir = ledgerDirsManager.pickRandomWritableDir();\n            newLogFile = new File(dir, logFileName);\n            currentDir = dir;\n            if (newLogFile.exists()) {\n                LOG.warn(\"Found existed entry log \" + newLogFile\n                        + \" when trying to create it as a new log.\");\n                newLogFile = null;\n                continue;\n            }\n        } while (newLogFile == null);",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-465",
        "labels": [
            "patch"
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Blocker",
        "reporter": "Yixue Zhu",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-10",
        "status": "Closed",
        "summary": "CreateNewLog may overwrite lastLogId with smaller value ",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-11-11",
        "description": "When running benchmarking over the hub server, found that delivery throughput degrades when there are lots of publishers publishing messages. And the delivery throughput will goes up when there is no publishes.\n\nThis issue is introduced due to ReadAheadCache only runs a single thread. So when the netty workers are busy handling publish requests, they are pushing lots of messages into ReadAheadCache's queue to put them in to read ahead cache. So the readahead cache is busy on updating keys.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-461",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-04",
        "status": "Closed",
        "summary": "Delivery throughput degrades when there are lots of publishers w/ high traffic.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Jiannan Wang",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-11-06",
        "description": "Some annoy BKReadException are found when changing ledger.\n\n1) suppose Topic T has ledger L1, storing messages starting from 1 - 100.\n2) T changed ledger to write entry to ledger L2.\n3) Before the entry is added successfully, Subscribe s subscribed topic T. ReadAhead cache tried to schedule a ReadAhead request to scan (103, 104).\n4) RangeScanOp in BookKeeperPersistentManager executed to read entry 2 & 3 from L2. but actually there was no entries in L2.\n\n{code:title=BookKeeperPersistentManager.java}\n// None of the old ledgers have this seq-id, we must use the\n                // current ledger\n                long endSeqId = topicInfo.currentLedgerRange.getStartSeqIdIncluded()\n                                + topicInfo.lastEntryIdAckedInCurrentLedger;\n\n                if (endSeqId < startSeqId) {\n                    request.getCallback().scanFinished(request.ctx, ReasonForFinish.NO_MORE_MESSAGES);                    return;\n                }\n{code} \n\nThe code in BookKeeperPersistentManager is supposed to not scan any messages whose seq id is larger than lastEntryIdAckedInCurrentLedger. But lastEntryIdAckedInCurrentLedger isn't reset when changing ledger. so when RangeScanOp is executed, last entry id acked in previous ledger was used which causing calculating an error seq id for the boundary checking in RangeScanOp.\n\nThe fix would be quite easy to reset lastEntryIdAckedInCurrentLedger when changing ledger. But we need a test case to cover this case.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-458",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "Annoy BKReadException error when changing ledger.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-11-06",
        "description": "Create a format command for Hedwig to cleanup metadata for a clean setup. similar as BOOKKEEPER-300.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-457",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-29",
        "status": "Closed",
        "summary": "Create a format command for Hedwig to cleanup its metadata.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-11-02",
        "description": "in debian, sh is dash. so the tests fail.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-454",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-11-22",
        "status": "Closed",
        "summary": "hedwig c++ tester script assumes sh is bash",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-10-30",
        "description": "Bookie index page steal (LedgerCacheImpl::grabCleanPage) can cause index file to reflect unacknowledged entries (due to flushLedger). Suppose ledger and entry fail to flush due to Bookkeeper server crash, it will cause ledger recovery not able to use the bookie afterward, due to InterleavedStorageLedger::getEntry throws IOException.\nIf the ackSet bookies all experience this problem (DC environment), the ledger will not be able to recover.\nThe problem here essentially a violation of WAL. One reasonable fix is to track ledger flush progress (either per-ledger entry, or per-topic message). Do not flush index pages which tracks entries whose ledger (log) has not been flushed.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-447",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Yixue Zhu",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-24",
        "status": "Closed",
        "summary": "Bookie can fail to recover if index pages flushed before ledger flush acknowledged",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-10-29",
        "description": "in {{BookKeeper.createLedger()}} following code is masking the error with ZKException. Should throw the original exception to client.\n\n{code}        if (counter.getLh() == null) {\n            LOG.error(\"ZooKeeper error: \" + counter.getrc());\n            throw BKException.create(Code.ZKException);\n        }{code}\n\n",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-446",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-09-10",
        "status": "Resolved",
        "summary": "BookKeeper.createLedger(..) should not mask the error with ZKException",
        "updatedDate": "2013-09-10"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            },
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Jiannan Wang",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-10-25",
        "description": "The problems encountered when failed to updateSubscriptionState but deleted consumed ledgers. \n\nThe issue is described as below:\n\n1) A subscriber setLastConsumeSeqId to move consume ptr. If the consume ptr is moved over consume interval, an update subscription state operation is issued to update to ZooKeeper.\n\n{code}\n\nAbstractSubscriptionManager:\n\n            \n            if (subState.setLastConsumeSeqId(consumeSeqId, cfg.getConsumeInterval())) {                updateSubscriptionState(topic, subscriberId, subState, cb, ctx);\n            }\n{code}\n\n2) when move consume ptr, it also changed in-memory subscription state before the subscription state is persisted to ZooKeeper.\n\n{code}\n    public boolean setLastConsumeSeqId(MessageSeqId lastConsumeSeqId, int consumeInterval) {\n        long interval = lastConsumeSeqId.getLocalComponent() - subscriptionState.getMsgId().          getLocalComponent();\n        if (interval <= 0) {\n            return false;\n        }\n\n        // set consume seq id when it is larger\n        this.lastConsumeSeqId = lastConsumeSeqId;\n        if (interval < consumeInterval) {\n            return false;\n        }\n\n        // subscription state will be updated, marked it as clean\n        subscriptionState = SubscriptionState.newBuilder(subscriptionState).                          setMsgId(lastConsumeSeqId).build();\n        return true;\n    }\n{code}\n\n3) MessageConsumedTask runs periodically to delete consumed ledgers. it would use in-memory subscription state to perform such deletion. so if ledger is deleted first and failed to update subscription state. it would cause inconsistent state, when hub restarts and subscriber reconnects, it would use old seq id to start delivering but the ledger has messages with old seq id has been deleted.\n\n{code}\nfor (InMemorySubscriptionState curSubscription : topicSubscriptions.values()) {\n                    if (curSubscription.getSubscriptionState().getMsgId().getLocalComponent() <       minConsumedMessage)\n                        minConsumedMessage = curSubscription.getSubscriptionState().getMsgId().       getLocalComponent();\n                    hasBound = hasBound && curSubscription.getSubscriptionPreferences().              hasMessageBound();\n                }\n{code} \n\nThe fix would be let message consume task only use persistence state to performance deletions only. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-442",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Critical",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-03",
        "status": "Closed",
        "summary": "Failed to deliver messages due to inconsistency between SubscriptionState and LedgerRanges.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Yixue Zhu",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-10-24",
        "description": "On topic loss, InMemorySubscriptionManager currently does not clear top2sub2seq. The intent is to allow readSubscription to get the information there. This introduce dependency outside the class, evidence is that general ReleaseOp has to use a boolean parameter which targets this implementation detail. Further, this prevents Acquire-topic to notify listeners (notifyFirstLocalSubscribe is not called) of first subscription to act appropriately.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-441",
        "labels": [
            "patch"
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Minor",
        "reporter": "Yixue Zhu",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-26",
        "status": "Closed",
        "summary": "InMemorySubscriptionManager should back up top2sub2seq before change it",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            },
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-10-19",
        "description": "We encountered exception as below:\n\n{quote}\n\n2012-10-18 09:27:27,248 - DEBUG [CacheThread:BookkeeperPersistenceManager$RangeScanOp@247] - Issuing a bk read for ledger: L2 from entry-id: 100 to entry-id: 103\n2012-10-18 09:27:27,248 - ERROR [CacheThread:BookkeeperPersistenceManager$RangeScanOp$2@261] - Error while reading from ledger: L2 for topic: TOPIC\norg.apache.bookkeeper.client.BKException$BKReadException\n        at org.apache.bookkeeper.client.BKException.create(BKException.java:48)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp$2.safeReadComplete(BookkeeperPersistenceManager.java:260)\n        at org.apache.hedwig.zookeeper.SafeAsynBKCallback$ReadCallback.readComplete(SafeAsynBKCallback.java:61)\n        at org.apache.bookkeeper.client.LedgerHandle.asyncReadEntries(LedgerHandle.java:380)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.read(BookkeeperPersistenceManager.java:252)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.startReadingFrom(BookkeeperPersistenceManager.java:327)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.runInternal(BookkeeperPersistenceManager.java:217)\n        at org.apache.hedwig.server.common.TopicOpQueuer$SynchronousOp.run(TopicOpQueuer.java:77)\n        at org.apache.hedwig.server.common.TopicOpQueuer.pushAndMaybeRun(TopicOpQueuer.java:105)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager.scanMessages(BookkeeperPersistenceManager.java:336)\n        at org.apache.hedwig.server.persistence.ReadAheadCache$ScanRequestWrapper.performRequest(ReadAheadCache.java:704)\n        at org.apache.hedwig.server.persistence.ReadAheadCache.run(ReadAheadCache.java:291)\n        at java.lang.Thread.run(Thread.java:662)\n\n{quote}\n\ntopic TOPIC has 2 ledgers L1, L2, each ledger has 100 entries.\n\n1) all the 100 entries in L1 has been delivered and consumed.\n2) 100 entries have been wrote to L2 but not delivered.\n3) L1 is deleted since all its entries have been consumed.\n4) hub server shuts down\n5) TOPIC recovered L2 and started delivering from 101.\n\nTOPIC was expected to issue a read [0-3] from L2, but a read [100-103] was issued from the exception log, so no entries would be expected to read from L2 at [100-103].\n\nThe problem of this issue is that we used 0 and 1 for the start of message id and ledger id even we had some consumed ledgers deleted.\n\n{code}\n        void processTopicLedgerRanges(final LedgerRanges ranges, final Version version) {\n            Iterator<LedgerRange> lrIterator = ranges.getRangesList().iterator();\n            TopicInfo topicInfo = new TopicInfo();\n\n            long startOfLedger = 1;\n\n            while (lrIterator.hasNext()) {\n                LedgerRange range = lrIterator.next();\n\n                if (range.hasEndSeqIdIncluded()) {\n                    // this means it was a valid and completely closed ledger\n                    long endOfLedger = range.getEndSeqIdIncluded().getLocalComponent();\n                    topicInfo.ledgerRanges.put(endOfLedger, new InMemoryLedgerRange(range,           startOfLedger));                             startOfLedger = endOfLedger + 1;\n                    continue;\n                }        \n\n                // If it doesn't have a valid end, it must be the last ledger\n                if (lrIterator.hasNext()) {\n                    String msg = \"Ledger-id: \" + range.getLedgerId() + \" for topic: \" + topic.       toStringUtf8()                                            + \" is not the last one but still does not have an end seq-id\";\n                    logger.error(msg);\n                    cb.operationFailed(ctx, new PubSubException.UnexpectedConditionException(msg));\n                    return;                }\n\n                // The last ledger does not have a valid seq-id, lets try to\n                // find it out\n                recoverLastTopicLedgerAndOpenNewOne(range.getLedgerId(), version, topicInfo);\n                return;\n            }\n{code}\n\n{code}\n                            long prevLedgerEnd = topicInfo.ledgerRanges.isEmpty() ? 0 : topicInfo.   ledgerRanges\n                                                 .lastKey();\n                            LedgerRange lr = LedgerRange.newBuilder().setLedgerId(ledgerId)\n                                             .setEndSeqIdIncluded(lastMessage.getMsgId()).build();\n                            topicInfo.ledgerRanges.put(lr.getEndSeqIdIncluded().getLocalComponent(),\n                                    new InMemoryLedgerRange(lr, prevLedgerEnd + 1, lh));\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-439",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-26",
        "status": "Closed",
        "summary": "No more messages delivered after deleted consumed ledgers.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
        ],
        "creationDate": "2012-10-16",
        "description": "Just seen the peice of code in Jouranl#rollLog \n{code}\ntry {\n                    FileOutputStream fos = new FileOutputStream(file);\n                    fos.write(buff);\n                    fos.getChannel().force(true);\n                    fos.close();\n                } catch (IOException e) {\n                    LOG.error(\"Problems writing to \" + file, e);\n                }\n{code}\n\nOn exception It is just logging and continuing.\nEven though FileOutputStream provides finalize implementation and which will clean streams, I don't think it's a good idea to depend on it as it will not be garanteed.\n\ncleaning with more care would avoid this.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-436",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-16",
        "status": "Closed",
        "summary": "Journal#rollLog may leak file handler",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2012-10-15",
        "description": "1) default host might a VIP like name, we could delay resolving default host until necessary. so we could leverage the round-robin mechanism behind default server.\n\n2) we should not fail the process (throwing exception) when the default server isn't reachable temporary. we could fail the request at that time.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-434",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-31",
        "status": "Closed",
        "summary": "[Hedwig CPP Client] Delay resolving default host until necessary.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-10-09",
        "description": "I'm seeing this test hang every so often. To repro:\n{code}\nwhile [ $? = 0 ]; do mvn test -Dtest=TestConcurrentTopicAcquisition; done\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-427",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-23",
        "status": "Closed",
        "summary": "TestConcurrentTopicAcquisition hangs every so often",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-10-09",
        "description": "Bookie id generation (InetAddress.getLocalHost().getHostAddress() + \":\" + port) is scattered all over the place. It would be better to have it centrallized somewhere in a static call.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-425",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-26",
        "status": "Closed",
        "summary": "Cleanup Bookie id generation",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-10-07",
        "description": "I'm seeing the following intermittent failure, when there is a delay in establishing zkclient connection with zkserver. \n{code}\norg.apache.bookkeeper.bookie.BookieException$InvalidCookieException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/INSTANCEID\n\tat org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:329)\n\tat org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:378)\n\tat org.apache.bookkeeper.bookie.BookieInitializationTest.testStartBookieWithoutZKServer(BookieInitializationTest.java:253)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)\nCaused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/INSTANCEID\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:99)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1131)\n\tat org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1160)\n\tat org.apache.bookkeeper.bookie.Bookie.getInstanceId(Bookie.java:346)\n\tat org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:280)\n\t... 11 more\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-424",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-25",
        "status": "Closed",
        "summary": "Bookie start is failing intermittently when zkclient connection delays",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-10-04",
        "description": "In hedwig server, DeliveryThrottle is a little inaccurate as it suggests that the rate is being limited, rather than a outstanding message limit being reached. I think MessageWindowSize is more accurate, and is analogous to windowing in tcp, which this mechanism actually replaces.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-415",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-10",
        "status": "Closed",
        "summary": "Rename DeliveryThrottle to MessageWindowSize",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-10-01",
        "description": "Minor change, SSL_ENABLED is neater IMO.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-413",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-10-10",
        "status": "Closed",
        "summary": "Hedwig C++ client: Rename RUN_AS_SSL_MODE to SSL_ENABLED",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-09-17",
        "description": "When I run the tests of BookKeeper, I found that the test running forever and cannot be finished. The log has the exception that is \"junit.framework.AssertionFailedError: Return code is not OK: -6\". \n\nI thought this issuse might be come from the synchronization mechanism used by the BookieReadWriteTest.\n\nfor example in BookieReadWriteTest.TestReadWriteAsyncSingleClient()\n1. when called the function lh.asyncAddEntry(entry.array(), this ,sync), the call back function is addComplete(int, LedgerHandle, long, Object)\n2. we can see that in addComplete(..) the function will be fail when rc != BKException.Code.OK, and the x.counter++ will not be called never.\n3. we assume that the function addComplete(..) is fail. so, in TestReadWriteAsyncSingleClient(), the while loop enter endless loop because sync.counter < numEntriesToWrite is right forever.\n\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-408",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "liuyang",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "BookieReadWriteTest will enter the endless loop and will not leave out",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2012-09-13",
        "description": "Add deprecation annotation. Add more doc for the SubscriptionOptions versions. Add util methods, to easily create SubscriptionOptions, so that usage is no harder than using the non-SubscriptionOptions versions",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-404",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "Deprecate non-SubscriptionOptions Subscriber Apis",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-09-13",
        "description": "Attached a patch to execute the callback in bk.mainWorkerPool instead of on the zookeeper thread.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-403",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-14",
        "status": "Closed",
        "summary": "ReReadMetadataCb is not executed in the thread responsible for that ledger",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Aniruddha",
        "components": [
        ],
        "creationDate": "2012-09-10",
        "description": "The hedwig client used by the region manager uses default client settings. We should provide a way to make this configurable. \n\nReviewboard : https://reviews.apache.org/r/7118/",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-397",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-26",
        "status": "Closed",
        "summary": "Make the hedwig client in RegionManager configurable.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
        ],
        "creationDate": "2012-09-07",
        "description": "{code}\nimport java.util.concurrent.Future;;\n{code}\n\nshowing here. Simply we can remove one ';'",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-396",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Trivial",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-11",
        "status": "Closed",
        "summary": "Compilation issue in TestClient.java of BenchMark ( showing this in eclipse)",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Stu Hood",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-09-06",
        "description": "hadoop-hdfs-0.23.1 depends on commons-daemon-1.0.3, which has a corrupted pom. Without running artifactory in a loosey-goosey [less restrictive mode|http://wiki.jfrog.org/confluence/display/RT12/Using+Artifactory#UsingArtifactory-OvercomingPathErrors], it will refuse to cache that particular dep:\n{noformat}\nHTTP/1.1 409 The target deployment path 'commons-daemon/commons-daemon/1.0.3/commons-daemon-1.0.3.pom' does not match the POM's expected path prefix 'org/apache/commons/commons-daemon/1.0.3'. Please verify your POM content for correctness and make sure the source path is a valid Maven repository root path.\n{noformat}\n\nSince the bookkeeper-benchmark only uses the HDFS Filesystem and config intefaces, commons-daemon is unnecessary, and can be excluded.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-395",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Stu Hood",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-07",
        "status": "Closed",
        "summary": "HDFS dep transitively depends on a busted pom",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Stu Hood",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2012-09-04",
        "description": "The java hedwig-client misuses ConcurrentMap in various ways.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-392",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Stu Hood",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-13",
        "status": "Closed",
        "summary": "Racey ConcurrentMap usage in java hedwig-client",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Surendra Singh Lilhore",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-09-04",
        "description": "I am trying to upgrade BK from 4.1.0 to 4.2.0, but it will log as \"Directory is current, no need to upgrade” even then it will continue and fail.\nand throwing following exception.\n{code}\n2012-09-03 17:25:12,468 - ERROR - [main:FileSystemUpgrade@229] - Error moving upgraded directories into place /home/BK4.1/bookkeeper1/ledger/upgradeTmp.2433718456734190 -> /home/BK4.1/bookkeeper1/ledger/current\norg.apache.commons.io.FileExistsException: Destination '/home/BK4.1/bookkeeper1/ledger/current' already exists\n        at org.apache.commons.io.FileUtils.moveDirectory(FileUtils.java:2304)\n        at org.apache.bookkeeper.bookie.FileSystemUpgrade.upgrade(FileSystemUpgrade.java:225)\n        at org.apache.bookkeeper.bookie.FileSystemUpgrade.main(FileSystemUpgrade.java:367)\n{code}\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-387",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Surendra Singh Lilhore",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-07",
        "status": "Closed",
        "summary": "BookKeeper Upgrade is not working.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-08-27",
        "description": "Running org.apache.bookkeeper.bookie.BookieJournalTest\nException in thread \"GarbageCollectorThread\" java.lang.NullPointerException\n\tat org.apache.bookkeeper.meta.AbstractZkLedgerManager.asyncGetLedgersInSingleNode(AbstractZkLedgerManager.java:191)\n\tat org.apache.bookkeeper.meta.AbstractZkLedgerManager.getLedgersInSingleNode(AbstractZkLedgerManager.java:268)\n\tat org.apache.bookkeeper.meta.FlatLedgerManager.garbageCollectLedgers(FlatLedgerManager.java:144)\n\tat org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers(GarbageCollectorThread.java:226)\n\nThe exception is found in https://builds.apache.org/job/bookkeeper-trunk/671/console",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-383",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Minor",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-09-07",
        "status": "Closed",
        "summary": "NPE in BookieJournalTest",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-08-25",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-382",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Trivial",
        "reporter": "Brahma Reddy Battula",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-27",
        "status": "Closed",
        "summary": "space missed at concatenations in GarbageCollectorThread logging",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Surendra Singh Lilhore",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-08-25",
        "description": "In ReadLastConfirmedOp class logger name configured LedgerRecoveryOp.class.\n\n{code}\nclass ReadLastConfirmedOp implements ReadEntryCallback {\nstatic final Logger LOG = LoggerFactory.getLogger(LedgerRecoveryOp.class);\n{code}\n\nIt should be ReadLastConfirmedOp.class.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-381",
        "labels": [
        ],
        "priority": "Trivial",
        "reporter": "Surendra Singh Lilhore",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-27",
        "status": "Closed",
        "summary": "ReadLastConfirmedOp's Logger class name is wrong",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-08-23",
        "description": "Image folder has to be under docs directory for BookKeeper project.\nWhen I was validating the links, I got the error as file missing.\nWhen I went to the project and checked, the image was not displayed for BookKeeper Overview.\n",
        "issueType": "Bug",
        "key": "BOOKKEEPER-377",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Kiran BC",
        "resolution": "Fixed",
        "resolutionDate": "2017-10-09",
        "status": "Resolved",
        "summary": "image folder under docs directory is missing from BookKeeper project",
        "updatedDate": "2017-10-09"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-08-19",
        "description": "We observed the following behavior when some of the bookkeeper jobs were abruptly restarted a few times.\n\nWhen the bookies and hedwig hubs were restarted, the hubs tried to query the entries for a particular topic, but an exception was always returned and the reads never completed successfully. \n\nEventually, we found that the ledger from which entries couldn't be read actually had 2 index files on disk. We use multiple ledger directories. The first file was in ledger directory number 2 and had a size of 0. The other file which actually contained all the data was in directory 4. \n\nIt doesn't seem right that one ledger has 2 index files. Also, the findIndexFile() function returns the first found ledger index file. Should this be patched to \n1) Throw an exception if more than one file exists (if that's the expected behavior)\n2) Do something else?\n\nAny thoughts?\n\nEdit: \nFor another ledger, there were 2 files again, created within a minute of each other, on separate directories and with the same size. \n\nI ran bin/bookie shell ledger -m <ledger_number>. For the most recent file, all entries were N/A, but the other file had all the actual entries. \n\nSo, returning the most recent file might not be the best approach? Should we perhaps check all files?",
        "issueType": "Bug",
        "key": "BOOKKEEPER-374",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-20",
        "status": "Resolved",
        "summary": "Bookkeeper doesn't search all ledger directories for index files.",
        "updatedDate": "2012-08-20"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "nijel",
        "components": [
        ],
        "creationDate": "2012-08-17",
        "description": "Created a patch to check service name in start/stop script mentioned in BOOKKEEPER-296.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-372",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-17",
        "status": "Closed",
        "summary": "Check service name in bookie start/stop script.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Aniruddha",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2012-08-17",
        "description": "The hedwig client was connected to a remote region hub that restarted resulting in the channel getting disconnected. \n\n\n2012-08-15 17:47:42,443 - ERROR - [pool-20-thread-1:TerminateJVMExceptionHandler@28] - Uncaught exception in thread pool-20-thread-1\njava.lang.NullPointerException\n        at org.apache.hedwig.client.netty.HedwigClientImpl.getResponseHandlerFromChannel(HedwigClientImpl.java:323)\n        at org.apache.hedwig.client.handlers.MessageConsumeCallback.operationFinished(MessageConsumeCallback.java:75)\n        at org.apache.hedwig.client.handlers.MessageConsumeCallback.operationFinished(MessageConsumeCallback.java:41)\n        at org.apache.hedwig.server.regions.RegionManager$1$1$1.operationFinished(RegionManager.java:208)\n        at org.apache.hedwig.server.regions.RegionManager$1$1$1.operationFinished(RegionManager.java:202)\n        at org.apache.hedwig.server.persistence.ReadAheadCache$PersistCallback.operationFinished(ReadAheadCache.java:194)\n        at org.apache.hedwig.server.persistence.ReadAheadCache$PersistCallback.operationFinished(ReadAheadCache.java:171)\n        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$PersistOp$1.safeAddComplete(BookkeeperPersistenceManager.java:548)\n        at org.apache.hedwig.zookeeper.SafeAsynBKCallback$AddCallback.addComplete(SafeAsynBKCallback.java:93)\n        at org.apache.bookkeeper.client.PendingAddOp.submitCallback(PendingAddOp.java:165)\n        at org.apache.bookkeeper.client.LedgerHandle.sendAddSuccessCallbacks(LedgerHandle.java:643)\n        at org.apache.bookkeeper.client.PendingAddOp.writeComplete(PendingAddOp.java:159)\n        at org.apache.bookkeeper.proto.PerChannelBookieClient.handleAddResponse(PerChannelBookieClient.java:577)\n        at org.apache.bookkeeper.proto.PerChannelBookieClient$7.safeRun(PerChannelBookieClient.java:525)\n        at org.apache.bookkeeper.util.SafeRunnable.run(SafeRunnable.java:31)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)\n\n\nAt 2012-08-15 17:47:42,443, the channel was disconnected as well. \n\nI believe the following code in the MessageConsumeCallback is causing this problem. \n\n Channel topicSubscriberChannel = client.getSubscriber().getChannelForTopic(topicSubscriber);\n        HedwigClientImpl.getResponseHandlerFromChannel(topicSubscriberChannel).getSubscribeResponseHandler()\n        .messageConsumed(messageConsumeData.msg);\n\nThe channel was retrieved without checking if it was closed and then getPipeline().getLast() was called which returned a null value resulting in a NPE. Moreover, we need to check if the returned Response handler is not null because there is a race here if channel.close() is called after we retrieve the channel and before we call messageConsumed(). \n\nI guess the same applies for other instances where we use this.\nDoes the above explanation seem right? \n\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-371",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-28",
        "status": "Closed",
        "summary": "NPE in hedwig hub client causes hedwig hub to shut down.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-08-14",
        "description": "As discussed in BOOKKEEPER-355, current fix to handle the below issue is not correct. Need to find out new solution\nIf some bookies of a quorum gone forever, some bookies of this quorum are still alive but doesn't have that entry (NoSuchEntry or NoSuchLedger), then the ledger doesn't have any evidence to recovery/close it.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-365",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "Ledger will never recover if one of the quorum bookie is down forever and others dont have entry",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Aniruddha",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-08-14",
        "description": "When a new hub is added to an already existing hedwig cluster, that hub should pick up some of the topics. Currently the mechanism hedwig provides is to configure the time for which a topic is retained. A better approach might be to run a re-balancer thread that periodically checks if topics are distributed evenly among hubs and if not, releases some topics to balance the load. \n\nhttps://reviews.apache.org/r/6700/\nThere is a race condition while updating load as mentioned in the comments and that is not handled in this review.",
        "fixedVersion": {
            "id": 12323267,
            "name": "4.3.0",
            "releaseDate": "2014-02-02"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-363",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2014-03-07",
        "status": "Resolved",
        "summary": "Re-distributing topics among newly added hubs.",
        "updatedDate": "2014-03-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            },
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-08-08",
        "description": "Scenario:\n------------\n1. Ledger is created with ensemble and quorum size as 2, written with one entry\n2. Now first bookie is in the ensemble is made down.\n3. Another client fence and trying to recover the same ledger\n4. During this time ensemble change will happen and new bookie will be added. But this bookie is not able to connect.\n5. This recovery will fail.\n7. Now previously added bookie came up.\n8. Another client trying to recover the same ledger.\n9. Since new bookie is first in the ensemble, doRecoveryRead() is reading from that bookie and getting NoSuchLedgerException and closing the ledger with -1\n\ni.e. Marking the ledger as empty, even though first client had successfully written one entry.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-355",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-07",
        "status": "Closed",
        "summary": "Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Kiran BC",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-08-07",
        "description": "Need to modify the bookkeeper start script and need to add content for bookkeeper stop.\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-354",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Kiran BC",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-21",
        "status": "Closed",
        "summary": "[BOOKKEEPER-296] [Documentation] Modify the bookkeeper start script and document the bookkeeper stop command in bookkeeperConfig.xml",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-07-26",
        "description": "TestServers failed when running whole test. Because TestServers uses ServerStats instance directly. ServerStats is a static instance, which will be used across whole testing. so the numSuccessOps would not be zero, the assertion would fail.\n\nSame problem occurs in TestBKStats. TestBKStats doesn't fail because statistics is turned off by default. The value happened to be zero. But it still is not a good idea to use static instance during testing.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-352",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-27",
        "status": "Closed",
        "summary": "Should not use static ServerStats/BKStats instance in TestServerStats/TestBKStats",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
        ],
        "creationDate": "2012-07-23",
        "description": "There are cases where LedgerHandle.asyncAddEntry() fails with a RuntimeException that is thrown by executor.submit(). \n\nIt should better invoke the callback with a failure result.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-351",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-03",
        "status": "Closed",
        "summary": "asyncAddEntry should not throw an exception",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-07-23",
        "description": "I have seen this on restarting the same bookies from same JVM( in one of mey testcase which I was writing for autoRecovery work), i.e, all channels are not getting closed.\nWhen we restart the same bookie, there are 0.log channel will be a older channel. Since the current code cares about only current logChannel. So, we are not releasing the older channels on EntryLogger shutdown. ",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-349",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-26",
        "status": "Closed",
        "summary": "Entry logger should close all the chennels which are there in Map, instead of closing only current channel.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-07-16",
        "description": "failed to register jmx beans for hedwig running test cases.\n\nthe exception is as below:\n\n{code}\n2012-07-16 22:13:54,849 - WARN  - [Thread-134:ReadAheadCache@729] - Failed to register readahead cache with JMX\njavax.management.InstanceAlreadyExistsException: org.apache.HedwigServer:name0=ReadAheadCache\n        at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)\n        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)\n        at org.apache.zookeeper.jmx.MBeanRegistry.register(MBeanRegistry.java:98)\n        at org.apache.hedwig.server.persistence.ReadAheadCache.registerJMX(ReadAheadCache.java:727)\n        at org.apache.hedwig.server.netty.PubSubServer.registerJMX(PubSubServer.java:300)\n        at org.apache.hedwig.server.netty.PubSubServer$3.run(PubSubServer.java:395)\n        at java.lang.Thread.run(Thread.java:680)\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-343",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-03",
        "status": "Closed",
        "summary": "Failed to register hedwig JMX beans in test cases",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-07-12",
        "description": "Passing null as a parameter into a method makes the intention abiguous. It would be better to pass in defined constants, such as Version.NEW & Version.ANY. This makes the code clearer and more readable.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-338",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-17",
        "status": "Closed",
        "summary": "Create Version.NEW and Version.ANY static instances of Version so that were not passing around nulls",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
        ],
        "creationDate": "2012-07-11",
        "description": "Scenario:\n========\nStart Five BK's\nWrite ledger's with ensemble three and quroum size=2\nwhile write inprogress down two bookies(Bookies should be in ensemble)\n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-337",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Brahma Reddy Battula",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-28",
        "status": "Closed",
        "summary": "Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-07-10",
        "description": "Scenario:\n\n1) Start three bookies. Create ledger with ensemblesize=3, quorumsize=2\n2) Add 100 entries to this ledger\n3) Make first bookie down and read the entries from 0-99\n\nOutput: Each entry is going to fetch from the failed bookie and is waiting for the bookie connection timeout, only after failure going to next bookie.\nThis is affecting the read entry performance.\n\nImpact: Namenode switching time will be affected by adding this failed bookie readTimeOut also.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-336",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Brahma Reddy Battula",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-13",
        "status": "Closed",
        "summary": "bookie readEntries is taking more time if the ensemble has failed bookie(s)",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-07-09",
        "description": "Need same changes in hedwig server as what did in bookkeeper as BOOKKEEPER-327.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-330",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-26",
        "status": "Closed",
        "summary": "System.currentTimeMillis usage in Hedwig",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-07-09",
        "description": "as what we did in BOOKKEEPER-296, it would be better to provide similar script to start/stop hub server.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-329",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-11",
        "status": "Closed",
        "summary": "provide stop scripts for hub server",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
        ],
        "creationDate": "2012-07-05",
        "description": "The following exception occured in the bookie statistics logic due to the System time changes. In our bookie cluster its running a periodic syncup scripts just to unify the SystemTime in all the machines. This is causing the problem and resulting ArrayIndexOutOfBoundException.\n{code}\nException in thread \"BookieJournal-3181\" java.lang.ArrayIndexOutOfBoundsException: -423\nat org.apache.bookkeeper.proto.BKStats$OpStats.updateLatency(BKStats.java:126)\nat org.apache.bookkeeper.proto.BookieServer.writeComplete(BookieServer.java:655)\nat org.apache.bookkeeper.bookie.Journal.run(Journal.java:507)\n{code}\n\nThis jira is raised to discuss whether to use ??System.nanoTime()?? instead of ??System.currentTimeMillis()??",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-327",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Minor",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-24",
        "status": "Closed",
        "summary": "System.currentTimeMillis usage in BookKeeper",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
        ],
        "creationDate": "2012-07-04",
        "description": "Deadlock found during ledger recovery. please find the attached thread dump.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-326",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Blocker",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-13",
        "status": "Closed",
        "summary": "DeadLock during ledger recovery ",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-07-03",
        "description": "Fails when running in a loop for about 40 minutes. Failure is a ConcurrentModificationException\n\n{code}\n  <testcase time=\"3.018\" classname=\"org.apache.bookkeeper.test.LedgerCreateDeleteTest\" name=\"testCreateDeleteLedgers\">\n    <error type=\"java.util.ConcurrentModificationException\">java.util.ConcurrentModificationException\n\tat java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)\n\tat java.util.HashMap$EntryIterator.next(HashMap.java:834)\n\tat java.util.HashMap$EntryIterator.next(HashMap.java:832)\n\tat org.apache.bookkeeper.bookie.LedgerCacheImpl.close(LedgerCacheImpl.java:781)\n\tat org.apache.bookkeeper.bookie.InterleavedLedgerStorage.shutdown(InterleavedLedgerStorage.java:73)\n\tat org.apache.bookkeeper.bookie.Bookie.shutdown(Bookie.java:644)\n\tat org.apache.bookkeeper.bookie.Bookie.shutdown(Bookie.java:630)\n\tat org.apache.bookkeeper.proto.BookieServer.shutdown(BookieServer.java:110)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.stopBKCluster(BookKeeperClusterTestCase.java:146)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.tearDown(BookKeeperClusterTestCase.java:94)\n\tat junit.framework.TestCase.runBare(TestCase.java:140)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n{code}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-324",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-04",
        "status": "Closed",
        "summary": "Flakeyness in LedgerCreateDeleteTest",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-27",
        "description": "We need to exclude the protobuf generated classes from findbugs. Also, the generated sources should be excluded from the apache-rat:check.\n\nAlso, there's one other findbug in LedgerMetadata",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-322",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-28",
        "status": "Closed",
        "summary": "New protobufs generates findbugs errors",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12323840,
                "name": "4.2.1",
                "releaseDate": "2013-03-27"
            }
        ],
        "assignee": "Vinayakumar B",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-06-23",
        "description": "shutdown(..) call from inside Bookie#run() is not shutting down the server.\n\nBookie thread is waiting to join itself.\n\nShutdown called from here\n{code} if (!shuttingdown) {\n            // some error found in journal thread and it quits\n            // following add operations to it would hang unit client timeout\n            // so we should let bookie server exists\n            LOG.error(\"Journal manager quits unexpectedly.\");\n            shutdown(ExitCode.BOOKIE_EXCEPTION);\n        }{code}\n\n\nbookie thread is waiting at *this.join()* in below code\n{code}// Shutdown the ZK client\n                if(zk != null) zk.close();\n                // Shutdown journal\n                journal.shutdown();\n                this.join();\n                syncThread.shutdown();\n\n                // close Ledger Manager{code}",
        "fixedVersion": {
            "id": 12324601,
            "name": "4.2.2",
            "releaseDate": "2013-10-10"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-313",
        "labels": [
        ],
        "openingVersion": {
            "id": 12323840,
            "name": "4.2.1",
            "releaseDate": "2013-03-27"
        },
        "priority": "Major",
        "reporter": "Vinayakumar B",
        "resolution": "Fixed",
        "resolutionDate": "2013-06-21",
        "status": "Resolved",
        "summary": "Bookkeeper shutdown call from Bookie thread is not shutting down server",
        "updatedDate": "2013-06-24"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-21",
        "description": "One is an empty store. The other is about synchronized access to the journal. Easy fixes.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-307",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-27",
        "status": "Closed",
        "summary": "BookieShell introduces 4 findbugs warnings",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-21",
        "description": "http://code.google.com/p/googletest/\n\nIt looks a lot nicer to run tests with than cppunit which we are using now.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-306",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-16",
        "status": "Closed",
        "summary": "Change C++ client to use gtest for testing",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-20",
        "description": "Google protobufs is a library for serializing and deserializing data. It elegantly handles the cases where new data is added to a data format. This is useful in the case of something like LedgerMetadata, which may change over time. However, at the moment, whenever we make a change to the LedgerMetadata serialization format we have to break compatibility with old clients. By using protobufs, even if we add something to the format, old clients should be able to read the ledgers. \n\nWe should also change our protocols to use protobufs for the same reason, but this should be done in 4.3.0.\n\nhttp://code.google.com/p/protobuf/",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-303",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-27",
        "status": "Closed",
        "summary": "LedgerMetadata should serialized using protobufs",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-06-20",
        "description": "This issue introduce when fixing BOOKKEEPER-215.\n\nsuppose topic T has four messages, message 1 is in ledger 1 while message 2~4\nare in ledger 2. Hub server issue scan (1, 2) and scan (3, 4).\n\nIf hub server works correctly, it just tried to read entry 0 in ledger 1 and\nentry 0 in ledger 2 during scan (1,2), while reading entry 1, 2 in ledger 2\nduring scan (3,4).\n\nBut unfortunately, after fixing BOOKKEEPER-215, scan (1,2) would read 0 in\nledger 1 and read 0, 1 in ledger 2. so reading entry 1 of ledger 2 would be\nissued concurrently in different scans and one reading would fail without any callback (this issue is BOOKKEEPER-49).\n\nThen the systems would be blocked there wait for the response of reading 1 of\nledger 2 and no messages would be delivered.\n\n\nTo fix this issue, two thing would be done.\n\n1) fix scan issue in hub server to avoid overlapping scanning.\n2) fix read issue in bookkeeper client.\n\nfixing 1) could resolve this issue, but it would be better to fix 2) also. it should be in jira BOOKKEEPER-49.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-302",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-28",
        "status": "Closed",
        "summary": "No more messages delivered when hub server scans messages over two ledgers.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-14",
        "description": "Bookkeeper doesn't work with IPv6, but if it's enabled, java will try to use it. We get around this by setting the java.net.preferIPv4Stack in the startup scripts but we don't set it for the tests.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-298",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-18",
        "status": "Closed",
        "summary": "We run with preferIPv4Stack in the scripts but not in the tests",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "nijel",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-06-14",
        "description": "Currently there is no command to stop bookie in 4.0.0..It's better to provide stop command for bookie.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-296",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Brahma Reddy Battula",
        "resolution": "Fixed",
        "resolutionDate": "2012-08-17",
        "status": "Closed",
        "summary": "It's better provide stop script for bookie",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-06-13",
        "description": "Not able to start the bookkeeper before the ZK session timeout.\n\nHere i killed the bookie and started again.\n\n{noformat}\n2012-06-12 20:00:25,220 - INFO  [main:LedgerCache@65] - openFileLimit is 900, pageSize is 8192, pageLimit is 456781\n2012-06-12 20:00:25,238 - ERROR [main:Bookie@453] - ZK exception registering ephemeral Znode for Bookie!\norg.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /ledgers/available/10.18.40.216:3181\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:119)\n\tat org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n\tat org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:778)\n\tat org.apache.bookkeeper.bookie.Bookie.registerBookie(Bookie.java:450)\n\tat org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:348)\n\tat org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:64)\n\tat org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:249)\n{noformat}",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-294",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Gopinathan A",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-05",
        "status": "Closed",
        "summary": "Not able to start the bookkeeper before the ZK session timeout.",
        "updatedDate": "2013-09-11"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-11",
        "description": "At the moment, backward compatibility between 4.1.0 and 4.0.0 can only be tested manually. This JIRA is the set up the code base, so we can validate behaviour between versions automatically, and spot if a change breaks functionallity between versions.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-292",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-19",
        "status": "Closed",
        "summary": "Test backward compatibility automatically between versions.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Flavio Paiva Junqueira",
        "components": [
        ],
        "creationDate": "2012-06-11",
        "description": "It should use slf4j.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-291",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-12-03",
        "status": "Closed",
        "summary": "BKMBeanRegistry uses log4j directly",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-07",
        "description": "NOTICE files only have 2011. They should have 2012 also.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-288",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-07",
        "status": "Closed",
        "summary": "NOTICE files don't have the correct year",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-06-05",
        "description": "2012-06-05 16:24:29,596 - WARN  [NIOServerFactory-3181:NIOServerFactory@128] - Exception in server socket loop: /0.0.0.0\njava.util.NoSuchElementException\n        at java.util.LinkedList.getFirst(LinkedList.java:109)\n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.grabCleanPage(LedgerCacheImpl.java:478)\n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.grabLedgerEntryPage(LedgerCacheImpl.java:169)\n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.putEntryOffset(LedgerCacheImpl.java:199)\n        at org.apache.bookkeeper.bookie.InterleavedLedgerStorage.addEntry(InterleavedLedgerStorage.java:109)\n        at org.apache.bookkeeper.bookie.LedgerDescriptorImpl.addEntry(LedgerDescriptorImpl.java:81)\n        at org.apache.bookkeeper.bookie.Bookie.addEntryInternal(Bookie.java:656)\n        at org.apache.bookkeeper.bookie.Bookie.addEntry(Bookie.java:691)\n        at org.apache.bookkeeper.proto.BookieServer.processPacket(BookieServer.java:368)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.readRequest(NIOServerFactory.java:310)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.doIO(NIOServerFactory.java:208)\n        at org.apache.bookkeeper.proto.NIOServerFactory.run(NIOServerFactory.java:123)\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-287",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-06",
        "status": "Closed",
        "summary": "NoSuchElementException in LedgerCacheImpl",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-04",
        "description": "I'm getting the following warning when building the project:\n\n{noformat}\n:hedwig-server fpj$ mvn clean\n[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for org.apache.bookkeeper:hedwig-server:jar:4.2.0-SNAPSHOT\n[WARNING] 'build.plugins.plugin.version' for org.codehaus.mojo:findbugs-maven-plugin is missing. @ line 140, column 15\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n{noformat}\n\nNote that this is only for hedwig-server.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-286",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-05",
        "status": "Closed",
        "summary": "Compilation warning",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-06-04",
        "description": "{code}\n2012-06-05 01:33:46,366 - ERROR - [main-EventThread:TerminateJVMExceptionHandler@28] - Uncaught exception in thread main-EventThread\njava.lang.NullPointerException\n        at org.apache.hedwig.server.subscriptions.AbstractSubscriptionManager.updateMessageBound(AbstractSubscriptionManager.java:457)\n        at org.apache.hedwig.server.subscriptions.AbstractSubscriptionManager$AcquireOp$1.operationFinished(AbstractSubscriptionManager.java:207)\n        at org.apache.hedwig.server.subscriptions.AbstractSubscriptionManager$AcquireOp$1.operationFinished(AbstractSubscriptionManager.java:157)\n        at org.apache.hedwig.server.meta.ZkMetadataManager$7.safeProcessResult(ZkMetadataManager.java:352)\n        at org.apache.hedwig.zookeeper.SafeAsyncZKCallback$ChildrenCallback.processResult(SafeAsyncZKCallback.java:66)\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:594)\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497)\n{code}\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-285",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-05",
        "status": "Closed",
        "summary": "TestZkSubscriptionManager quits due to NPE, so other tests are not run in hedwig server.",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-06-01",
        "description": "I have started the ZK cluster and when tries to create a BookKeeper client from my application, it is throwing following ZooKeeper ConnectionLossException and is exitting.\n\n\n\n12/06/01 11:44:31 WARN client.ZooKeeperSaslClient: SecurityException: java.lang.SecurityException: Unable to locate a login configuration occurred when trying to find JAAS configuration.\n12/06/01 11:44:31 INFO client.ZooKeeperSaslClient: Client will not SASL-authenticate because the default JAAS configuration section 'Client' could not be found. If you are not using SASL, you may ignore this. On the other hand, if you expected SASL to work, please fix your JAAS configuration.\n12/06/01 11:44:31 INFO zookeeper.ClientCnxn: Client session timed out, have not heard from server in 4540ms for sessionid 0x0, closing socket connection and attempting reconnect\n12/06/01 11:44:32 INFO zookeeper.ClientCnxn: Opening socket connection to server /10.18.40.91:2182\nException in thread \"main\" org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss\n       at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)\n       at org.apache.bookkeeper.client.BookieWatcher.readBookiesBlocking(BookieWatcher.java:151)\n       at org.apache.bookkeeper.client.BookKeeper.<init>(BookKeeper.java:139)\n       at BKClient1.main(BKClient1.java:40)\n12/06/01 11:44:36 WARN client.ZooKeeperSaslClient: SecurityException: java.lang.SecurityException: Unable to locate a login configuration occurred when trying to find JAAS configuration.\n\n\n\nWhen analyzed more, the root cause is:\n\nBookKeeper.java:\n--------------------\nIn the constructor of BookKeeper, immediately after creating the ZK client , it is going to bookieWatcher.readBookiesBlocking() for available bookies from ZK server before reaching SyncConnected event.\n\nI think, we would properly use the existing countdown latch and wait till ZooKeeper client connection establishment before continue reading Bookies.\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-281",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-05",
        "status": "Closed",
        "summary": "BKClient is failing when zkclient connection delays",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
            {
                "id": 12320244,
                "name": "4.2.0",
                "releaseDate": "2013-01-19"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-05-31",
        "description": "LedgerHandle.asyncAddEntry callback provides the entryId of the newly added entry, but the synchronous version return void. \n",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-280",
        "labels": [
        ],
        "openingVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-29",
        "status": "Closed",
        "summary": "LedgerHandle.addEntry() should return an entryId",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-05-31",
        "description": "LocalBookKeeper is initializing the zkclient and immediately trying to create \"/ledgers\" and \"/ledgers/available\" znodes without waiting for the ZooKeeper SyncConnected state. The client operation should be guarded with ZKConnectionWatcher.\n\nLocalBookKeeper.java\n{noformat}\nzkc = new ZooKeeper(\"127.0.0.1\", ZooKeeperDefaultPort, new emptyWatcher());\n/*\tUser for testing purposes, void */\nstatic class emptyWatcher implements Watcher {\npublic void process(WatchedEvent event) {}\n}\n{noformat}\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-279",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-05",
        "status": "Closed",
        "summary": "LocalBookKeeper is failing intermittently due to zkclient connection establishment delay",
        "updatedDate": "2013-01-14"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-05-30",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-274",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Minor",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-06-12",
        "status": "Closed",
        "summary": "Hedwig cpp client library should not link to cppunit which is just used for test.",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Matteo Merli",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-05-30",
        "description": "Deleting a non-existing ledger should silently succeed. \n\nCurrent behavior is to raise a ZKException, but it's not possible to know whether there was some error or the ledger does not exists anymore. \n\nThis scenario will happen when a previous deleteLedger() call succeeded but the client crashed before updating its own ledger list.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-273",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Minor",
        "reporter": "Matteo Merli",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-30",
        "status": "Closed",
        "summary": "LedgerHandle.deleteLedger() should be idempotent",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Aniruddha",
        "components": [
            "bookkeeper-client",
            "bookkeeper-server"
        ],
        "creationDate": "2012-05-16",
        "description": "Currently the ZK ledger root path is not picked up from the config file (It is hardcoded). This patch fixes this. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-263",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-24",
        "status": "Closed",
        "summary": "ZK ledgers root path is hard coded",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-05-15",
        "description": "We should define a constant for -1, as we use it all over the place to signify an invalid entry id. We should call it INVALID_ENTRY_ID or NO_ENTRY or something to the same affect.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-260",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-25",
        "status": "Closed",
        "summary": "Define constant for -1 (invalid entry id)",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-05-14",
        "description": "{noformat}\n-------------------------------------------------------------------------------\nTest set: org.apache.bookkeeper.bookie.CompactionTest\n-------------------------------------------------------------------------------\nTests run: 5, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 32.557 sec <<< FAILURE!\ntestCompactionSmallEntryLogs(org.apache.bookkeeper.bookie.CompactionTest)  Time elapsed: 6.507 sec  <<< ERROR!\norg.apache.bookkeeper.client.BKException$BKBookieHandleNotAvailableException\n        at org.apache.bookkeeper.client.BKException.create(BKException.java:62)\n        at org.apache.bookkeeper.client.LedgerHandle.readEntries(LedgerHandle.java:347)\n        at org.apache.bookkeeper.bookie.CompactionTest.verifyLedger(CompactionTest.java:128)\n        at org.apache.bookkeeper.bookie.CompactionTest.testCompactionSmallEntryLogs(CompactionTest.java:317)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at junit.framework.TestCase.runTest(TestCase.java:168)\n        at junit.framework.TestCase.runBare(TestCase.java:134)\n        at junit.framework.TestResult$1.protect(TestResult.java:110)\n        at junit.framework.TestResult.runProtected(TestResult.java:128)\n        at junit.framework.TestResult.run(TestResult.java:113)\n        at junit.framework.TestCase.run(TestCase.java:124)\n        at junit.framework.TestSuite.runTest(TestSuite.java:232)\n        at junit.framework.TestSuite.run(TestSuite.java:227)\n        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)\n        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n        at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)\n        at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:78)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)\n\n{noformat}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-258",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-26",
        "status": "Closed",
        "summary": "CompactionTest failed",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-05-09",
        "description": "TestLocalDBPersistenceManagerBlackBox sometimes fails[1]. As does TestBookKeeperPersistenceManagerWhiteBox[2].\n\n[1] https://builds.apache.org/job/bookkeeper-trunk/481/\n[2] https://builds.apache.org/job/bookkeeper-trunk/498/",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-245",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-10",
        "status": "Closed",
        "summary": "Intermittent failures in PersistanceManager tests",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-05-08",
        "description": "Scenario : \n1. Start three zookeeper cluster.\n2. start three bookKeeper.\n3. shutdown zookeeper server where bookkeeper has connected.\n\nExpected Result:\nbookkeeper should be able to connect other zookeeper\n\nActual Result :\nAll three bookkeepers retry to connect zookeeper node which has been shutdown.\n\n\n\nBookKeeper log for Retry :\n\n{noformat} \n2012-04-25 13:35:15,319 - WARN  [main-EventThread:Bookie$2@456] - ZK client has been disconnected to the ZK server!\n2012-04-25 13:35:17,194 - INFO  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@933] - Opening socket connection to server HOST-10-18-40-91/10.18.40.91:2181\n2012-04-25 13:35:17,196 - WARN  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@1063] - Session 0x136e87b50ce0002 for server null, unexpected error, closing socket connection and attempting reconnect\njava.net.ConnectException: Connection refused\n\tat sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n\tat sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:264)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1041)\n2012-04-25 13:35:19,125 - INFO  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@933] - Opening socket connection to server HOST-10-18-40-91/10.18.40.91:2181\n2012-04-25 13:35:19,126 - WARN  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@1063] - Session 0x136e87b50ce0002 for server null, unexpected error, closing socket connection and attempting reconnect\njava.net.ConnectException: Connection refused\n\tat sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n\tat sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:264)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1041)\n2012-04-25 13:35:20,276 - INFO  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@933] - Opening socket connection to server HOST-10-18-40-91/10.18.40.91:2181\n2012-04-25 13:35:20,277 - WARN  [main-SendThread(HOST-10-18-40-91:2181):ClientCnxn$SendThread@1063] - Session 0x136e87b50ce0002 for server null, unexpected error, closing socket connection and attempting reconnect\njava.net.ConnectException: Connection refused\n\tat sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n\tat sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:264)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1041)\n\n{noformat} ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-242",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Blocker",
        "reporter": "Surendra Singh Lilhore",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-09",
        "status": "Closed",
        "summary": "Bookkeeper not able to connect other zookeeper when shutdown the zookeeper server where the BK has connected.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-05-03",
        "description": "EntryLogger flush syncs on the wrong object, which really hurts performance.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-235",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-09",
        "status": "Closed",
        "summary": "Bad syncing in entrylogger degrades performance for many concurrent ledgers",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-05-03",
        "description": "I think, Entry log should check the exitance of directories, before going to get the last Log entries. Because, listFiles will retunr null on non existant directories or any IO Errors. We have to add the check for directory existnace check and null checks in side getLastLogID api in EntryLogger.\n\nWe may need to handle in LedgerCacheImpl also.\n\nDo we need to add them in bad disks list? and others will refer this list before they use the dirs.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-234",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-09",
        "status": "Closed",
        "summary": "EntryLogger will throw NPE, if any dir does not exist or IO Errors.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-04-29",
        "description": "Even tough i corrected the problem of BOOKKEEPER-232, still this tests failing with the similar problem.\nBut the cause would be different. Let me dig into it.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-233",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-07-26",
        "status": "Resolved",
        "summary": "BookieFailureTest#testBookieRecovery  failing",
        "updatedDate": "2012-07-26"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-04-29",
        "description": "\nTrace:\njava.io.IOException: Unable to delete file: C:\\Users\\uma\\AppData\\Local\\Temp\\bookie7010257841258186070test\\current\\136fcc63892.txn\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1919)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1910)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.stopBKCluster(BookKeeperClusterTestCase.java:150)\n\tat org.apache.bookkeeper.test.BookKeeperClusterTestCase.tearDown(BookKeeperClusterTestCase.java:94)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n\t",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-232",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Blocker",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-07",
        "status": "Closed",
        "summary": "AsyncBK tests failing ",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Uma Maheswara Rao G",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-04-28",
        "description": "Trace:\njava.io.IOException: Unable to delete file: C:\\Users\\uma\\AppData\\Local\\Temp\\zookeeper5673563636069246854test\\version-2\\log.1\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1919)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:1910)\n\tat org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1399)\n\tat org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1331)\n\tat org.apache.bookkeeper.test.ZooKeeperUtil.killServer(ZooKeeperUtil.java:131)\n\tat org.apache.bookkeeper.bookie.CookieTest.tearDownZooKeeper(CookieTest.java:59)\n\nWhen I ran the tests, I found the above trace and all tests were failing.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-231",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Blocker",
        "reporter": "Uma Maheswara Rao G",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-28",
        "status": "Closed",
        "summary": " ZKUtil.killServer not closing the FileTxnSnapLog from ZK.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-04-26",
        "description": "after BOOKKEEPER-188 is applied, extractMetaFromEntryLogs is moved from EntryLogger to GarbageCollectorThread with some changed.\n\nBefore BOOKKEEPER-188 is applied,  we just add the entryLogMeta to entryLogMetaMap only when we could extract the entry log file. If a log file is garbage collected, its entryLogMeta would not be put in the map.\n\n{code}\n-    protected Map<Long, EntryLogMetadata> extractMetaFromEntryLogs(Map<Long, EntryLogMetadata> entryLogMetaMap) throws IOException {\n-        // Extract it for every entry log except for the current one.\n-        // Entry Log ID's are just a long value that starts at 0 and increments\n-        // by 1 when the log fills up and we roll to a new one.\n-        long curLogId = logId;\n-        for (long entryLogId = 0; entryLogId < curLogId; entryLogId++) {\n-            // Comb the current entry log file if it has not already been extracted.\n-            if (entryLogMetaMap.containsKey(entryLogId)) {\n-                continue;\n-            }\n-            LOG.info(\"Extracting entry log meta from entryLogId: \" + entryLogId);\n-            EntryLogMetadata entryLogMeta = new EntryLogMetadata(entryLogId);\n-            ExtractionScanner scanner = new ExtractionScanner(entryLogMeta);\n-            // Read through the entry log file and extract the entry log meta\n-            try {\n-                scanEntryLog(entryLogId, scanner);\n-                LOG.info(\"Retrieved entry log meta data entryLogId: \" + entryLogId + \", meta: \" + entryLogMeta);\n-                entryLogMetaMap.put(entryLogId, entryLogMeta);\n-            } catch(IOException e) {\n-              LOG.warn(\"Premature exception when processing \" + entryLogId +\n-                       \"recovery will take care of the problem\", e);\n-            }\n-\n-        }\n-        return entryLogMetaMap;\n-    }\n{code}\n\nBut after BOOKKEEPER-188 is applied,  an empty entryLogMeta would be put into entryLogMetaMap for those deleted entry log files. So GarbageCollectorThread would gc those deleted entry log files again. Then there is lots of such kind of error messages, these are noise error message but doesn't affect the logic.\n\n{code}\n+    protected Map<Long, EntryLogMetadata> extractMetaFromEntryLogs(Map<Long, EntryLogMetadata> entryLogMetaMap)\n+            throws IOException {\n+        // Extract it for every entry log except for the current one.\n+        // Entry Log ID's are just a long value that starts at 0 and increments\n+        // by 1 when the log fills up and we roll to a new one.\n+        long curLogId = entryLogger.logId;\n+        for (long entryLogId = 0; entryLogId < curLogId; entryLogId++) {\n+            // Comb the current entry log file if it has not already been extracted.\n+            if (entryLogMetaMap.containsKey(entryLogId)) {\n+                continue;\n+            }\n+            LOG.info(\"Extracting entry log meta from entryLogId: \" + entryLogId);\n+\n+            // Read through the entry log file and extract the entry log meta\n+            entryLogMetaMap.put(entryLogId,\n+                                extractMetaFromEntryLog(entryLogger, entryLogId));\n+        }\n+        return entryLogMetaMap;\n+    }\n+\n+    static EntryLogMetadata extractMetaFromEntryLog(EntryLogger entryLogger, long entryLogId)\n+            throws IOException {\n+        EntryLogMetadata entryLogMeta = new EntryLogMetadata(entryLogId);\n+        ExtractionScanner scanner = new ExtractionScanner(entryLogMeta);\n+        try {\n+            // Read through the entry log file and extract the entry log meta\n+            entryLogger.scanEntryLog(entryLogId, scanner);\n+            LOG.info(\"Retrieved entry log meta data entryLogId: \"\n+                     + entryLogId + \", meta: \" + entryLogMeta);\n+        } catch(IOException e) {\n+            LOG.warn(\"Premature exception when processing \" + entryLogId +\n+                     \"recovery will take care of the problem\", e);\n+        }\n+\n+        return entryLogMeta;\n+    }\n{code}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-229",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-08",
        "status": "Closed",
        "summary": "Deleted entry log files would be garbage collected again and again.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2012-04-16",
        "description": "subscription options may be null. NPE may be thrown in debug message.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-217",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-24",
        "status": "Closed",
        "summary": "NPE in hedwig client when enable DEBUG",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-04-13",
        "description": "there is typo in Bookie#shutdown. so it doesn't quit with right exit code when encountering exceptions.\n{code}\n    synchronized int shutdown(int exitCode) {\n        try {\n            if (running) { // avoid shutdown twice\n                // the exitCode only set when first shutdown usually due to exception found\n                this.exitCode = exitCode;\n                // mark bookie as in shutting down progress\n                shuttingdown = true;\n                // shut down gc thread, which depends on zookeeper client\n                // also compaction will write entries again to entry log file\n                gcThread.shutdown();\n                // Shutdown the ZK client\n                if(zk != null) zk.close();\n                this.interrupt();\n                this.join();\n                syncThread.shutdown();\n\n                // Shutdown the EntryLogger which has the GarbageCollector Thread running\n                entryLogger.shutdown();\n                // close Ledger Manager\n                ledgerManager.close();\n                // setting running to false here, so watch thread in bookie server know it only after bookie shut down\n                running = false;\n            }    \n        } catch (InterruptedException ie) {\n            LOG.error(\"Interrupted during shutting down bookie : \", ie); \n        }    \n        return exitCode;\n    }\n{code}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-216",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Minor",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-16",
        "status": "Closed",
        "summary": "Bookie doesn't exit with right exit code",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-04-11",
        "description": "LedgerHandle uses a Semaphore(opCounterSem) with a default value of 5000 permits to implement throttling for outstanding requests. This is causing a deadlock under high load. What I've observed is the following - There are a fixed number of threads created by OrderedSafeExecutor(mainWorkerPool in BookKeeper) and this is used to execute operations by PerChannelBookieClient. Under high load, the bookies are not able to satisfy requests at the rate at which they are being generated. This exhausts all permits in the Semaphore and any further operations block on lh.opCounterSem.acquire(). In this scenario, if the connection to the bookies is shut down, channelDisconnected in PerChannelBookieClient tries to error out all outstanding entries. The errorOutReadKey and errorOutAddKey functions enqueue these operations in the same mainWorkerPool, all threads in which are blocked on acquire. So, handleBookieFailure is never executed and the server stops responding. \n\nBlocking operations in a fixed size thread pool doesn't sound quite right. Temporarily, I fixed this by having another ExecutorService for every PerChannelBookieClient and queuing the operations from the errorOut* functions in it, but this is just a quick fix. I feel that the server shouldn't rely on LedgerHandle to throttle connections, but do this itself. Any other ideas on how to fix this? I'd be happy to contribute a patch. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-215",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Critical",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-09",
        "status": "Closed",
        "summary": "Deadlock occurs under high load",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Aniruddha",
        "components": [
        ],
        "creationDate": "2012-04-06",
        "description": "In PerChannelBookieClient.java, addEntry calls errorOutReadKey on encountering an exception instead of errorOutAddKey. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-213",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-19",
        "status": "Closed",
        "summary": "PerChannelBookieClient calls the wrong errorOut function when encountering an exception",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-04-06",
        "description": "I have written down a short app to try to reproduce one problematic case reported on the user list. The app does the following:\n\n# It creates initially a number of ledgers, say 2000;\n# Once it reaches 2000, for each new ledger it creates, it deletes the one at the head of the list;\n# Before closing the ledger, it adds 5 entries of 1k, just to generate some traffic for any given ledger.\n\nWhat I tried to achieve is to have thousands of active ledgers and delete new ledgers as I create new ones. I'll post a link to my test code later. \n\nAt some point, one bookie stops responding. The bookie seems to be up, but it is not responsive. Looking at the logs, this is what I see:\n\n{noformat}\n2012-04-06 12:22:05,765 - INFO  [SyncThread:LedgerCacheImpl@682] - Ledger 1726 is evicted from file info cache.\n2012-04-06 12:22:05,769 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1727 is evicted from file info cache.\n2012-04-06 12:22:05,772 - INFO  [SyncThread:LedgerCacheImpl@682] - Ledger 1728 is evicted from file info cache.\n2012-04-06 12:22:05,780 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1729 is evicted from file info cache.\n2012-04-06 12:22:05,787 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1730 is evicted from file info cache.\n2012-04-06 12:22:05,794 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1731 is evicted from file info cache.\n2012-04-06 12:22:05,801 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1732 is evicted from file info cache.\n2012-04-06 12:22:05,807 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1733 is evicted from file info cache.\n2012-04-06 12:22:05,822 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1734 is evicted from file info cache.\n2012-04-06 12:22:05,828 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1735 is evicted from file info cache.\n2012-04-06 12:22:05,842 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1736 is evicted from file info cache.\n2012-04-06 12:22:05,851 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1737 is evicted from file info cache.\n2012-04-06 12:22:05,856 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1738 is evicted from file info cache.\n2012-04-06 12:22:05,864 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1739 is evicted from file info cache.\n2012-04-06 12:22:05,874 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1740 is evicted from file info cache.\n2012-04-06 12:22:05,885 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1741 is evicted from file info cache.\n2012-04-06 12:22:05,894 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1742 is evicted from file info cache.\n2012-04-06 12:22:05,902 - INFO  [NIOServerFactory-3181:LedgerCacheImpl@682] - Ledger 1743 is evicted from file info cache.\n2012-04-06 12:22:05,987 - INFO  [GarbageCollectorThread:LedgerCacheImpl@682] - Ledger 1744 is evicted from file info cache.\n2012-04-06 12:22:05,987 - ERROR [GarbageCollectorThread:GarbageCollectorThread$1@244] - Exception when deleting the ledger index file on the Bookie: \njava.io.IOException: /home/fpj/bk/current/1/b/10b.idx not found\n        at org.apache.bookkeeper.bookie.FileInfo.checkOpen(FileInfo.java:118)\n        at org.apache.bookkeeper.bookie.FileInfo.close(FileInfo.java:194) \n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.deleteLedger(LedgerCacheImpl.java:619) \n        at org.apache.bookkeeper.bookie.GarbageCollectorThread$1.gc(GarbageCollectorThread.java:242)\n        at org.apache.bookkeeper.meta.AbstractZkLedgerManager.doGc(AbstractZkLedgerManager.java:274)\n        at org.apache.bookkeeper.meta.FlatLedgerManager.garbageCollectLedgers(FlatLedgerManager.java:168)\n        at org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers(GarbageCollectorThread.java:237)\n        at org.apache.bookkeeper.bookie.GarbageCollectorThread.run(GarbageCollectorThread.java:206) \n2012-04-06 12:22:05,987 - INFO  [GarbageCollectorThread:LedgerCacheImpl@682] - Ledger 1745 is evicted from file info cache.\n{noformat}\n\nThere are lots of exceptions like that, but otherwise I don't see anything that could make the bookie unresponsive. I'll upload the logs as well.   ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-212",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-09",
        "status": "Closed",
        "summary": "Bookie stops responding when creating and deleting many ledgers",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-04-06",
        "description": "A number of times when I start a bookie with a clean state, it fails to start and I get the following exceptions:\n\n{noformat}\n2012-04-06 10:54:42,201 - ERROR [main:Bookie@348] - Error accessing cookie on disks\njava.io.FileNotFoundException: *path*/current/VERSION (No such file or directory)\n        at java.io.FileOutputStream.open(Native Method)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:179)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:131)\n        at org.apache.bookkeeper.bookie.Cookie.writeToDirectory(Cookie.java:114)\n        at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:337)\n        at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:401)\n        at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:75)\n        at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:294)\n2012-04-06 10:54:42,203 - ERROR [main:BookieServer@308] - Exception running bookie server :\norg.apache.bookkeeper.bookie.BookieException$InvalidCookieException: java.io.FileNotFoundException: *path*/current/VERSION (No such file or directory)\n        at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:349)\n        at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:401)\n        at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:75)\n        at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:294)\nCaused by: java.io.FileNotFoundException: *path*/current/VERSION (No such file or directory)\n        at java.io.FileOutputStream.open(Native Method)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:179)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:131)\n        at org.apache.bookkeeper.bookie.Cookie.writeToDirectory(Cookie.java:114)\n        at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:337)\n\n{noformat}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-211",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-10",
        "status": "Closed",
        "summary": "Bookie fails to to start",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-04-05",
        "description": "The variable READAHEAD_ENABLED in org.apache.hedwig.server.common.ServerConfiguration has a value \"readhead_enabled\" when it should be \"readahead_enabled\". There is an \"a\" missing. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-209",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Minor",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-15",
        "status": "Closed",
        "summary": "Typo in ServerConfiguration for READAHEAD_ENABLED",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-04-02",
        "description": "Bench bookie tests latency of addEntry to a single bookie. Currently it simply writes to a specified ledger id. If this ledger id doesn't exist in zookeeper, the ledger is GC'd from the bookie and errors occur in the bench.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-207",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-03",
        "status": "Closed",
        "summary": "BenchBookie doesn't run correctly",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-03-30",
        "description": "we found that replaying entries of deleted ledgers would exhaust ledger cache. then ledger cache would no clean page to grab, it would throw following exception.\n\n{code}\njava.util.NoSuchElementException\n        at java.util.LinkedList.getFirst(LinkedList.java:109)\n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.grabCleanPage(LedgerCacheImpl.java:454)\n        at org.apache.bookkeeper.bookie.LedgerCacheImpl.putEntryOffset(LedgerCacheImpl.java:165)\n{code}\n\nthis issue is because bookie grabs a clean page but fail to updating page due to NoLedgerException, but bookie doesn't return this clean page back to ledger cache. so the ledger cache is exhausted, when new ledger want to grab a clean page, it failed to find available page.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-198",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-31",
        "status": "Closed",
        "summary": "replaying entries of deleted ledgers would exhaust ledger cache.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2012-03-30",
        "description": "In the current implementation of HedwigConsole.java, The same server-cfg file (default = hedwig-server/conf/hw_server.conf) is used to load both hubServerConf and bkClientConf. This seems incorrect because both have different option names. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-197",
        "labels": [
        ],
        "openingVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "priority": "Minor",
        "reporter": "Aniruddha",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-16",
        "status": "Closed",
        "summary": "HedwigConsole uses the same file to load bookkeeper client config and hub server config",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-03-28",
        "description": "From IRC: \n\n21:58 <johnnagro> 2012-03-28 05:15:19,669 - ERROR [main-EventThread:AbstractZkLedgerManager$2@105] - Error polling ZK for the available ledger nodes: \n21:58 <johnnagro> org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /ledgers/idgen/ID-0000106522\n21:58 <johnnagro>         at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n21:58 <johnnagro>         at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n21:58 <johnnagro>         at org.apache.bookkeeper.meta.AbstractZkLedgerManager$2.processResult(AbstractZkLedgerManager.java:105)\n21:58 <johnnagro>         at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:594)\n21:58 <johnnagro>         at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497)\n21:58 <johnnagro> i will look for the gc one\n21:59 <ivank> thats quite strange\n22:00 <ivank> this occurred in the server?\n22:02 <johnnagro> ah they may be related, this one has some GC stuff\n22:02 <johnnagro> 012-03-24 09:17:34,419 - WARN  [GarbageCollectorThread:HierarchicalLedgerManager@376] - Exception during garbage collecting ledgers for idgen of /ledgers\n22:02 <johnnagro> 2012-03-24 09:56:31,080 - ERROR [main-EventThread:AbstractZkLedgerManager$2@105] - Error polling ZK for the available ledger nodes: \n22:02 <johnnagro> org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /ledgers/idgen/ID-0000037474\n22:02 <johnnagro>         at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n22:02 <johnnagro>         at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n22:02 <johnnagro>         at org.apache.bookkeeper.meta.AbstractZkLedgerManager$2.processResult(AbstractZkLedgerManager.java:105)\n22:02 <johnnagro>         at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:594)\n22:02 <johnnagro>         at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497)\n22:02 <johnnagro> this happened on the server, yes.\n\n\nLooking into the code, it seems that HierarchicalLedgerManager doesn't consider idgen to be special. This is a race, between the idgen node being created and the znodes underneath being listed. The znodes underneath should never be listed.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-195",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-28",
        "status": "Closed",
        "summary": "HierarchicalLedgerManager doesn't consider idgen as a \"specialNode\"",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-03-28",
        "description": "currently we don't get the right latency value of add operations. we just compute the latency that entry added to entry log files, but the response sent back to clients only when entries are flushed to journals.\nthe right place to compute addEntry latency would be in the WriteCallback.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-194",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-29",
        "status": "Closed",
        "summary": "Get correct latency for addEntry operations for JMX.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-03-26",
        "description": "currently, we encountered such case: ledger is garbage collected by mistake, and following requests would fail due to NoLedgerException.\n\n{code}\n2012-03-23 19:10:47,403 - INFO  [GarbageCollectorThread:GarbageCollectorThread@234] - Garbage collecting deleted ledger index files.\n\n2012-03-23 19:10:48,702 - INFO  [GarbageCollectorThread:LedgerCache@544] - Deleting ledgerId: 89408\n2012-03-23 19:10:48,703 - INFO  [GarbageCollectorThread:LedgerCache@577] - Deleted ledger : 89408\n\n2012-03-23 19:11:10,013 - ERROR [NIOServerFactory-3181:BookieServer@361] - Error writing 1@89408\norg.apache.bookkeeper.bookie.Bookie$NoLedgerException: Ledger 89408 not found\n        at org.apache.bookkeeper.bookie.LedgerCache.getFileInfo(LedgerCache.java:228)\n        at org.apache.bookkeeper.bookie.LedgerCache.updatePage(LedgerCache.java:260)\n        at org.apache.bookkeeper.bookie.LedgerCache.putEntryOffset(LedgerCache.java:158)\n        at org.apache.bookkeeper.bookie.LedgerDescriptor.addEntry(LedgerDescriptor.java:135)\n        at org.apache.bookkeeper.bookie.Bookie.addEntryInternal(Bookie.java:1059)\n        at org.apache.bookkeeper.bookie.Bookie.addEntry(Bookie.java:1099)\n        at org.apache.bookkeeper.proto.BookieServer.processPacket(BookieServer.java:357)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.readRequest(NIOServerFactory.java:315)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.doIO(NIOServerFactory.java:213)\n        at org.apache.bookkeeper.proto.NIOServerFactory.run(NIOServerFactory.java:124)\n{code}\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-193",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-31",
        "status": "Closed",
        "summary": "Ledger is garbage collected by mistake.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-03-21",
        "description": "\nwhen the number of open ledgers reaches more than openFileLimit, a file info will be closed and removed from opened ledgers list. And after BOOKKEEPER-137, the ledger index file creation delayed until necessary.\n\nsuppose ledger l is removed from opened ledger list, and its index file haven't been created.\nnew add entries operations of other ledgers came into bookie server, a new page need to be grab for them. so bookie server may need to flush the dirty pages of ledger l(when page cache is full). and the flush would fail due to NoLedgerException (no index file found).\n\nactually the ledger l isn't lost, it could be recovered if restarting bookie server, but the bookie server would not work well on adding entries. \n\na proposal solution is that we need to force index creation when the ledger is evicted from open ledgers list.\n\n{code}\n2012-03-21 14:00:42,989 - DEBUG - [NIOServerFactory-5000:LedgerCache@235] - New ledger index file created for ledgerId: 4\n2012-03-21 14:00:42,990 - INFO  - [NIOServerFactory-5000:LedgerCache@241] - Ledger 2 is evicted from file info cache.\n2012-03-21 14:00:42,990 - DEBUG - [New I/O client worker #1-1:PerChannelBookieClient$2@255] - Successfully wrote request for adding entry: 0 ledger-id: 4 bookie: /10.82.129.173:5000 entry length: 70\n2012-03-21 14:00:42,990 - ERROR - [NIOServerFactory-5000:BookieServer@361] - Error writing 0@4\norg.apache.bookkeeper.bookie.Bookie$NoLedgerException: Ledger 2 not found\n        at org.apache.bookkeeper.bookie.LedgerCache.getFileInfo(LedgerCache.java:228)\n        at org.apache.bookkeeper.bookie.LedgerCache.flushLedger(LedgerCache.java:359)\n        at org.apache.bookkeeper.bookie.LedgerCache.flushLedger(LedgerCache.java:292)\n        at org.apache.bookkeeper.bookie.LedgerCache.grabCleanPage(LedgerCache.java:447)\n        at org.apache.bookkeeper.bookie.LedgerCache.putEntryOffset(LedgerCache.java:157)\n        at org.apache.bookkeeper.bookie.LedgerDescriptor.addEntry(LedgerDescriptor.java:130)\n        at org.apache.bookkeeper.bookie.Bookie.addEntryInternal(Bookie.java:1059)\n        at org.apache.bookkeeper.bookie.Bookie.addEntry(Bookie.java:1099)\n        at org.apache.bookkeeper.proto.BookieServer.processPacket(BookieServer.java:357)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.readRequest(NIOServerFactory.java:315)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.doIO(NIOServerFactory.java:213)\n        at org.apache.bookkeeper.proto.NIOServerFactory.run(NIOServerFactory.java:124)\n2012-03-21 14:00:42,991 - DEBUG - [pool-3-thread-1:PerChannelBookieClient@576] - Got response for add request from bookie: /10.82.129.173:5000 for ledger: 4 entry: 0 rc: 101\n2012-03-21 14:00:42,991 - ERROR - [pool-3-thread-1:PerChannelBookieClient@594] - Add for ledger: 4, entry: 0 failed on bookie: /10.82.129.173:5000 with code: 101\n2012-03-21 14:00:42,991 - WARN  - [pool-3-thread-1:PendingAddOp@142] - Write did not succeed: 4, 0\n\n{code}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-190",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-29",
        "status": "Closed",
        "summary": "Add entries would fail when number of open ledgers reaches more than openFileLimit.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-03-20",
        "description": "Since BOOKKEEPER-163, the zk namespace has had a cookie znode. The AbstractZkLedgerManager should disregard this when listing ledgers.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-189",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-21",
        "status": "Closed",
        "summary": "AbstractZkLedgerManager doesn't disregard cookies",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-03-20",
        "description": "There's a lot of garbage collection code in the wrong place in EntryLogger. extractMetaFromEntryLogs, and EntryLogMetadata are only every used in the GC Thread. So they should move there.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-188",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-21",
        "status": "Closed",
        "summary": "Garbage collection code is in the wrong place",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Rakesh Radhakrishnan",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-03-16",
        "description": "Permit is not releasing in the case when there is no quorum available and the readEntries operation failed from all replicas.\n\nFollowing is the condition where it checks the failure in quorum and invoking ReadCallback:\n{noformat}\nvoid sendRead(ArrayList<InetSocketAddress> ensemble, LedgerEntry entry, int lastErrorCode) {\n   if (entry.nextReplicaIndexToReadFrom >= lh.metadata.quorumSize) {\n      // we are done, the read has failed from all replicas, just fail the\n      // read\n      submitCallback(lastErrorCode);\n      return;\n   }\n{noformat}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-186",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Rakesh Radhakrishnan",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-19",
        "status": "Closed",
        "summary": "Bookkeeper throttling - permits is not released when read has failed from all replicas",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-03-13",
        "description": "the compaction test hanging on Jenkins. \n\nIvan did some investigation on this issue, and found that it wasn't hanging, it was just taking a really long time. He suggested that it is because it does a lot of I/O, theres a couple of ways we could reduce this.\n1. Only create 1 bookie\n2. Not inherit from BaseTestCase\n3. Reduce the number of entries",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-184",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-15",
        "status": "Closed",
        "summary": "CompactionTest failing on Jenkins",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-03-08",
        "description": "we found data corruption happened on entry log files.\n\n2012-03-06 07:26:14,947 - ERROR [NIOServerFactory-3181:BookieServer@413] - Error reading 229@114724\njava.io.IOException: problem found in 0@229 at position + 89030194 entry belongs to 6373236044838956613 not 114724\n        at org.apache.bookkeeper.bookie.EntryLogger.readEntry(EntryLogger.java:347)\n        at org.apache.bookkeeper.bookie.LedgerDescriptor.readEntry(LedgerDescriptor.java:180)\n        at org.apache.bookkeeper.bookie.Bookie.readEntry(Bookie.java:1081)\n        at org.apache.bookkeeper.proto.BookieServer.processPacket(BookieServer.java:386)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.readRequest(NIOServerFactory.java:315)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.doIO(NIOServerFactory.java:213)\n        at org.apache.bookkeeper.proto.NIOServerFactory.run(NIOServerFactory.java:124\n\nthen we did some investigation on failed ledger:\n\nfirst looked into ledger 114724's index file.\n\n{code}\nentry 75        :       (log:11, pos: 100526580)\nentry 76        :       (log:11, pos: 101849530)\nentry 77        :       (log:11, pos: 103176596)\nentry 78        :       (log:11, pos: 104403977)\nentry 79        :       (log:11, pos: 105756017)\nentry 80        :       (log:11, pos: 106740803)\nentry 81        :       (log:0, pos: 73365)\nentry 82        :       (log:0, pos: 1366625)\nentry 83        :       (log:0, pos: 2719276)\nentry 84        :       (log:0, pos: 4065142)\n{code}\n\nfrom entry 80, the data is written in 0 entry log which is less than 11. (means data is written to an older entry log file)\n\nthen we looked into ledger directory as below\n\n{code}\n2147483550 Mar  5 11:30 /var/bookkeeper/ledger/0.log\n  94122988 Mar  5 11:33 /var/bookkeeper/ledger/1.log\n1984247565 Mar  5 11:34 /var/bookkeeper/ledger/2.log\n    288376 Mar  5 11:34 /var/bookkeeper/ledger/3.log\n 747151813 Mar  6 03:17 /var/bookkeeper/ledger/4.log\n 410381287 Mar  6 07:43 /var/bookkeeper/ledger/5.log\n2147483363 Feb 27 19:59 /var/bookkeeper/ledger/7.log\n2147483565 Feb 29 09:40 /var/bookkeeper/ledger/9.log\n1691783168 Mar  1 03:22 /var/bookkeeper/ledger/a.log\n 125556720 Mar  1 08:30 /var/bookkeeper/ledger/b.log\n         0 Mar  1 08:33 /var/bookkeeper/ledger/c.log\n{code}\n\nthe 0-5 entry log files are overwritten.\n\nlooked into the code, found that when bookie server failed to read lastLogId, it would set the lastLogId to -1. then start writing entry log files from 0. and also there is not checking about the existen of the entry log file.\n\nit would better to scan the directories to found the biggest log id and start from it. and check whether the file exists or not when creating a new entry log file.\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-182",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-16",
        "status": "Closed",
        "summary": "Entry log file is overwritten when fail to read lastLogId.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-03-01",
        "description": "we found that the publish throughput drops down when one bookie server ran out of disk space (due to we don't do log rotation   which exhausts disk space). \n\ndid some investigation, we found that bookie server doesn't quit when encountering no disk space issue. so hub server treat this bookie server as available. The adding requests would be sent to this bookie server, some adding requests are put in journal queue to flush, but the journal flush thread has quit due to no disk space. so these adding requests didn't respond to bookie client until it read timeout and chose other bookie servers.\n\nwe did an experiment to shut down the ran-out-of-disk-space bookie, the publish throughput went up again quickly.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-180",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-08",
        "status": "Closed",
        "summary": "bookie server doesn't quit when running out of disk space",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-02-23",
        "description": "we found that some index files are lost ore some index pages aren't flushed after applying BOOKKEEPER-137 patch.\n\nthis issue can be reproduced by following sequence.\n\nindex file missing:\n\n1) create ledger 1 without writing any entries\n2) open ledger 1 which causes a recoveryRead entry(0) sent to bookie server. then an empty page is put in pageTable by mistake as below. (we should call updatePage first to check whether bookie server has this ledger)\n{code}\n                 // in ledgerCache#getEntryOffset\n                 lep = grabCleanPage(ledger, pageEntry);\n                 synchronized(this) {\n                     putIntoTable(pages, lep);\n                 }\n                 updatePage(lep);\n{code}\n3) open ledger 2 to write serval entries. a meta entry and several data entries would be put in journal.\n4) SyncThread executes to flush ledger. it first flush ledger 1, although ledger 1 has an empty page which is clean, but the code still need to call #getFileInfo, which will cause an NoLedgerException fail the flush. unfortunately, the SyncThread caught this exception and just output an error message then rollLog. the result is ledger 2 is not flushed, and its journal entries would not be replayed after restarted.\n{code}\n                 lastLogMark.markLog();\n \n                 try {\n                     ledgerCache.flushLedger(true);\n                 } catch (IOException e) {\n                     LOG.error(\"Exception flushing Ledger\", e);\n                 }\n                 try {\n                     entryLogger.flush();\n                 } catch (IOException e) {\n                     LOG.error(\"Exception flushing entry logger\", e);\n                 }\n \n                 lastLogMark.rollLog();\n{code}\n\n\nsimilar case for some index pages are not flushed.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-177",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-24",
        "status": "Closed",
        "summary": "Index file is lost or some index pages aren't flushed.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-02-17",
        "description": "See jstack attachment.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-176",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-01",
        "status": "Closed",
        "summary": "HierarchicalBookieFailureTest Hung",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-02-16",
        "description": "if a journal contains entries which the ledgers they belongs to has been deleted and garbage collected, replaying such journal would encounter NoSuchLedgerException. And the bookie can't start.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-174",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-17",
        "status": "Closed",
        "summary": "Bookie can't start when replaying entries whose ledger were deleted and garbage collected.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2012-02-16",
        "description": "I am not sure if it is a but or not.\n\nSay, I do have pc with 256 cores, and there is following code in bookkeeper:\n{code:title=BookKeeper.java|borderStyle=solid}\nOrderedSafeExecutor callbackWorker = new OrderedSafeExecutor(Runtime.getRuntime().availableProcessors());\nOrderedSafeExecutor mainWorkerPool = new OrderedSafeExecutor(Runtime .getRuntime().availableProcessors());\n{code}\nAs I understand, callbackWorker is not used at all, so it could be removed.\nAlso could be required to get more control over mainWorkerPool (say, extract interface + pass instance through contructor).\n\nMyabe there are other places in library where some thread pools are created without ability to reuse existing thread pools in application.\n\n\n\n\n\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-173",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Philipp Sushkin",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-20",
        "status": "Closed",
        "summary": "Uncontrolled number of threads in bookkeeper",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-02-14",
        "description": "ServerConfiguration cannot use more than one directory for ledgers, due to a bug in how it stores multiple values. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-171",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-15",
        "status": "Closed",
        "summary": "ServerConfiguration can't use more than one directory for ledgers",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-02-14",
        "description": "Starting a thread in a constructor is bad[1]. Also, it makes unit testing on Bookie a bit of a pain. For this reason, i've refactored the thread starting code out, so that to start the bookie, you call start() like you usually have to for a thread anyhow. As a bonus, it fixes some findbugs issues.\n\n\n[1] http://stackoverflow.com/questions/84285/calling-thread-start-within-its-own-constructor",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-170",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-15",
        "status": "Closed",
        "summary": "Bookie constructor starts a number of threads",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2012-02-14",
        "description": "bookie server hangs on reading header part when reading partial header index file (whose header part is less than 1k). This kind of index file existed because bookie server shuts down when writing header of index file.\n\nbookie server should check file size when reading header. in pre-v3 journal, we don't have master key stored in journal, so if master key is missing, we have no chance to repair it just throw an IOException when reading header. in post-v3 journal, we store master key as an meta entry in journal, so we can rewrite the header part.\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-169",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-17",
        "status": "Closed",
        "summary": "bookie hangs on reading header when encountering partial header index file",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-02-08",
        "description": "currently, we don't use ClientConfiguration to initialize PerChannelBookieClient. so the readtimeout settings are not applied to PerChannelBookieClient.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-167",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-08",
        "status": "Closed",
        "summary": "PerChannelBookieClient doesn't use ClientConfiguration",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-02-07",
        "description": "Entries in the bookie's journal are written in the format <len><entry>\n\nIf the bookie crashes while writing the length part, then the bookie will not be able to recover the journal.\nAn unlikely situation to happen as this is only 1 int, but an issue none the less.\n\nThere is a testcase in BOOKKEEPER-165 which will trigger this when enabled (BookieJournalTest#testTruncatedInLenJournal).\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-166",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-30",
        "status": "Closed",
        "summary": "Bookie will not recover its journal if the length prefix of an entry is truncated",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client",
            "bookkeeper-server"
        ],
        "creationDate": "2012-02-07",
        "description": "bookkeeper client treats NoSuchLedgerException as valid response when reading last confirmed. If NoSuchLedgerException is caused due to an empty directory in following cases, it is an incorrect response. \n\n1) A disk is replaced or ledger index is removed by a sloppy admin.\n2) A disk is not mounted when a bookie machine is restarted.\n\nWe need a mechanism to prevent such incorrect responses.\n\nIvan suggested to generate a instance key for each bookie and write it into the ledger directories. If a directory doesn't have the key, and other directories do, then it shouldn't start. This would also resolve the issue that someone starting a new bookie with the same IP as a bookie which has previously died.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-163",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-13",
        "status": "Closed",
        "summary": "Prevent incorrect NoSuchLedgerException for readLastConfirmed.",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Flavio Paiva Junqueira",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-02-07",
        "description": "Two bookkeeper clients.\n1st continuously writing to ledger X.\n2nd (bk.openLedgerNoRecovery) polling ledger X for new entries and reading them.\n\nIn response we always reveiceing 0 as last confirmed entry id (in fact we are receiving -1 from each bookie RecoveryData but then in ReadLastConfirmedOp, but uninitialized \"long maxAddConfirmed;\" takes priority in Math.max(...).\n\nMain question - is given scenario is expected to work at all?\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-162",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Critical",
        "reporter": "Philipp Sushkin",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-13",
        "status": "Closed",
        "summary": "LedgerHandle.readLastConfirmed does not work",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-02-06",
        "description": "A hashedWheelTimer can only be stopped once, but in the current implementation, only one HashedWheelTimer is used per PerChannelBookieClient which can connect and disconnect many time. Currently stop the hashWheelTimer any time a channel is disconnected, but only create it once in the constructor. This causes exceptions to be thrown in the netty callback thread.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-161",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-07",
        "status": "Closed",
        "summary": "PerChannelBookieClient tries to reuse HashedWheelTimer, throws Exception",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-01-29",
        "description": "The test fails for me intermittently. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-156",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-08",
        "status": "Closed",
        "summary": "BookieJournalRollingTest failing ",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-01-16",
        "description": "Currently creating ledger path and writing ledger metadata are not in a transaction. so if the bookkeeper client (hub server uses bookkeeper client) is crashed, we have a ledger existed in zookeeper with zero-length metadata. we can't open/close it.\n\nwe should create the ledger path with initial metadata to avoid such case. besides that, we need to add code in openLedgerOp to handle zero-length metadata for backward compatibility.\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-153",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-01-18",
        "status": "Closed",
        "summary": "Ledger can't be opened or closed due to zero-length metadata",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-01-11",
        "description": "Suppose we have a unclosed ledger L, whose ensemble size is 2, quorum size is 2. the ledger's current ensemble is <bk1, bk2>.\n\nbk2 is crashed. \n\nwe use recovery tool to recover entries in bk2. $ bookkeeper-server/bin/bookkeeper org.apache.bookkeeper.tools.BookKeeperTools bk2 \n\nrecovery failed due to recovery tool can't open ledger L, since ledger L doesn't have enough quorum to readLastConfirmed entry. (asyncOpenLedgerNoRecovery)\n\n\n\n\n\n\n\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-152",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-13",
        "status": "Closed",
        "summary": "Can't recover a ledger whose current ensemble contain failed bookie.",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client"
        ],
        "creationDate": "2012-01-03",
        "description": "suppose a ledger is created as ensemble size 3 and quorum size 3.\n3 entries is added in this ledger, entry ids are 0, 1, 2.\n\nthis ledger is not closed. then a bookie server is down.\n\nthe ledger is opened. it would be recovered in following steps:\n1) retrieve LAC from all bookie ensemble to get maxAddConfirmed. then maxAddPushed would be 2 and maxAddConfirmed would be 1. then lastAddConfirmed would be 1.\n2) doRecovery read lastAddConfirmed + 1 (2). it would return right data since there is still 2 replicas.\n3) doRecovery add entry 2. but it would fail since there is not enough bookies to form a new ensemble.\n4) this ledger will be closed with lastAddConfirmed (1). entry 2 will be lost.\n\nthis issue happened in hub server. old ledger will be recovered and closed when changing ownership. so published messages would be lost.\n\nwe should not close ledger when we encountered exception during recovery adding, otherwise we would lose entries.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-150",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2012-01-17",
        "status": "Closed",
        "summary": "Entry is lost when recovering a ledger with not enough bookies.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2012-01-02",
        "description": "This is due to running out of DirectBufferMemory in TestFencing which doesn't get garbage collected as normal memory does. TestFencing creates too many BookKeeper client instances, and this is what exhausts the buffers.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-148",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-01-11",
        "status": "Closed",
        "summary": "Jenkins build is failing",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-21",
        "description": "to repro\n{code}\nwhile [ $? = 0 ]; do mvn test -Dtest=TestConcurrentTopicAcquisition; done\n{code}\n\nThe stacktrace where it hangs looks very like BOOKKEEPER-5\n\n{code}\n\"main\" prio=5 tid=102801000 nid=0x100601000 waiting on condition [1005ff000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <7bd8e1090> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)\n\tat java.util.concurrent.ThreadPoolExecutor.awaitTermination(ThreadPoolExecutor.java:1253)\n\tat org.jboss.netty.util.internal.ExecutorUtil.terminate(ExecutorUtil.java:107)\n\tat org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.releaseExternalResources(NioClientSocketChannelFactory.java:143)\n\tat org.apache.hedwig.client.netty.HedwigClientImpl.close(HedwigClientImpl.java:234)\n\tat org.apache.hedwig.client.HedwigClient.close(HedwigClient.java:70)\n\tat org.apache.hedwig.server.topics.TestConcurrentTopicAcquisition.tearDown(TestConcurrentTopicAcquisition.java:99)\n\tat junit.framework.TestCase.runBare(TestCase.java:140)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n\tat junit.framework.TestResult.runProtected(TestResult.java:128)\n\tat junit.framework.TestResult.run(TestResult.java:113)\n\tat junit.framework.TestCase.run(TestCase.java:124)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)\n\n{code}",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-146",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-25",
        "status": "Closed",
        "summary": "TestConcurrentTopicAcquisition sometimes hangs",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-12-12",
        "description": "Currently we use hex string to format log id.\nBut we don't parse log id correctly.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-142",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-16",
        "status": "Resolved",
        "summary": "Parsing last log id is wrong, which may make entry log files overwritten",
        "updatedDate": "2011-12-16"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2011-12-06",
        "description": "Hub server doesn't subscribe remote region correctly in following cases: (assume there is 3 regions, A, B, C)\n\n1. region shuts down before first subscribe.\n\n1) region C is down.\n2) subscribe-a subscribe a topic in region A. a subscription state is created in region A's zookeeper. but remote subscribe to region C would fail since region C is down. hub server will respond client that subscribe failed without deleting subscription state. The following subscriptions using same subscribe id and same topic would failed due to NodeExists.\n\n2. region shuts down when attaches existing subscriptions.\n\n1) In region A, there is a local subscriber a for topic T. in region B, subscriber b for topic T. in region B, subscribe c for topic T.\n2) servers are all restarted in all three regions. But region C is network-partitioned (or shuts down) from region A and region B.\n3) subscriber b and subscribe c try to subscribe T again. hub servers in region B, C will try to remote subscribe region A, but should failed. There is no mechanism to retry remote subscribe. so if messages are published to topic T in region A, subscribe b and subscribe c would receive any message.  ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-140",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-21",
        "status": "Closed",
        "summary": "Hub server doesn't subscribe remote region correctly when a region is down.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-02",
        "description": "As summary",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-139",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-02",
        "status": "Closed",
        "summary": "Binary packages do not carry NOTICE.txt",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-02",
        "description": "As summary says, should be apache copyright. ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-138",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-02",
        "status": "Closed",
        "summary": "NOTICE.txt is invalid",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-02",
        "description": "This is an optimization to speed up the case where we have many ledgers and are writing to them at random (a benchmark case we currently have). Currently, we create the ledger index file and write the first 1k of it to disk immediately. With a lot of ledgers being randomly written to, this means a lot of random writes on the ledger disk. This fix postpones the creation of the index file and writing of the first 1k until the first flush of the ledger.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-137",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-09",
        "status": "Closed",
        "summary": "Do not create Ledger index files until absolutely necessary.",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-02",
        "description": "When fencing, the ledger handle is not checked before the fencing is applied. Currently the openLedger does fail, on because it will addEntry and fail at that point, but by this stage, fencing has already been applied. The check should be earlier.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-135",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-02",
        "status": "Closed",
        "summary": "Fencing does not check the ledger masterPasswd",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-12-01",
        "description": "Removed lib directories which were used for storing old zk jars.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-134",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-01",
        "status": "Closed",
        "summary": "Delete superfluous lib directories",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2011-12-01",
        "description": "Currently hub server use counter-based mechanism to update subscription state lazily to zookeeper.\nBut in the following case, it didn't do it.\n1) losing ownership of Topic\n2) hub server shuts down\n3) a subscription channel disconnected",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-133",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-22",
        "status": "Closed",
        "summary": "Hub server should update subscription state to zookeeper when losing topic or shutting down",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            },
            {
                "id": 12319145,
                "name": "4.1.0",
                "releaseDate": "2012-06-13"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-30",
        "description": "The zookeeper test jar in maven has changed name since development. Whats more, the new name is incompatible with maven <type>test-jar</type>.\n\nThis must be fixed before releasing.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-131",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-12-01",
        "status": "Closed",
        "summary": "Fix zookeeper test dependency",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-client",
            "bookkeeper-server"
        ],
        "creationDate": "2011-11-30",
        "description": "there is a typo ZK_TIMEOUT in client/server configuration:\n\n{code}\n    public ClientConfiguration setZkTimeout(int zkTimeout) {\n        setProperty(ZK_SERVERS, Integer.toString(zkTimeout));\n        return this;\n    }\n{code}",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-129",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-30",
        "status": "Closed",
        "summary": "ZK_TIMEOUT typo in client/server configuration",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-29",
        "description": "These got missed with BOOKKEEPER-41. It's basically a maven assembly file, and making bookkeeper and hedwig scripts executable. Also, for the servers, make log4j and the slf4j log4j adapter, real dependencies, so logging can be enabled.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-128",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-30",
        "status": "Closed",
        "summary": "pom and script modifications required for generating release packages",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-29",
        "description": "As summary says.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-127",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-29",
        "status": "Closed",
        "summary": "Make poms use official zookeeper 3.4.0",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-29",
        "description": "Seems to have crept back in in test which were in the air when the original log4j->slf4j went in.\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-125",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-29",
        "status": "Closed",
        "summary": "log4j still used in some places",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-28",
        "description": "run: mvn apache-rat:check,\n\nIt gives errors. Rat is used to check all files have licenses etc.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-124",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-29",
        "status": "Closed",
        "summary": "build has RAT failures",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-25",
        "description": "Some of the keys are CamelCase, some are with underscores. I think we should standardize on CamelCase.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-119",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-28",
        "status": "Closed",
        "summary": "Keys in configuration have inconsistent style",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-11-23",
        "description": "Currently we found that hedwig cpp client doesn't kill and remove old subscription channels after redirection, so there is lots of unused channels.\n\nNot sure whether hedwig java client has the same issue, need to check it.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-118",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-28",
        "status": "Closed",
        "summary": "Hedwig client doesn't kill and remove old subscription channel after redirection.",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-18",
        "description": "After adding configuration to Bookkeeper, localbookie doesn't start because it fails to find /tmp/bk-txn.\n\nThe problem is that the configuration uses addProperty where it should use setProperty.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-115",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-18",
        "status": "Closed",
        "summary": "LocalBookKeeper fails after BOOKKEEPER-108",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-17",
        "description": "This is not correctness issue, but it is ugly to throw an NPE there. \n\n{noformat}\nRunning org.apache.bookkeeper.test.BookieFailureTest\nNov 17, 2011 2:48:28 PM org.jboss.netty.channel.DefaultChannelFuture\nWARNING: An exception was thrown by ChannelFutureListener.\njava.lang.NullPointerException\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.addEntry(PerChannelBookieClient.java:231)\n\tat org.apache.bookkeeper.proto.BookieClient$1.operationComplete(BookieClient.java:85)\n\tat org.apache.bookkeeper.proto.BookieClient$1.operationComplete(BookieClient.java:78)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient$1.operationComplete(PerChannelBookieClient.java:158)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:381)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListeners(DefaultChannelFuture.java:372)\n\tat org.jboss.netty.channel.DefaultChannelFuture.setSuccess(DefaultChannelFuture.java:316)\n\tat org.jboss.netty.channel.socket.nio.NioWorker$RegisterTask.run(NioWorker.java:767)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.processRegisterTaskQueue(NioWorker.java:256)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:198)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:680)\n{noformat}\n\nThe fix should be trivial, though.",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-113",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-02-24",
        "status": "Closed",
        "summary": "NPE In BookKeeper test",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2011-11-15",
        "description": "Bookie recovery updates the ledger metadata in zookeeper. LedgerHandle will not get notified of this update, so it will try to write out its own ledger metadata, only to fail with KeeperException.BadVersion. This effectively fences all write operations on the LedgerHandle (close and addEntry). close will fail for obvious reasons. addEntry will fail once it gets to the failed bookie in the schedule, tries to write, fails, selects a new bookie and tries to update ledger metadata.\n\nUpdate Line 605, testSyncBookieRecoveryToRandomBookiesCheckForDupes(), when done\nAlso, uncomment addEntry in TestFencing#testFencingInteractionWithBookieRecovery()",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-112",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-31",
        "status": "Closed",
        "summary": "Bookie Recovery on an open ledger will cause LedgerHandle#close on that ledger to fail",
        "updatedDate": "2013-08-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-11-04",
        "description": "should use freeaddrinfo to free struct addrinfo, instead of using free directly.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-107",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-08",
        "status": "Closed",
        "summary": "memory leak in HostAddress of hedwig c++ client",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-11-04",
        "description": "As the summary says, if you don't specify a destBookie when doing recoveryBookieData, it will select at random from the available bookie list. It doesn't take care to select a bookie which is not is the ledgers ensemble.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-106",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-15",
        "status": "Closed",
        "summary": "recoveryBookieData can select a recovery bookie which is already in the ledgers ensemble",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2011-10-27",
        "description": "Some hedwig tests have minor build errors.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-100",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Daniel Gómez Ferro",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-27",
        "status": "Closed",
        "summary": "Some hedwig tests have build errors",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-10-26",
        "description": "As comment in [BOOKKEEPER-93 | https://issues.apache.org/jira/browse/BOOKKEEPER-93], double callbacks happen even it success callback receiving enough valid responses.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-94",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-26",
        "status": "Closed",
        "summary": "Double callbacks in readLastConfirmedOp which fails readLastConfirmed operation even received enough valid responses.",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-25",
        "description": "1) bookkeeper hang when openLedgerNoRecovery, since LedgerOpenOp didn't trigger callback when opening ledger no recovery.\n\n2) race condition in ReadLastConfirmOp\n\nReadLastConfirmOp callback on readEntryComplete.\na) first decrement numResponsePending\nb) then increment validResponses\nc) check validResponses to callback with OK\nb) check numResponsePending to callback with LedgerRecoveryException\n\nsupport two callbacks returns on readEntryComplete: A, B. (quorum/ensemble size : 2)\n\na) A first decrement numResponsePending from 2 to 1.\nb) A increment validResponses from 0 to 1.\nc) B then decrement numResponsePending from 1 to 0.\nd) A check numResponsePending before B check validResponse, A found the numResponsePending is 0 now. A will callback with exception. But the right action is B check validResponse and callback with OK.\n\n3) if an LegerHandle is opened by openLedgerNoRecovery, the lastAddConfirmed will be set to -1. so all read requests will be failed since readEntry id > lastAddConfirmed.\n\nso I suggested that if an LegerHandle is opened by openLegerNoRecovery, the ledgerHandle is under unsafeRead mode. close/write operations will be failed, read operations should not check condition entry_id > lastAddConfirmed.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-93",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-27",
        "status": "Closed",
        "summary": "bookkeeper doesn't work correctly on OpenLedgerNoRecovery",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-25",
        "description": "should context in ReadLastConfirmedOp not the context passed from bookieClient.readEntry.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-92",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-25",
        "status": "Closed",
        "summary": "using wrong context object in readLastConfirmedComplete callback",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-19",
        "description": "it's just a benchmark, but it is convenient to be able to use derby as a backend for the hedwig benchmark. derby does not support - in topic names.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-88",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Benjamin Reed",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-24",
        "status": "Closed",
        "summary": "derby doesn't like - in the topic names",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-19",
        "description": "The error below happens. This happens because the test starts and stops a lot of bookies, and hedwig hub for each test. Each of these allocates some Direct Buffer memory, which doesn't automatically get returned the the pool once the test is finished. The DirectByteBuffers do seem to be garbage collected, but they don't actually clean up the direct buffer memory until an internal cleaner runs later. I can't find a way to run this manually.\n\nThis happens since BOOKKEEPER-65, as the new netty allocates more direct buffers. A work around for the problem for the moment is to run test with 1G heap.\n$ mvn test -DargLine=\"-Xmx1G\"\n\n\n<snip>\nRunning org.apache.hedwig.server.integration.TestHedwigHub\nTests run: 92, Failures: 0, Errors: 47, Skipped: 0, Time elapsed: 60.523 sec <<< FAILURE!\n\nResults :\n\nTests in error: \n  testAsyncHubUnsubscribeWithInvalidSubscriberId[1](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testManualConsumeClient[2](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testManualConsumeClient[2](org.apache.hedwig.server.integration.TestHedwigHub)\n  testAttachToSubscriptionSuccess[2](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testAttachToSubscriptionSuccess[2](org.apache.hedwig.server.integration.TestHedwigHub)\n  testServerRedirect[2](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testServerRedirect[2](org.apache.hedwig.server.integration.TestHedwigHub)\n  testSubscribeAndConsume[2](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testSubscribeAndConsume[2](org.apache.hedwig.server.integration.TestHedwigHub)\n  testServerFailoverPublishOnly[2](org.apache.hedwig.server.integration.TestHedwigHub): Direct buffer memory\n  testServerFailoverPublishOnly[2](org.apache.hedwig.server.integration.TestHedwigHub)\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-87",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-17",
        "status": "Closed",
        "summary": "TestHedwigHub exhausts direct buffer memory with netty 3.2.4.Final",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-18",
        "description": "This is the LedgerHandle#close compatibility issue. I must have forgotten to clean before testing the patch last night.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-86",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-18",
        "status": "Closed",
        "summary": "bookkeeper-benchmark fails to compile after BOOKKEEPER-68",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-14",
        "description": "disk space of garbage collected entry logger files isn't reclaimed until process quit. \nit is caused by entry logger doesn't close the file channel of garbage collected files. so the process kept an reference to this file, filesystem only reclaim its space when the process quit.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-81",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-17",
        "status": "Closed",
        "summary": "disk space of garbage collected entry logger files isn't reclaimed util process quit ",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-10-14",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-80",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-08",
        "status": "Closed",
        "summary": "subscription msg queue race condition in hedwig c++ client",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-10-14",
        "description": "in our test program, we tried to startDelivery/stopDelivery different subscriptions randomly. And it core dump.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-79",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-21",
        "status": "Closed",
        "summary": "randomly startDelivery/stopDelivery will core dump in c++ hedwig client",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Sijie Guo",
        "components": [
        ],
        "creationDate": "2011-10-07",
        "description": "There are a couple of problematic cases to deal with:\ni)Other region is pushing messages faster that my bookkeeper can handle it (unlikely, but we should have an answer for\nthis setting)\nii) If there is an error from BK while persisting messages, we cannot continue (because the ordering gurantee might be\nviolated). In this case, the BK layer should give up the topic.\n\nTo retain ordering guarantees, this should be done below the Region manager in the persistence manager layer\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-74",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-03-01",
        "status": "Closed",
        "summary": "Bookkeeper Persistence Manager should give up topic on error",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-10-07",
        "description": "Fix warnings issued by FindBugs",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-72",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-05-17",
        "status": "Closed",
        "summary": "Fix warnings issued by FindBugs",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-09-29",
        "description": "The path to the protobuf spec is wrong in lib/Makefile.am. ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-71",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-28",
        "status": "Closed",
        "summary": "hedwig c++ client does not build. ",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client",
            "hedwig-server"
        ],
        "creationDate": "2011-09-28",
        "description": "1) machine perf10 is rebooted. the bookie server & hub server are not restarted automatically after reboot.\n2) client 1 & client 2 are still running. the topics owned in perf10 will be re-assigned to perf8/perf9. but they would fail because not enough bookie servers are available.\n3) after 2 hours, we found that perf10 is rebooted. we restarted bookie server & hub server on perf10\n4) then we got ServerRedirectLoopException in client.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-69",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Critical",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-18",
        "status": "Closed",
        "summary": "ServerRedirectLoopException when a machine (hosts bookie server & hub server) reboot, which is caused by race condition of topic manager",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-09-19",
        "description": "The write to ZooKeeper to store ledger metadata when closing a ledger must be conditional, otherwise concurrent clients might end up writing in a way that the update of a client overwrites the update of the other. ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-68",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-18",
        "status": "Closed",
        "summary": "Conditional setData",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-09-13",
        "description": "On some linux boxes that run a dual IPv6-IPv4 network stack, with IPv6 enabled (e.g. debian-based), there is an issue with some java programs, preventing network connections.\n\nThis results in \"org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers\" in BookieZKExpireTest test (for instance) but is actually due to a previous \"java.net.NoRouteToHostException: Network is\nunreachable\" issue.\n\nI could reproduce this on a debian 6 for instance, and the issue is similar another one detailed in a Hadoop ticket: https://issues.apache.org/jira/browse/HADOOP-6056\n\nWe should make sure IPv4 is used for builds so that one can build bookkeeper out of the box, without configuration changes to the OS.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-66",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matthieu Morel",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-30",
        "status": "Closed",
        "summary": "use IPv4 for builds",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-09-07",
        "description": "bookkeeper-benchmark and hedwig-client depend on netty 3.1.2.GA\nbookkeeper-server depends on netty 3.2.4.Final\n\nThese versions are actually incompatible, due to a change to ProtobufDecoder constructor's signature",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-65",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matthieu Morel",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-17",
        "status": "Closed",
        "summary": "fix dependencies on incompatible versions of netty",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2011-08-31",
        "description": "When a PubSubServer is instantiated in *non-standalone* mode, it creates a ZkTopicManager which takes a Zookeeper client as an argument.\nUnfortunately, this Zookeeper client may not be connected yet (not in CONNECTED state yet), and when this is the case, creation of ZkTopicManager fails, leading to failure of the PubSubServer startup.\n\nTypical error (adapted, line numbers take into account commented patching code):\njjava.io.IOException: org.apache.hedwig.exceptions.PubSubException$ServiceDownException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hedwig/standalone/hosts/x.x.x.x:4080:9876\n\tat org.apache.hedwig.server.netty.PubSubServer.instantiateTopicManager(PubSubServer.java:170)\n\tat org.apache.hedwig.server.netty.PubSubServer$3.run(PubSubServer.java:294)\n\tat java.lang.Thread.run(Thread.java:680)\nCaused by: org.apache.hedwig.exceptions.PubSubException$ServiceDownException: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /hedwig/standalone/hosts/x.x.x.x:4080:9876\n\tat org.apache.hedwig.server.topics.ZkTopicManager$4.safeProcessResult(ZkTopicManager.java:146)\netc...\n\nThis is particularly problematic for running tests that require to pass a config to the PubSubServer.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-63",
        "labels": [
        ],
        "priority": "Minor",
        "reporter": "Matthieu Morel",
        "resolution": "Fixed",
        "resolutionDate": "2011-09-05",
        "status": "Closed",
        "summary": "Hedwig PubSubServer must wait for its Zookeeper client to be connected upon startup",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-08-30",
        "description": "bookie tries to extract ledger ids from entry loggers during starting up. if some records corrupted, an IOException is thrown out.\n\nin extractLedgersFromEntryLogs function:\n\nline 459:\n                int rc = bc.read(buff, pos);\n                if (rc != data.length) {\n                    throw new IOException(\"Short read for entryLog \" + entryLogId + \"@\" + pos + \"(\" + rc + \"!=\"\n                            + data.length + \")\");\n                }",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-62",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-30",
        "status": "Closed",
        "summary": "Bookie can not start when encountering corrupted records",
        "updatedDate": "2014-12-18"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-30",
        "description": "If last record in entry log file is truncated (length of data is short than expected length), bookie went into infinite loop on reading this record.\n\nA truncated record can be caused in following cases:\n1) bookie server is killed during bookie restart to relay logs.\n2) bookie server is killed when bookie does adding entry operation.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-61",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-10-07",
        "status": "Closed",
        "summary": "BufferedChannel read endless when the remaining bytes of file is less than the capacity of read buffer",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-08-30",
        "description": "We thought BK-5 fixed this, but it still hits if you run for long enough.\n\nTo repro,\n\ntrue; while [ $? = 0 ]; do mvn test -Dtest=BookieReadWriteTest; done\n\nLeave this running for 5-6 hours, and the bug should hit. From looking at the code it could be that connect is unsynchronized, so resources could be allocated and lost by concurrent executions of connect(). ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-59",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-09-16",
        "status": "Closed",
        "summary": "Race condition in netty code allocates and orphans resources (BK-5 revisited)",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-08-29",
        "description": "As subject says, BK-38 introduces a bug that stops BookieClientTest from running. To run: mvn test -Dtest=BookieClientTest",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-58",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-29",
        "status": "Closed",
        "summary": "Changes introduced in BK-38 cause BookieClientTest to hang indefinitely.",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-29",
        "description": "In Bookie.java, if the recovery time is longer than gcWaitTime, bookie.zk is null and gc thread will exit",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-57",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "xulei",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-31",
        "status": "Closed",
        "summary": "NullPointException at bookie.zk@EntryLogger",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-08-26",
        "description": "There's a race condition in the connection recovery logic in Hedwig client. The message handler user set might be overwritten incorrectly. \n\nWhen handling channelDisconnected event, we try to reconnect to Hedwig server. After the connection is created and subscribed, we'll call StartDelivery() to recover the message handler to the original one of the disconnected connection. But if during this process, user calls StartDelivery() to set a new message handler, it will get overwritten to the original one.\n\nThe process can be demonstrated as below:\n\n|| main thread || netty worker thread ||\n| StartDelivery(messageHandlerA) | |\n| (connection Broken here, and recovered later...) |\n|                                             | ResponseHandler::channelDisconnected()   (connection disconnected event received) |\n|                                             | new SubscribeReconnectCallback(subHandler.getMessageHandler()) (store messageHandlerA in SubscribeReconnectCallback to recover later) |\n|                                             | client.doConnect() (try reconnect)  |\n|                                             | doSubUnsub() (resubscribe) |\n|                                             | SubscriberResponseHandler::handleSubscribeResponse()  (subscription succeeds) |\n| StartDelivery(messageHandlderB)             |                                                                               |\n|                                             | SubscribeReconnectCallback::operationFinished()                               |\n|                                             | StartDelvery(messageHandlerA)   (messageHandler get overwritten)              |   \n\nI can stably reproduce this by simulating this race condition by put some sleep in ResponseHandler.\n\nI think essentially speaking we should not store messageHandler in ResponseHandler, since the message handler is supposed to be bound to connection. Instead, no matter which connection is in use, we should use the same messageHandler, the one user set last time. So I think we should change to store messageHandler in the HedwigSubscriber, in this way we don't need to recover the handler in connection recovery and thus won't face this race condition.\n\n",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-56",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Gavin Li",
        "resolution": "Fixed",
        "resolutionDate": "2012-04-28",
        "status": "Closed",
        "summary": "Race condition of message handler in connection recovery in Hedwig client",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Sijie Guo",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-08-25",
        "description": "For channelDisconnected envent, we try to automatically recover the connection and subscription. But when users call HedwigSubscriber.subscribe() at the same time, it might succeed before the auto recovery. Then the auto recovery can never succeed as the server will report topic busy failure. Then the SubscribeReconnectRetryTask will retry again and again endlessly. We found this in our auto test.\n\nFix is easy, we just need to firstly check if the channel for this topic and subscribe id is null, if not it means some subscription is already created before, we don't need to bother recover.",
        "fixedVersion": {
            "id": 12320244,
            "name": "4.2.0",
            "releaseDate": "2013-01-19"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-55",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Gavin Li",
        "resolution": "Fixed",
        "resolutionDate": "2013-01-02",
        "status": "Closed",
        "summary": "SubscribeReconnectRetryTask might retry subscription endlessly when another subscription is already successfully created previously",
        "updatedDate": "2013-02-13"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-08-25",
        "description": "outstandingMsgSet is a Set, so it is not thread-safe. The detail is as below:\n\nMessageConsumeRetryTask is In a timer, so in timer thread, when the timer is up, it will cause a outstandingMsgSet add operation:\nMessageConsumeRetryTask.run() -> outstandingMsgSet.add(message) -> outstandingMsgSet.add(message)\n\nAt the same time, in other thread(maybe main thread), there may be other operations of this outstandingMsgSet:\nMessageConsumeCallback.operationFinished() -> messageConsumed(Message message) -> outstandingMsgSet.remove(message);",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-53",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "xulei",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-28",
        "status": "Closed",
        "summary": "race condition of  outstandingMsgSet@SubscribeResponseHandler ",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-client"
        ],
        "creationDate": "2011-08-18",
        "description": "In setMessageHandler function, when subscribeMsgQueue is not empty, the main thread will consume the message in subscribeMsgQueue, at the same time, the messageHandler have been set, so the worker thread will consume new coming message in handleSubscribeMessage. So the message Sequence will be confused",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-52",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "xulei",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-30",
        "status": "Closed",
        "summary": "Message sequence confuse due to the subscribeMsgQueue@SubscribeResponseHandler",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-18",
        "description": "when unsubscribe immediately after subscribe, and before startDelivery, the deliveryPtrs is null, so the following MapMethods.removeFromMultiMap will cause a use of NullPointException",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-51",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "xulei",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-30",
        "status": "Closed",
        "summary": "NullPointException at FIFODeliveryManager#deliveryPtrs",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-18",
        "description": "the LedgerDescriptor will be created when it is missed in LedgerCache. NullPointException will be thrown out in the following case:\n\n1. The ledger descriptor is created and cached to LedgerCache because of a readEntry operation in bookie. The ledger descriptor was created without setting master key (we don't know master key in a read request)\n2. An addEntry is sent after 1 . since the ledger descriptor has been cached, so addEntry will use it to compare master key. then NullPointException is thrown out.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-50",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "xulei",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-04",
        "status": "Closed",
        "summary": "NullPointException at LedgerDescriptor#cmpMasterKey",
        "updatedDate": "2013-05-02"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "hedwig-server"
        ],
        "creationDate": "2011-08-11",
        "description": "Got NullPoint Exception when releasing topic.\n\njava.lang.NullPointerException\n        at org.apache.hedwig.server.subscriptions.AbstractSubscriptionManager.lostTopic(AbstractSubscriptionManager.java:221)\n        at org.apache.hedwig.server.topics.AbstractTopicManager.realReleaseTopic(AbstractTopicManager.java:153)\n        at org.apache.hedwig.server.topics.AbstractTopicManager.access$000(AbstractTopicManager.java:38)\n        at org.apache.hedwig.server.topics.AbstractTopicManager$1.operationFailed(AbstractTopicManager.java:140)\n        at org.apache.hedwig.util.CallbackUtils$1.tick(CallbackUtils.java:75)\n        at org.apache.hedwig.util.CallbackUtils$1.operationFailed(CallbackUtils.java:85)\n        at org.apache.hedwig.server.common.TopicOpQueuer$AsynchronousOp$1.operationFailed(TopicOpQueuer.java:54)\n        at org.apache.hedwig.server.subscriptions.AbstractSubscriptionManager$AcquireOp$1.operationFailed(AbstractSubscriptionManager.java:139)\n        at org.apache.hedwig.server.subscriptions.ZkSubscriptionManager$1.safeProcessResult(ZkSubscriptionManager.java:79)\n        at org.apache.hedwig.zookeeper.SafeAsyncZKCallback$ChildrenCallback.processResult(SafeAsyncZKCallback.java:66)\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:567)\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:481)",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-43",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-23",
        "status": "Closed",
        "summary": "NullPointException when releasing topic",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "components": [
        ],
        "creationDate": "2011-08-10",
        "description": "The information in the file is outdated.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-42",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2017-10-09",
        "status": "Resolved",
        "summary": "bookkeeper-server readme file is outdated",
        "updatedDate": "2017-10-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-08-08",
        "description": "To repro:\ntrue; while [ $? = 0 ]; do mvn test -Dtest=BookieClientTest; done\n\nProblem seems to be\n{code}\n        BookieClient bc = new BookieClient(channelFactory, executor);\n        ChannelBuffer bb;\n        bb = createByteBuffer(1, 1, 1);\n        bc.addEntry(addr, 1, passwd, 1, bb, wrcb, null);\n        synchronized (arc) {\n            bc.readEntry(addr, 1, 1, recb, arc);\n\n{code}\nThe test doesn't wait for addEntry to complete before doing a read. It should be simple to fix. ",
        "fixedVersion": {
            "id": 12319145,
            "name": "4.1.0",
            "releaseDate": "2012-06-13"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-40",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2012-01-13",
        "status": "Closed",
        "summary": "BookieClientTest fails intermittantly",
        "updatedDate": "2012-10-22"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-08",
        "description": "If we have ~500,000 topics in hedwig, we might have more than ~500,000 ledgers in bookkeeper (a topic has more than 1 ledger). So when the bookie server restarted, a logfile GC thread is started, which will call zk.getChildren to fetch all ledgers, and it failed because of package length limitation.\n\n2011-08-01 01:18:46,373 - ERROR [main-EventThread:EntryLogger$GarbageCollectorThread$1@164] - Error polling ZK for the available ledger nodes:\norg.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers\n        at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)\n        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n        at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1519)\n        at org.apache.bookkeeper.bookie.EntryLogger$GarbageCollectorThread$1.processResult(EntryLogger.java:162)\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:592)\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:481)\n2011-08-01 01:18:46,373 - WARN  [main-EventThread:Bookie$1@242] - ZK client has been disconnected to the ZK server!\n2011-08-01 01:18:47,278 - WARN  [main-SendThread(perf13.platform.mobile.sp2.yahoo.com:2181):ClientCnxn$SendThread@980] - Session 0x131833dec850034 for server perf13.platform.mobile.sp2.yahoo.com/98.139.43.86:2181, unexpected error, closing socket connection and attempting reconnect\njava.io.IOException: Packet len9976413 is out of range!\n        at org.apache.zookeeper.ClientCnxnSocket.readLength(ClientCnxnSocket.java:112)\n        at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:78)\n        at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:264)\n        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:958) ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-39",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-11-28",
        "status": "Closed",
        "summary": "Bookie server failed to restart because of too many ledgers (more than ~50,000 ledgers)",
        "updatedDate": "2016-06-08"
    },
    {
        "affectedVersions": [
            {
                "id": 12317843,
                "name": "4.0.0",
                "releaseDate": "2011-12-07"
            }
        ],
        "assignee": "Ivan Kelly",
        "components": [
            "bookkeeper-server"
        ],
        "creationDate": "2011-08-08",
        "description": "Bookie server doesn't process zookeeper watcher events and just ignore them. So when session expires, bookie server hangs there and can't do nothing.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-38",
        "labels": [
        ],
        "openingVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "priority": "Major",
        "reporter": "Sijie Guo",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-23",
        "status": "Closed",
        "summary": "Bookie Server doesn't exit when its zookeeper session is expired. So the process is hang there.",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-06-29",
        "description": "The failure doesn't hit every time. You have to run, multiple times. From bookkeeper-server, run mvn test -Dtest=BookieRecoveryTest multiple times to repro.\nTest output is attached.\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.apache.bookkeeper.test.BookieRecoveryTest\nlog4j:WARN No appenders could be found for logger (org.apache.bookkeeper.test.BaseTestCase).\nlog4j:WARN Please initialize the log4j system properly.\nTests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.794 sec <<< FAILURE!\n\nResults :\n\nTests in error: \n  testAsyncBookieRecoveryToSpecificBookie[1](org.apache.bookkeeper.test.BookieRecoveryTest)\n\nTests run: 8, Failures: 0, Errors: 1, Skipped: 0\n\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-29",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-11",
        "status": "Closed",
        "summary": "BookieRecoveryTest fails intermittently",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-06-29",
        "description": "hedwig's current startup script is messy. bookkeeper doesn't even have one. They should be created before initial release \n\nbookkeeper-server/bin/bookkeeper\nhedwig-server/bin/hedwig\n\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-28",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-30",
        "status": "Closed",
        "summary": "Create useful startup scripts for bookkeeper and hedwig",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-06-29",
        "description": "This stops javadoc from being generated.\n\n[INFO]                                                                         \n[INFO] ------------------------------------------------------------------------\n[INFO] Building hedwig-protocol 3.4.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] \n[INFO] --- maven-site-plugin:2.0.1:site (default-site) @ hedwig-protocol ---\n[INFO]                                                                         \n[INFO] ------------------------------------------------------------------------\n[INFO] Building hedwig-client 3.4.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] bookkeeper ........................................ SUCCESS [10.312s]\n[INFO] hedwig-protocol ................................... SUCCESS [0.111s]\n[INFO] hedwig-client ..................................... FAILURE [0.399s]\n[INFO] bookkeeper-server ................................. SKIPPED\n[INFO] hedwig-server ..................................... SKIPPED\n[INFO] bookkeeper-benchmark .............................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 11.104s\n[INFO] Finished at: Wed Jun 29 13:10:10 CEST 2011\n[INFO] Final Memory: 8M/81M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project hedwig-client: Could not resolve dependencies for project org.apache.bookkeeper:hedwig-client:jar:3.4.0-SNAPSHOT: Could not find artifact org.apache.bookkeeper:hedwig-protocol:jar:3.4.0-SNAPSHOT -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resum",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-27",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-07-30",
        "status": "Closed",
        "summary": "mvn site failed with unresolved dependencies",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "components": [
        ],
        "creationDate": "2011-06-02",
        "description": "In the run method of NIOServerFactory, if an exception is thrown, then we catch it and simply log. If this exception has been generated, for example, while processing an addEntry, then the client receives no response for that request.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-24",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2017-10-09",
        "status": "Resolved",
        "summary": "Client requests get no response when exception is thrown inside socket loop of NIOServerFactory",
        "updatedDate": "2017-10-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-06-01",
        "description": "The following exception causes a client to stall:\n\n{noformat}\nWARN  - [NIOServerFactory:NIOServerFactory@123] - Exception in server socket loop: /0.0.0.0\njava.util.NoSuchElementException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:796)\n        at java.util.HashMap$EntryIterator.next(HashMap.java:834)\n        at java.util.HashMap$EntryIterator.next(HashMap.java:832)\n        at org.apache.bookkeeper.bookie.LedgerCache.grabCleanPage(LedgerCache.java:429)\n        at org.apache.bookkeeper.bookie.LedgerCache.putEntryOffset(LedgerCache.java:133)\n        at org.apache.bookkeeper.bookie.LedgerDescriptor.addEntry(LedgerDescriptor.java:84)\n        at org.apache.bookkeeper.bookie.Bookie.addEntry(Bookie.java:477)\n        at org.apache.bookkeeper.proto.BookieServer.processPacket(BookieServer.java:108)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.readRequest(NIOServerFactory.java:309)\n        at org.apache.bookkeeper.proto.NIOServerFactory$Cnxn.doIO(NIOServerFactory.java:207)\n        at org.apache.bookkeeper.proto.NIOServerFactory.run(NIOServerFactory.java:118)\n\n{noformat}\n\nThe client  remains connected to the bookie, but never receives a response to the addEntry, causing the client pipeline to stall.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-22",
        "labels": [
        ],
        "priority": "Blocker",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2011-06-06",
        "status": "Closed",
        "summary": "Exception in LedgerCache causes addEntry request to fail",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "components": [
        ],
        "creationDate": "2011-05-31",
        "description": "the bookkeeper doc is currently in the zookeeper documentation. we need to move it over.",
        "issueType": "Bug",
        "key": "BOOKKEEPER-21",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Benjamin Reed",
        "resolution": "Fixed",
        "resolutionDate": "2011-06-28",
        "status": "Resolved",
        "summary": "need to move the bookkeeper doc over from zookeeper",
        "updatedDate": "2011-11-30"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-05-18",
        "description": "From LedgerCache.java\n    private static int pageLimit = (int)(Runtime.getRuntime().maxMemory() / 3) / LedgerEntryPage.PAGE_SIZE;\n\npageLimit will be negative is maxMemory is 2^31 or more. This causes exceptions later on when pageLimit is used.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-19",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Ivan Kelly",
        "resolution": "Fixed",
        "resolutionDate": "2011-05-20",
        "status": "Closed",
        "summary": "BookKeeper doesn't support more than 2Gig of memory",
        "updatedDate": "2011-11-09"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-05-16",
        "description": "When checking out from trunk, and after installing zookeeper and zookeeper test artifacts in the local maven repo, and compiling protocol buffers, the build does not work out of the box (either mvn package or mvn -fae test).\n\nI had to modify several files for managing to run the build without issues.\n\nThese modifications are included in the attached patch.\n",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-18",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Matthieu Morel",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-29",
        "status": "Closed",
        "summary": "maven build is unstable",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-02-21",
        "description": "In one my experiments, I found that a BookKeeper object was locked after I tried to halt it. By searching the Web, I found that the issue is described here:\n\nhttp://www.jboss.org/netty/community.html#nabble-td5492010\n\nI'll upload a patch to fix it. For now, I'm marking it for 3.4.0, but if there is any chance we can get it in 3.3.3, it would be nice.",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-5",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2011-08-30",
        "status": "Closed",
        "summary": "Issue with Netty in BookKeeper",
        "updatedDate": "2011-12-07"
    },
    {
        "affectedVersions": [
        ],
        "assignee": "Ivan Kelly",
        "components": [
        ],
        "creationDate": "2011-04-26",
        "description": "The following final static variable is causing LedgerDeleteTest to fail:\n\n{noformat}\nfinal static long LOG_SIZE_LIMIT = Long.getLong(\"logSizeLimit\", 2 * 1024 * 1024 * 1024L);\n{noformat}\n\nbecause the test counts on the value of the variable to change and the new maven setup uses a single process by default, so the value of the variable doesn't change. ",
        "fixedVersion": {
            "id": 12317843,
            "name": "4.0.0",
            "releaseDate": "2011-12-07"
        },
        "issueType": "Bug",
        "key": "BOOKKEEPER-1",
        "labels": [
        ],
        "priority": "Major",
        "reporter": "Flavio Paiva Junqueira",
        "resolution": "Fixed",
        "resolutionDate": "2011-05-25",
        "status": "Closed",
        "summary": "Static variable makes tests fail",
        "updatedDate": "2011-12-07"
    }
]